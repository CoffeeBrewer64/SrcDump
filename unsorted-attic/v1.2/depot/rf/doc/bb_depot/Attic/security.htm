<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./BB%20Depot%20Security_files/filelist.xml">
<title>BB Depot Security</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Alfredo D. Dark</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Alfredo D. Dark</o:LastAuthor>
  <o:Revision>95</o:Revision>
  <o:TotalTime>1516</o:TotalTime>
  <o:Created>2002-09-24T23:33:00Z</o:Created>
  <o:LastSaved>2002-09-26T21:35:00Z</o:LastSaved>
  <o:Pages>5</o:Pages>
  <o:Words>1058</o:Words>
  <o:Characters>6032</o:Characters>
  <o:Company>Meals-on-Wheels</o:Company>
  <o:Lines>50</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>7407</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:13.0pt;
	font-family:Arial;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:red;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:827523817;
	mso-list-type:hybrid;
	mso-list-template-ids:-1759190700 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l1
	{mso-list-id:855391410;
	mso-list-type:hybrid;
	mso-list-template-ids:-2074177378 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l2
	{mso-list-id:1377704442;
	mso-list-type:hybrid;
	mso-list-template-ids:1628743434 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l3
	{mso-list-id:1750734713;
	mso-list-type:hybrid;
	mso-list-template-ids:1320169232 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l4
	{mso-list-id:1771314467;
	mso-list-type:hybrid;
	mso-list-template-ids:263124196 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l4:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l5
	{mso-list-id:1881356050;
	mso-list-type:hybrid;
	mso-list-template-ids:-956001766 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<h1 align=center style='text-align:center'>BB Depot Security</h1>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center'>$Date: 2002/09/26 21:47:26 $</p>

<p class=MsoNormal align=center style='text-align:center'>$Revision:<span
style="mso-spacerun: yes">  </span>$</p>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>This document covers the infrastructure security issue for
BB Depot.<span style="mso-spacerun: yes">   </span>The infrastructure design is
independent of the content security design, in which the objective is to
protect the contents, i.e., games.<span style="mso-spacerun: yes">   </span>This
document addresses the following three issues:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='mso-list:l2 level1 lfo17;tab-stops:list .5in'>How
     to protect the BB depot and the Servers from the Internet</li>
 <li class=MsoNormal style='mso-list:l2 level1 lfo17;tab-stops:list .5in'>How
     to authenticate the service technicians to allow BB Depot setup and
     configuration</li>
 <li class=MsoNormal style='mso-list:l2 level1 lfo17;tab-stops:list .5in'>How
     to authorize financial transactions initiated from the BB Depot</li>
</ol>

<h2><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></h2>

<h2>Terminology</h2>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>HardwareID -<span style="mso-spacerun: yes">  </span>A X.509
certificate and the private key used to authenticate the BB Depot stored on
FLASH</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Secure ID – A physical device with built-in processor and
memory, supporting cryptographical functions for establishing identity.<span
style="mso-spacerun: yes">  </span>The Secure ID can be a smart-card or a USB
crypto-token.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>DepotID - A Secure ID possessed by the retailer to
authenticate financial transaction</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>ServiceID – A Secure ID possessed by the service technician
to configure the BB Depot.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Secure ID</h2>

<h3>Assumptions</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The Secure IDs are issued by a “trustworthy” authority.<span
style="mso-spacerun: yes">   </span>The operators in the OP Center cannot issue
Secure IDs. <span style="mso-spacerun: yes">  </span>The Secure ID cannot be
cloned.<span style="mso-spacerun: yes">   </span>As a result, it would be
impossible for the operators to “insert” transaction into the database, unless
they have physically obtained a DepotID.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Requirements</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The secure tokens are carried around by the retailer and the
service technician.<span style="mso-spacerun: yes">   </span>They are small in
size and cannot be cloned.<span style="mso-spacerun: yes">  </span>Additional requirements:</p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>Supports
     RSA with at least 1024 bit key length</li>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>Generates
     random numbers</li>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>Performs
     RSA key generation</li>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>RSA
     private key is protected and locked from outside accesses</li>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>Performs
     RSA encryption and decryption</li>
 <li class=MsoNormal style='mso-list:l5 level1 lfo3;tab-stops:list .5in'>Provides
     enough extra storage for the authentication chain certificates</li>
</ul>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText>(need certificate size and certificate chain length from
Pramila)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Initialization Procedure</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The Secure ID supports internal RSA key generation.<span
style="mso-spacerun: yes">  </span>The private key is generated within the
Secure ID.<span style="mso-spacerun: yes">   </span>The private key is stored
securely inside the Secure ID, but never revealed to the outside world.<span
style="mso-spacerun: yes">  </span>The Secure ID can perform
encryption/decryption of data using the private key.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>A serial number is assigned to the Secure ID.<span
style="mso-spacerun: yes">  </span>The public key is read from the Secure ID,
and then a certificate is generated and signed by a CA. <span
style="mso-spacerun: yes"> </span>The CA registers the ID into the database.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The CA is the Service-CA if the ID is a ServiceID.<span
style="mso-spacerun: yes">  </span>The CA is the Depot-CA if the ID is a
DepotID.<span style="mso-spacerun: yes">    </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Authentication Chain</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style='color:red'>Final version waiting for Pramilia’s
doc<o:p></o:p></span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l4 level1 lfo6;tab-stops:list .5in'>Root-CA
     -- signs Service-CA, Depot-CA, and Hardware-CA, and …</li>
 <ul style='margin-top:0in' type=circle>
  <li class=MsoNormal style='mso-list:l4 level2 lfo6;tab-stops:list 1.0in'>Service-CA
      - signs ServiceID</li>
  <li class=MsoNormal style='mso-list:l4 level2 lfo6;tab-stops:list 1.0in'>Depot-CA
      - signs DepotID</li>
  <li class=MsoNormal style='mso-list:l4 level2 lfo6;tab-stops:list 1.0in'>Hardware-CA<span
      style='mso-tab-count:1'>  </span>- signs HardwareID</li>
 </ul>
</ul>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Storage Management</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The certificate and the authentication chain are stored into
the Secure-ID.<span style="mso-spacerun: yes">   </span>For the ServiceID,<span
style="mso-spacerun: yes">  </span>files stored on the Secure-ID include:</p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     certificate of the ServiceID</li>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     cerfiticate of the Service-CA</li>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     certificate of the Root-CA</li>
</ul>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>For the DepotID,<span style="mso-spacerun: yes"> 
</span>files stored on the Secure-ID include:</p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     certificate of the DepotID</li>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     cerfiticate of the Depot-CA</li>
 <li class=MsoNormal style='mso-list:l3 level1 lfo9;tab-stops:list .5in'>The
     certificate of the Root-CA</li>
</ul>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>X.509 Certificates</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>RSA key size: 1024 bits.<span style="mso-spacerun: yes">  
</span><span style='color:red'>(Verify export issues to China with Chris)<o:p></o:p></span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>For ServiceID,<span style="mso-spacerun: yes">  </span>the
Subject name is C=US, ST=CA, O=iQue,<span style="mso-spacerun: yes">  </span>CN=ServiceID-xxx,<span
style="mso-spacerun: yes">   </span>where xxx is the ServiceID serial number.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>For DepotID, the Subject name is C=US, ST=CA, O=iQue,
CN=DepotID-xxx,<span style="mso-spacerun: yes">  </span>where xxx is the
DepotID serial number</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Just for completeness,<span style="mso-spacerun: yes"> 
</span>for HardwareID,<span style="mso-spacerun: yes">  </span>the Subject name
is C=US, ST=CA, O=iQue, CN=HRxxx where xxx is the BB-Depot MAC address.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText>(Verify Subject name convention)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Infrastructure Security</h2>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Assumption:<span style="mso-spacerun: yes">   </span>all
servers have a certificate signed by the root-CA for SSL connections.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>BB Depot uses SSL to connect to all servers in the operation
centers, such as CMS, CDS, RMS, and XS.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The SSL connection requires mutual authentications – the client
authenticates the server and the server authenticates the client.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Digital Signature Algorithms</h2>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The following is a summary of the RSA digital signature algorithms.<span
style="mso-spacerun: yes">   </span>It is intended to provide background to
understand the XS Transaction and the Configuration Transaction.<span
style="mso-spacerun: yes">  </span>Read PKCS#1 or RFC2437 for details.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Signature Generation</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Input:<span style='mso-tab-count:1'>    </span></p>

<p class=MsoNormal style='text-indent:.5in'>K - signer’s private key</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>M – message
to be signed</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>k – the
length in octets of the RSA modulus n</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Output:<span style='mso-tab-count:1'> </span></p>

<p class=MsoNormal style='text-indent:.5in'>S – signature</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Steps:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>EM =
PKCS1_Encode_Message(M, k)<span style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>S = RSA(K,
EM)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Signature Verification </h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Input:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>(n, e) –
signer’s public key</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>M – message
whose signature to be verified</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>S –
signature to be verified</p>

<p class=MsoNormal style='text-indent:.5in'>k – the length in octets of the RSA
modulus n</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Output:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>“Valid”
signature or “invalid” signature</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Steps:</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>If the
length of signature S is not k, output “invalid” and stop.</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>Compute EM’
= RSA((n,e), S)</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>Compute EM =
PKCS1_Encode_Message(M, k)</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>If EM ==
EM’ , output “valid”</p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>Otherwise,
output “invalid”</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>PKCS1_Encode_Message</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>See PKCS#1.<span style="mso-spacerun: yes">  </span>PKCS#1
defines two encoding algorithms.<span style="mso-spacerun: yes">   </span>Both
involve a one-way hash function and a certain way to pad the signature.<span
style="mso-spacerun: yes">   </span>EMSA-PKCS1-v1.5 is selected for its
simplicity, and MD5 is selected to be the hash function.</p>

<h3><br>
RSA Encrypt/Decrypt</h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The RSA encrypt/decrypt functions are provided by the Secure
ID.<span style="mso-spacerun: yes">   </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>XS Transaction Security</h2>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Financial transactions are authorized with the DepotID.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Currently there is only one financial transaction “<b>Purchase
E-ticket</b>” on BB Depot.<span style="mso-spacerun: yes">    </span>It is
secured using RSA digital signatures as specified in PKCS#1, or RFC2437.<span
style="mso-spacerun: yes">   </span>On the BB Depot side, the messages are
signed by the DepotID.<span style="mso-spacerun: yes">   </span>On the XS side,
the messages are signed using the XS key with OpenSSL.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText>[For XS, The SSL and transaction keys should be different.<span
style="mso-spacerun: yes">   </span>This needs to be reflected in Pramila’s
doc.]</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Def:<span style="mso-spacerun: yes">  </span></p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l1 level1 lfo13;tab-stops:list .5in'>M=(BB_id,
     Content-id) is the E-ticket purchase request.<span style="mso-spacerun:
     yes">  </span></li>
 <li class=MsoNormal style='mso-list:l1 level1 lfo13;tab-stops:list .5in'>S is
     the signature of M, signed by DepotID.</li>
 <li class=MsoNormal style='mso-list:l1 level1 lfo13;tab-stops:list .5in'>C is
     the certificate of the DepotID, and its authentication chain.</li>
</ul>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>With reference to the “Purchase E-ticket” transaction:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In step 3a, BB Depot signs M, producing S.<span
style="mso-spacerun: yes">  </span>Then sends M, S, and C to XS.</p>

<p class=MsoNormal><span style="mso-spacerun: yes"> </span></p>

<p class=MsoNormal>In step 3b, XS verifies the signature S before executing the
transaction.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In step 3d, XS signs M producing S’, and sent S’ and
“success” to the BB Depot.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>If either S or S’ does not verify, then the transaction goes
to the exception cases, and the purchase will not be completed.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The XS should store S with in the audit record.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Configuration Security</h2>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Refer to transaction “<b>Configure Depot</b>” for the
complete transaction.<span style="mso-spacerun: yes">  </span>This only covers
the security-related messages.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Installer app (IA) establishes SSL connection to Installer
Server (IS). <span style="mso-spacerun: yes"> </span><span style="mso-spacerun:
yes"> </span>It authenticates the IS using the root certificate stored on the
ServiceID.<span style="mso-spacerun: yes">   </span>Please note that this is
different from the SSL of the infrastructure security because the HardwareID
hasn’t issued yet.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>After the SSL establishment,<span style="mso-spacerun:
yes">  </span>the IA/IS perform the following additional authentication steps.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IA
     sends the ServiceID Serial number (IASN) to IS.</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IS
     sends a 64-byte random challenge, R, to IA.</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IA
     composes a response message M=(IASN, storeID, R)</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IA
     signs M using the ServiceID.<span style="mso-spacerun: yes">   </span>The
     output is S.</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IA
     sends M, S, and C to IS,<span style="mso-spacerun: yes">  </span>where C
     is the certificates of the authentication chain for ServiceID.</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IS
     verifies S.</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IS
     generates a new HardwareID and signed it with the Hardware-CA</li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo16;tab-stops:list .5in'>IS
     sends the HardwareID and configuration information for storeID to IA.</li>
</ol>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>If S cannot be verified in step 6, the IS drops the
connections immediately.</p>

</div>

</body>

</html>
