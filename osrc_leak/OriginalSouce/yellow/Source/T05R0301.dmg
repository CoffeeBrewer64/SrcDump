
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	group.def


bank7	group	G_BANK7


	public	t5_room3

	
	extern	minka_a
	extern	gyaarth_play
	extern	bank2bank


MINKA_TYPE	equ	8
EXIT		=	0ffh


t5_room3:
ysiz	=	4
xsiz	=	4
	db	MINKA_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	minka_a			; map data adrs
	dw	msg_t5r3f1		; message tbl adrs
	dw	ev_t5r3f1		; event routine adrs
	db	0			; map link flg
	dw	sxy_t5r3f1


ev_t5r3f1:
	call	init_for_talkmap

	ret


msg_t5r3f1:
	dw	msg1
	dw	msg2
	dw	msg3
	dw	msg4
	dw	msg5
	dw	msg6


msg1:
	db	CALL_MSG

	ld	a,(ev_r16 + 1)
	bit	7,a
	jr	nz,help$

	ld	hl,msg1_0$
	call	put_win_msg

	jr	rts$


help$:
	ld	hl,msg1_1$
	call	put_win_msg

rts$:
	jp	msg_return


msg1_0$:
	extern	msg1_0_0_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_1$:
	extern	msg1_1_1_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg1_1_1_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2:
	db	CALL_MSG

	ld	a,(ev_r16 + 1)
	bit	7,a
	jr	nz,help$

	ld	hl,msg2_0$
	call	put_win_msg

	jr	rts$


help$:
	ld	hl,msg2_1$
	call	put_win_msg

rts$:
	jp	msg_return


msg2_0$:
	extern	msg2_0_2_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg2_0_2_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_1$:
	extern	msg2_1_3_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg2_1_3_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3:
	extern	msg3_4_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg3_4_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加

	db	CALL_MSG

	ld	a,47
	call	gyaarth_play

	jp	msg_return


msg4:
	extern	msg4_5_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg4_5_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db	CALL_MSG

	ld	a,167
	call	gyaarth_play

	jp	msg_return


msg5:
	db	CALL_MSG

	ld	a,(ev_t5_3)
	bit	0,a
	jr	nz,obtained$

	ld	hl,msg5_0$
	call	put_win_msg

	ld	bc,73 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,msg5_1$
	call	put_win_msg

	ld	hl,ev_t5_3
	set	0,(hl)				; obtain the item

	jr	rts$


full$:
	ld	hl,msg5_2$
	call	put_win_msg

	jr	rts$


obtained$:
	ld	hl,msg5_3$
	call	put_win_msg

rts$:
	jp	msg_return


msg5_0$:
	extern	msg5_0_6_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg5_0_6_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5_1$:
	extern	msg5_1_7_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg5_1_7_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db	FANFARE6
	extern	msg5_1_8_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg5_1_8_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5_2$:
	extern	msg5_2_9_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg5_2_9_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5_3$:
	extern	msg5_3_10_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg5_3_10_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg6:
	extern	msg6_11_T05R0301
	db I_MSG2	; mvmsg追加
	dw msg6_11_T05R0301	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


sxy_t5r3f1:
	include	..\sxy\t05r0301.sxy


