	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	dealer.def
	include	vanish.def
	include	macro.h
	include	group.def


bank16	group	G_BANK16


	public	d14_room1_9f


	extern	mk_trace_cmd
	extern	search_hit
	extern	CheckAssignPos
	extern	musdoor
	extern	table_jump
	extern	bank2bank
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position
	extern	obj_stepping
	extern	capsule_item
	extern	acttbl_h_adrs
	extern	put_wait
	extern	init_hero_anime

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking

	extern	SEplay

SCHOOL_TYPE	equ	5
EXIT		=	0ffh


seq_d14r1f9	equ	seq_ctrl_buf + 63h


d14_room1_9f:
ysiz	=	13
xsiz	=	13
	db	SCHOOL_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	silf_b9			; map data adrs
	dw	msg_d14r1f9		; message tbl adrs
	dw	ev_d14r1f9		; event routine adrs
	db	0			; map link flg
	dw	sxy_d14r1f9


ev_d14r1f9:
	call	init_last

	call	init_for_talkmap

	ld	hl,dealer_talk
	ld	de,d14r1f9_tbl
	ld	a,(seq_d14r1f9)
	call	battle_sequence
	ld	(seq_d14r1f9),a

	ret



init_last:
	ld	hl,ptn_data
	bit	5,(hl)
	res	5,(hl)
	ret	z

	ld	a,(ev_d14 + 3)
	bit	7,a
	jr	nz,close$

	ld	a,030h + 01h
	ld	b,030h + 02h
	jp	bg_change$


close$:
	ld	a,070h + 02h
	ld	b,070h + 03h

bg_change$:
	push	bc

	ld	(el_c),a
	ld	bc,006h * 0100h + 002h
	call	bg_change_body$

	pop	bc
	ld	a,b
	ld	(el_c),a
	ld	bc,006h * 0100h + 003h

bg_change_body$:
	ld	a,B_BGCELL_CHANGE
	jp	bank2bank



return:
	xor	a
	ld	(seq_d14r1f9),a

	ret


d14r1f9_tbl:
	initndw	d14r1f9_main,seq_battle_main
	ndw	battle_missing,seq_battle_missing
	ndw	AfterCheck,seq_battle_after
	ndw	Step,SeqStep
	ndw	Second,SeqSecond


Second:
	ret


d14r1f9_main:
	ld	a,(ev_d14 + 3)
	bit	6,a
	ret	nz

	ld	hl,pos_table$
	call	CheckAssignPos
	jp	nc,battle_main

	xor	a
	ld	(joy_status),a

	ld	a,(usr_buf + 0)
	cp	3
	jr	nc,close$

	ld	a,MsgWataru
	ld	(work1),a
	jp	talk_map


close$:
	cp	5
	jr	z,AutoInStart

	ld	hl,ev_d14 + 3
	bit	7,(hl)
	set	7,(hl)
	ret	nz

	ld	hl,ptn_data
	set	5,(hl)

	ld	a,< musdoor
	call	SEplay

	jp	init_last


pos_table$:
	db	001h,005h
	db	002h,006h
	db	00bh,005h
	db	00bh,006h
	db	010h,018h
	db	0ffh


AfterCheck:
	call	battle_after
	ld	a,(fighting_flg)
	cp	0ffh
	jp	z,return

	ld	a,MsgWataru
	ld	(work1),a
	jp	talk_map



AutoInStart:
	ld	a,0ffh
	ld	(cancel_key),a

	ld	hl,ctrl_move_val
	ld	de,to_last$
	call	mk_trace_cmd			; hero's
	dec	a
	ld	(ctrl_move_cnt),a		; step count(observe hero's)

	call	init_hero_anime

	ld	a,SeqStep
	ld	(seq_d14r1f9),a
	ld	(AdrsDealerTalk + 9),a

	ret


to_last$:
	db	040h,12 + 1
	db	020h,12
	db	080h,7
	db	020h,6				; command top
	db	0ffh


Step:
	ld	a,(ctrl_move_cnt)
	and	a
	ret	nz

	call	put_wait

	xor	a
	ld	(cancel_key),a

	ld	(seq_d14r1f9),a
	ld	(AdrsDealerTalk + 9),a

	ret




msg_d14r1f9:
	msgndw	msg1,MsgWataru



dealer_talk:
d_talk1:
	db	MsgWataru,000h
	dw	ev_d14 + 3
	dw	msg1_0
	dw	msg1_after
	dw	msg1_win
	dw	msg1_win

	db	0ffh



msg1:
	db	CALL_MSG

	ld	hl,d_talk1
	call	DealerTalking

	jp	msg_return


msg1_0:
	extern	msg1_0_0_D14R0109
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_D14R0109	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_win:
	extern	msg1_win_1_D14R0109
	db I_MSG2	; mvmsg追加
	dw msg1_win_1_D14R0109	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_after:
	extern	msg1_after_2_D14R0109
	db I_MSG2	; mvmsg追加
	dw msg1_after_2_D14R0109	; mvmsg追加
	db 027h	; mvmsg追加


	db	CALL_MSG

	ld	hl,ev_d14 + 3
	set	6,(hl)

	jp	msg_return





sxy_d14r1f9:
	include	..\sxy\d14r0109.sxy

silf_b9:
	include	..\mapdata\lastboss.map

