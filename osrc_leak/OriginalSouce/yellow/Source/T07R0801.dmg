
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	group.def
	include	pm_debug.def


bank12	group	G_BANK12


	public	t7_room8


	extern	bank_push_call
	extern	bank2bank


DEPART_TYPE	equ	18
EXIT		=	0ffh


t7_room8:
ysiz	=	4
xsiz	=	5
	db	DEPART_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	shokudo		 	; map data adrs
	dw	msg_t7r8f1		; message adrs
	dw	event_t7r8f1		; event routine adrs
	db	0			; map link flg
	dw	room_str


event_t7r8f1:
	call	init_for_talkmap

	ret


msg_t7r8f1:
	dw	msg1
	dw	msg2
	dw	msg3
	dw	msg4
	dw	msg5


msg1:
	extern	msg1_0_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg1_0_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2:
	extern	msg2_1_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg2_1_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3:
	extern	msg3_2_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg3_2_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4:
	extern	msg4_3_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg4_3_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5:
  ifn	YELLOW_VERSION

	db	CALL_MSG

	ld	hl,msg5_main
	ld	b,G_BANK3c
	call	bank_push_call

	jp	msg_return

  else
	db	CALL_MSG

	ld	a,(ev_t7_8)
	bit	0,a
	jr	nz,yet$

	ld	hl,msg5_0$
	call	put_win_msg

	ld	bc,69 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,ev_t7_8
	set	0,(hl)

	ld	hl,msg5_1$
	call	put_win_msg

	jr	rts$


full$:
	ld	hl,msg5_2$
	call	put_win_msg

	jr	rts$


yet$:
	ld	hl,msg5_3$
	call	put_win_msg

rts$:
	jp	msg_return


msg5_0$:
	db	D_MSG
	db	u_,o_,u_,tenten2@,spc@,wa_,ra_,ttu_,te_,ku_,re_,gyoe@
	db	normal@
	db	ge__,bou@,mu__,spc@,ko__,bou@,na__,bou@,de_,spc@,su_,ttu_,te_
	db	home@
	db	i_,ti_,mo_,n_,spc@,na_,si_,ni_,spc@
	db	na_,ttu_,ti_,ma_,ttu_,ta_,gyoe@
	db	normal@
	db	mo_,u_,spc@,su__,ro__,ttu__,to__,ha_,spc@,ya_,ra_,n_,gyoe@
	db	home@
	db	zi_,mi_,ti_,ni_,spc@,ha_,ta_,ra_,ku_,zo_,gyoe@
	db	normal@
	db	tenten2@,spc@,to_,i_,u_,wa_,ke_,de_
	db	home@
	db	ko_,re_,ha_,spc@,o_,ma_,e_,ni_,spc@,ya_,ru_,gyoe@
	db	EOMwaiteom


msg5_1$:
	db	D_MSG
	db	myname@
	db	ha_,spc@,o_,ttu_,sa_,n_,spc@,ka_,ra_
	db	home@
;	db	ko__,i__,n__,ke__,bou@,su__,wo_,spc@,mo_,ra_,ttu_,ta_,gyoe@
	db	EOM
	db	I_MSG
	dw	str_buf
	db	D_MSG
	db	wo_,spc@,mo_,ra_,ttu_,ta_,gyoe@
	db	EOM
	db	FANFARE6
	db	EOM


msg5_2$:
	db	D_MSG
	db	ni_,mo_,tu_,ga_,spc@,i_,ttu_,pa_,i_,spc@,da_,ze_
	db	EOMeom


msg5_3$:
	db	D_MSG
	db	a_,bou@,a_,gyoe@
	db	home@
	db	i_,tu_,ka_,spc@,ka_,na_,ra_,zu_,spc@,ka_,te_,ru_,gyoe@,gyo3@
	db	to_,spc@,o_,mo_,ttu_,ta_,no_,ni_,spc@
	db	ko_,no_,spc@,za_,ma_,da_,tenten2@,gyoe@
	db	EOMeom

  endif



room_str: 
	include	..\sxy\t07r0801.sxy


shokudo:
	include	..\mapdata\shokudo.map




bank3c	group	G_BANK3c

  ifn	YELLOW_VERSION
msg5_main:
	ld	a,(ev_t7_8)
	bit	0,a
	jr	nz,yet$

	ld	hl,msg5_0$
	call	put_win_msg

	ld	bc,69 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,ev_t7_8
	set	0,(hl)

	ld	hl,msg5_1$
	call	put_win_msg

	jr	rts$


full$:
	ld	hl,msg5_2$
	call	put_win_msg

	jr	rts$


yet$:
	ld	hl,msg5_3$
	call	put_win_msg

rts$:
	ret
;	jp	msg_return


msg5_0$:
	extern	msg5_0_4_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg5_0_4_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5_1$:
	extern	msg5_1_5_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg5_1_5_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db	FANFARE6
	db	EOM


msg5_2$:
	extern	msg5_2_6_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg5_2_6_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg5_3$:
	extern	msg5_3_7_T07R0801
	db I_MSG2	; mvmsg追加
	dw msg5_3_7_T07R0801	; mvmsg追加
	db 02ch	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加

  endif



















