	include	common.def
	include	fntequ.def
	include	maphead.def
	include	vanish.def
	include	banktool.def
	include	dealer.def
	include	anime.def
	include	pm_debug.def
	include	macro.h
	include	group.def
	include	pikaanm.h


bank18	group	G_BANK18


	public	t5_room2_2f

	extern	table_jump
	extern	put_wait
	extern	obj_stopping
	extern	bank2bank
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position
	extern	obj_stepping
	extern	capsule_item

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking
	extern	CheckAssignPos
	extern	bank_push_call
	extern	SetActorSite

	extern	MusicStop

TOWER_TYPE	equ	15
EXIT		=	0ffh


seq_t5r2f2	equ	seq_ctrl_buf + 3bh


ZENIGAME		equ	177
FUSIGIDANE		equ	153
HITOKAGE		equ	176


t5_room2_2f:
ysiz	=	9
xsiz	=	10
	db	TOWER_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	tower2			; map data adrs
	dw	msg_t5r2f2		; message tbl adrs
	dw	ev_t5r2f2			; event routine adrs
	db	0			; map link flg
	dw	room_str


ev_t5r2f2:
	call	init_for_talkmap

	ld	hl,t5r2f2_tbl
	ld	a,(seq_t5r2f2)
	jp	table_jump



return:
	xor	a
	ld	(cancel_key),a
	ld	(seq_t5r2f2),a
	ld	(AdrsDealerTalk + 9),a

	ret


t5r2f2_tbl:
	initndw	RivalCheck,seq_battle_main
	ndw	vs_after,seq_vs_after
	ndw	ObsAway,SeqObsAway


RivalCheck:
;-----------------------------------------------;
  ifn	pm_debug
	extern	DebugKeyHook
	call	DebugKeyHook
	ret	nz
  endif
;-----------------------------------------------;

	ld	a,(ev_t5_2 + 0)
	bit	7,a
	ret	nz

	ld	hl,RivalEncount$
	call	CheckAssignPos
	ret	nc

	extern	musraibaru
	extern	direct_play
	call	MusicStop

no_bank_change$:
	ld	c,MUSIC_BANK1_NO
	ld	a,< musraibaru
	call	direct_play

	ld	hl,ev_t5_2 + 0
	res	6,(hl)

	ld	a,(usr_buf + 0)
	cp	1
	ld	a,008h
	ld	b,00h
	jr	nz,under$

	ld	hl,ev_t5_2 + 0
	set	6,(hl)

	ld	a,002h
	ld	b,0ch

under$:
	ld	(watashi_muki),a

	ld	a,msg_rival
	ld	(work1),a			; msg_after
	ld	a,b
	ld	(work2),a
	call	SetActorSite

	ld	a,msg_rival
	ld	(work1),a
	call	talk_map

	xor	a
	ld	(joy_status),a
	ld	(joy_on),a

	ret



RivalEncount$:
	db	005h,00fh
	db	006h,00eh
	db	00fh


vs_after:
	ld	a,(fighting_flg)
	cp	0ffh
	jp	z,return

	ld	a,0f0h
	ld	(cancel_key),a

	ld	hl,ev_t5_2 + 0
	set	7,(hl)

	ld	a,msg_rival
	ld	(work1),a
	call	talk_map

;	ld	a,msg_rival			; 1995.11.28
;	ld	(work1),a
;	call	obj_stopping

	ld	de,CmdAwaySouth$

	ld	a,(ev_t5_2 + 0)
	bit	6,a
	jr	nz,right$

	ld	hl,pika_avoid_t05r0202
  ifn	ASSEMBLE__BANK_CHANGE
	ld	b,G_BANK3c
  else
	ld	b,G_BANK30
  endif
	call	bank_push_call

	ld	de,CmdAwayRight$

right$:
	ld	a,msg_rival
	ld	(work1),a
	call	actor_anime_set

	call	MusicStop

	ld	b,2
	extern	set_rival_leave_music
	ld	hl,set_rival_leave_music
	call	bank_push_call

	ld	a,SeqObsAway
	ld	(seq_t5r2f2),a
	ld	(AdrsDealerTalk + 9),a

	ret


CmdAwayRight$:
	db	A_R
	db	A_D,A_D,A_R,A_D,A_D
	db	A_R,A_R
	db	A_E


CmdAwaySouth$:
	db	A_D,A_D
	db	A_R,A_R,A_R,A_R,A_D,A_D
	db	A_E


ObsAway:
	ld	a,(obs_system)
	bit	0,a
	ret	nz

	extern	T5R2F2msg1
	ld	a,< T5R2F2msg1
	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_VANISH
	call	bank2bank

	xor	a
	ld	(cancel_key),a

	extern	set_now_music
	call	set_now_music

	ld	a,seq_battle_main
	ld	(seq_t5r2f2),a
	ld	(AdrsDealerTalk + 9),a

	ret



msg_t5r2f2:
	msgndw	msg1,msg_rival
	ndw	msg2,msg_kitoushi


msg1:
	db	CALL_MSG

	ld	a,(ev_t5_2 + 0)
	bit	7,a
	jr	z,battle$

	ld	hl,msg1_after
	call	put_win_msg

	jr	rts$


battle$:
	ld	hl,msg1_0
	call	put_win_msg

	ld	hl,event_flg
	set	6,(hl)
	set	7,(hl)

	ld	hl,msg1_win			; hero lose
	ld	de,msg1_lose			; hero win
	call	set_battle_msg

	ld	a,d_rival2
	ld	(event_fight_no),a

	ld	a,(rival_monster)
	add	a,01h
	ld	(take_mons_ptn),a		; rival pattern = 2,3,4

	ld	a,seq_vs_after
	ld	(seq_t5r2f2),a
	ld	(AdrsDealerTalk + 9),a

rts$:
	jp	msg_return



msg1_0:
	extern	msg1_0_0_T05R0202
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_T05R0202	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_win:
	extern	msg1_win_1_T05R0202
	db I_MSG2	; mvmsg追加
	dw msg1_win_1_T05R0202	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_lose:
	extern	msg1_lose_2_T05R0202
	db I_MSG2	; mvmsg追加
	dw msg1_lose_2_T05R0202	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_after:
	extern	msg1_after_3_T05R0202
	db I_MSG2	; mvmsg追加
	dw msg1_after_3_T05R0202	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2:
	extern	msg2_4_T05R0202
	db I_MSG2	; mvmsg追加
	dw msg2_4_T05R0202	; mvmsg追加
	db 02bh	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


room_str:
	include	..\sxy\t05r0202.sxy


tower2:
	include	..\mapdata\nt_2f.map




  ifn	ASSEMBLE__BANK_CHANGE
bank3c	group	G_BANK3c
  else
bank30	group	G_BANK30
  endif

pika_avoid_t05r0202:
	ld	hl,pika_anm$
	ld	b,0ch			; 右
	extern	chk_pika_escape
	call	chk_pika_escape
	ret
	
pika_anm$:
	db	Pika_Init
	db	Pika_Run_South
	db	Pika_Run_West
	db	Pika_Site_East
	db	Pika_End


