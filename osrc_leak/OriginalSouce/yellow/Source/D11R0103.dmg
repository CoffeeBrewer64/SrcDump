
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	vanish.def
	include	macro.h
	include	group.def


bank14	group	G_BANK14


	public	d11_room1_3f
	public	sw_d11r1f3


	extern	table_jump
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position
	extern	obj_stepping
	extern	capsule_item
	extern	look_guide

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking

	extern	CheckAssignPos
	extern	change_door
	extern	link_door_tool

	extern	musdoor


BUILDING_TYPE	equ	22
EXIT		=	0ffh



seq_d11r1f3	equ	seq_ctrl_buf + 4eh


d11_room1_3f:
ysiz	=	14
xsiz	=	15
	db	BUILDING_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	poke_b1			; map data adrs
	dw	msg_d11r1f3		; message tbl adrs
	dw	ev_d11r1f3		; event routine adrs
	db	0			; map link flg
	dw	sxy_d11r1f3


ev_d11r1f3:
	call	switch_door_open

	call	init_for_talkmap

	ld	hl,dealer_talk
	ld	de,d11r1f3_tbl
	ld	a,(seq_d11r1f3)
	call	battle_sequence
	ld	(seq_d11r1f3),a

	ret



switch_door_open:
	ld	hl,ptn_data
	bit	5,(hl)
	res	5,(hl)
	ret	z

	ld	a,(ev_t9 + 0)
	bit	0,a
	jr	nz,change$

	ld	a,00ch + 002h
	ld	bc,8 * 256 + 13
	call	link_door_tool			; door-a

	ld	a,00ch + 002h
	ld	bc,11 * 256 + 6
	call	link_door_tool			; door-a

	ld	a,05ch + 003h
	ld	bc,3 * 256 + 4
	call	link_door_tool			; door-b

	ld	a,054h + 000h
	ld	bc,8 * 256 + 8
	call	link_door_tool			; door-b

	ret


change$:
	ld	a,02ch + 001h
	ld	bc,8 * 256 + 13
	call	link_door_tool			; door-a

	ld	a,05ch + 003h
	ld	bc,11 * 256 + 6
	call	link_door_tool			; door-a

	ld	a,00ch + 002h
	ld	bc,3 * 256 + 4
	call	link_door_tool			; door-b

	ld	a,00ch + 002h
	ld	bc,8 * 256 + 8
	call	link_door_tool			; door-b

	ret



sw_d11r1f3:
	ld	a,(actor_table + 009h)
	cp	004h
	ret	nz

	xor	a
	ld	(joy_status),a

	ld	a,msg_door
	ld	(work1),a
	jp	talk_map



d11r1f3_tbl:
	initndw	battle_main,seq_battle_main
	ndw	battle_missing,seq_battle_missing
	ndw	battle_after,seq_battle_after



msg_d11r1f3:
	msgndw	msg1,msg_doro
	ndw	msg4,msg_sylpu_w
	ndw	capsule_item,msg_capsule1
	ndw	capsule_item,msg_capsule2
	ndw	capsule_item,msg_capsule3
	ndw	capsule_item,msg_capsule4
	ndw	msg11,msg_diary
	ndw	capsule_item,msg_capsule5

	ndw	change_door,msg_door



dealer_talk:
d_talk1:
	db	msg_doro,000h
	dw	ev_d11 + 4
	dw	msg1_0
	dw	msg1_after
	dw	msg1_win
	dw	msg1_win

d_talk4:
	db	msg_sylpu_w,030h
	dw	ev_d11 + 4
	dw	msg4_0
	dw	msg4_after
	dw	msg4_win
	dw	msg4_win

	db	0ffh


msg1:
	db	CALL_MSG

	ld	hl,d_talk1
	call	DealerTalking

	jp	msg_return


msg4:
	db	CALL_MSG

	ld	hl,d_talk4
	call	DealerTalking

	jp	msg_return



msg1_0:
	extern	msg1_0_0_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_win:
	extern	msg1_win_1_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg1_win_1_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_after:
	extern	msg1_after_2_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg1_after_2_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_0:
	extern	msg4_0_3_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg4_0_3_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_win:
	extern	msg4_win_4_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg4_win_4_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_after:
	extern	msg4_after_5_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg4_after_5_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg11:
	extern	msg11_6_D11R0103
	db I_MSG2	; mvmsg追加
	dw msg11_6_D11R0103	; mvmsg追加
	db 027h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



sxy_d11r1f3:
	include	..\sxy\d11r0103.sxy

poke_b1:
	include	..\mapdata\poke_b1.map

