
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	group.def


bank12	group	G_BANK12


	public	r15_room1_2f


	extern	gate2f  	 	; map data adrs
	extern	init_for_talk2

	extern	bank2bank
	extern	bouen


GATE_TYPE	equ	12
EXIT		=	0ffh


r15_room1_2f:  
ysiz	=	4
xsiz	=	4
  	db	GATE_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	gate2f  	 	; map data adrs
	dw	msg_tbl 		; message tbl adrs
	dw	event 			; event routine adrs
	db	0			; map link flg
	dw	room_str 


event:
	jp	init_for_talk2


msg_tbl:
	dw	msg1
	dw	msg2


msg1:
	db	CALL_MSG

	ld	a,(ev_r15 + 0)
	bit	0,a
	jr	nz,yet$

	ld	a,50
	ld	(DA_BUF + 0),a
	ld	a,75
	ld	(DA_BUF + 1),a
	ld	(in_dat),a
	call	get_item_name
	ld	hl,table_data
	ld	de,anime_buf + 0
 ifn	ASSEMBLE__ENGLISH
	ld	bc, ITEM_NAME_LEN
 else
	ld	bc,9
 endif
	call	block_move

	ld	a,98				; "Assistant"
	call	bank2bank
	ld	a,(DA_BUF + 0)
	cp	1				; check to success
	jr	nz,rts$

	ld	hl,ev_r15 + 0
	set	0,(hl)

;	jr	rts$


yet$:
	ld	hl,msg1_0$
	call	put_win_msg

rts$:
;	call	cont_abwait
	jp	msg_return


msg1_0$:
	extern	msg1_0_0_R15R0102
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_R15R0102	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



msg2:
	db	CALL_MSG
	ld	hl,scope3_0$
	jp	bouen

scope3_0$:
	extern	scope3_0_1_R15R0102
	db I_MSG2	; mvmsg追加
	dw scope3_0_1_R15R0102	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


room_str:
	include	..\sxy\r15r0102.sxy

