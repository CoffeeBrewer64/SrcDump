
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	group.def


bank15	group	G_BANK15


	public	r12_room2

	extern	minka_3


MINKA_TYPE	equ	8
EXIT		=	0ffh


r12_room2:
ysiz	=	4
xsiz	=	4
	db	MINKA_TYPE
	db	ysiz,xsiz		; yx size
	dw	minka_3			; map data adrs
	dw	msg_tbl$		; message tbl adrs
	dw	event$			; event routine adrs
	db	0			; map link flg
	dw	room_str$


event$:
	jp	init_for_talkmap


msg_tbl$:
	dw	msg1$


msg1$:	
	db	CALL_MSG

	ld	a,(ev_special + 0)
	bit	5,a
	jr	nz,yet$

	ld	hl,msg1_0$
	call	put_win_msg

	extern	yes_no
	call	yes_no
	ld	a,(allow_cnt)
	and	a
	jr	nz,no$

	ld	bc,78 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,ev_special + 0
	set	5,(hl)

	ld	hl,msg1_1$
	jr	rts$


full$:
	ld	hl,msg1_4$
	jr	rts$


no$:
	ld	hl,msg1_2$
	jr	rts$


yet$:
	ld	hl,msg1_3$

rts$:
	call	put_win_msg
	jp	msg_return


msg1_0$:
	extern	msg1_0_0_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_1$:
	extern	msg1_1_1_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_1_1_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db	FANFARE
	extern	msg1_1_2_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_1_2_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_2$:
	extern	msg1_2_3_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_2_3_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_3$:
	extern	msg1_3_4_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_3_4_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_4$:
	extern	msg1_4_5_R12R0201
	db I_MSG2	; mvmsg追加
	dw msg1_4_5_R12R0201	; mvmsg追加
	db 028h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加

room_str$:
	include	..\sxy\r12r0201.sxy

