------------------- CATCH'~1 --------------------
%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 5.5
%%For: (NOA) (Nintendo Of America)
%%Title: (catch 'em if u can logo)
%%CreationDate: (5/4/98) (3:16 PM)
%%BoundingBox: -45 297 654 634
%%HiResBoundingBox: -44.421 297.7876 653.1709 633.9011
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 1.2
%AI3_ColorUsage: Color
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: -60 -59 492 671
%AI3_DocumentPreview: None
%AI5_ArtSize: 792 612
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -126 732 1 949 729 18 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%IncludeResource: procset Adobe_level2_AI5 1.0 0
%%IncludeResource: procset Adobe_screens_AI5 1.0 0
%%IncludeResource: procset Adobe_blend_AI5 1.0 0
%%IncludeResource: procset Adobe_IllustratorA_AI5 1.0 0
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
2 Bn
%AI5_BeginGradient: (Face Gradient)
(Face Gradient) 0 2 Bd
[
0 0.08 0.25 0 1 50 100 %_Bs
0 0.16 0.51 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient\012118)
(Unnamed gradient\012118) 0 2 Bd
[
0 0 0 0 1 50 100 %_Bs
0.7 0.05 0.15 0.32 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0 0.06 0.26 0 1 50 100 %_Bs
0 0.19 0.59 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 11 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
U
u
U
u
U
u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
144.3898 330.5218 m
142.5962 332.0447 140.2662 332.5788 137.6006 332.056 C
137.5063 332.0349 137.4093 332.012 137.3149 331.9911 C
134.741 331.3235 132.839 329.7888 131.5244 328.7338 C
131.2887 328.5452 130.969 328.2896 130.852 328.2085 C
127.1502 325.945 122.1606 323.1978 118.9968 321.6743 C
119.9546 328.5885 123.0512 333.8653 128.6051 337.8602 C
136.7618 343.3784 138.3482 348.7676 138.3858 352.6384 C
138.3579 356.151 137.0755 358.0221 135.9574 359.0283 C
133.1932 361.4037 129.5926 360.3326 128.36 359.9708 C
122.4281 358.1381 115.2904 351.6235 109.2584 342.6559 C
103.3325 333.6294 99.03 322.9713 98.9409 310.7892 C
98.9626 307.1864 99.9913 304.6628 102.1087 303.009 C
105.4115 300.5541 109.8204 301.1674 113.9127 302.0685 C
120.5782 303.612 136.3058 309.7919 140.9899 313.1175 C
141.1659 313.2572 141.3336 313.392 141.5096 313.5323 C
143.045 314.8581 146.9582 318.1432 147.0408 324.213 C
147.022 326.8211 146.1119 329.0063 144.3898 330.5218 C
f
*u
1 D
169.7481 340.3072 m
167.1146 350.7592 162.3976 355.6694 155.0408 354.1708 C
150.744 353.1562 143.2688 347.6792 140.706 345.0894 C
140.6538 345.0334 140.5778 344.9539 140.5255 344.898 C
138.2351 342.3614 136.9721 339.3017 136.9452 336.2272 C
136.9652 333.6379 137.8928 331.5088 139.6513 329.9793 C
140.0825 329.612 140.5336 329.3145 141.0303 329.0478 C
137.2702 324.0365 135.4813 319.4095 135.5143 314.7547 C
135.5156 314.7289 135.5146 314.7047 135.516 314.6789 C
135.7002 310.1231 138.629 305.8204 147.1663 307.3188 C
149.3924 307.7462 152.0856 308.6564 154.8988 310.1935 C
157.0368 309.3327 159.2316 309.5116 160.5723 309.7397 C
163.382 310.2502 168.2973 312.1057 169.8434 316.8519 C
171.1959 321.0695 171.2479 326.1613 171.2488 326.762 C
171.2454 329.2636 171.0887 335.4887 169.7481 340.3072 C
f
169.7733 316.632 m
169.799 316.713 169.8262 316.7941 169.8517 316.8752 C
169.8489 316.8675 169.846 316.8596 169.8434 316.8519 C
169.8204 316.7786 169.7962 316.7054 169.7733 316.632 C
f
*U
*u
0 D
163.7014 355.6997 m
163.702 355.7224 163.7042 355.7581 163.7048 355.7808 C
163.7053 355.8138 163.7036 355.8647 163.7034 355.8978 C
163.7024 355.8421 163.7024 355.7555 163.7014 355.6997 C
f
183.2256 337.419 m
183.1652 337.3886 183.0955 337.3544 183.0352 337.3239 C
183.0417 337.3264 183.0482 337.3319 183.0548 337.3344 C
183.1092 337.3611 183.1709 337.393 183.2256 337.419 C
f
1 D
189.0791 348.3531 m
188.8777 352.4823 186.8838 355.6843 183.9284 356.9744 C
183.9238 357.0421 183.9172 357.15 183.9124 357.2175 C
183.8461 358.2147 183.7606 359.5539 183.7531 359.9473 C
183.753 359.9403 183.7532 359.9286 183.7532 359.9216 C
183.7322 362.8925 182.8223 365.5029 181.0978 367.4272 C
179.1362 369.5418 176.5421 370.3324 173.5324 369.6899 C
167.9713 368.358 163.837 362.2695 163.7048 355.7808 C
163.6799 353.8627 163.8642 352.2156 164.0833 350.5687 C
161.6531 348.1641 160.1555 344.7178 160.122 340.8965 C
160.1416 338.4555 161.0324 336.3318 162.6537 334.8343 C
163.4504 334.1163 164.3242 333.6325 165.311 333.329 C
165.3897 331.4193 165.4564 329.6129 165.4582 328.5924 C
165.4638 325.819 165.7228 318.9632 165.8784 317.3147 C
165.8909 317.2111 165.9024 317.1257 165.915 317.0221 C
166.6647 312.5435 170.804 310.3927 176.3955 311.2084 C
178.9436 311.6282 181.2613 312.8677 183.1404 314.868 C
184.949 316.8471 185.9451 319.1726 185.9656 321.5107 C
185.9576 323.0172 185.5515 331.1206 185.4321 333.1755 C
185.4187 333.3216 185.4041 333.4848 185.3908 333.6309 C
185.2908 334.4694 185.1665 336.5025 185.0607 338.6606 C
187.6601 340.9393 189.2229 344.4985 189.0791 348.3531 C
f
*U
0 D
210.2927 338.1474 m
208.434 339.9304 206.0093 340.7217 203.2273 340.3805 C
202.9266 340.3419 202.6488 340.284 202.3629 340.2141 C
205.2739 342.5364 206.9668 346.2745 207.0058 351.1556 C
206.9753 355.1756 205.6062 357.5534 204.4129 358.9016 C
203.166 360.275 201.0464 361.7693 197.4358 361.2153 C
191.2583 359.9674 177.162 344.3525 176.8671 326.967 C
176.9841 318.0365 182.4773 314.1093 191.5142 315.1817 C
191.5656 315.1891 191.6162 315.1967 191.6676 315.2034 C
197.568 316.1832 212.4822 321.6512 212.7976 332.1236 C
212.7796 334.4444 211.9199 336.5335 210.2927 338.1474 C
f
233.3564 362.2507 m
231.0724 364.9355 228.3425 366.1457 225.1752 365.767 C
223.3451 365.5254 221.6531 364.9372 219.9795 364.0598 C
220.0068 366.9196 220.103 368.8804 220.1864 370.5889 C
220.247 371.8417 220.2969 372.8847 220.2987 373.9654 C
220.2757 377.3979 219.3595 380.4496 217.6244 382.7307 C
215.725 385.1447 213.25 386.1789 210.4035 385.6796 C
203.0899 384.2098 198.9816 376.7549 198.8801 366.3425 C
198.897 361.269 199.6045 354.7184 200.3257 348.5424 C
200.7931 344.5452 201.2141 341.0872 201.3678 338.6951 C
201.3759 338.5892 201.3884 338.4602 201.3966 338.3543 C
201.5647 336.7923 203.0659 324.1051 204.1177 321.176 C
204.2146 320.9222 204.3237 320.6892 204.4549 320.4557 C
206.775 316.4876 210.5036 316.5386 214.0469 316.9384 C
214.1629 316.9542 214.2767 316.9714 214.3927 316.9867 C
217.0805 317.4452 219.2937 318.7255 220.8806 320.6085 C
222.4954 319.5782 224.476 319.0722 226.8342 319.163 C
226.9772 319.1729 227.1147 319.1833 227.2576 319.1938 C
231.2184 319.6274 233.571 321.2604 234.9577 322.6568 C
236.8473 324.6131 237.8485 327.0802 237.8689 329.9605 C
237.8677 329.9076 237.8683 329.8569 237.8671 329.8039 C
237.898 330.998 238.0698 333.1782 238.2283 335.2469 C
238.4224 337.7802 238.5807 339.9707 238.5847 341.3806 C
238.5478 350.8713 236.8823 357.941 233.3564 362.2507 C
f
262.569 386.3244 m
260.3896 389.4001 257.6021 390.9761 254.6557 390.676 C
249.5239 389.9867 247.3165 383.3206 245.9234 379.3767 C
245.5836 378.4145 245.2759 377.5566 244.9478 376.7566 C
244.8665 376.5892 244.7031 376.2574 244.6213 376.0901 C
243.3621 373.5535 241.5488 369.9398 241.505 365.6823 C
241.5243 362.7591 242.347 360.2913 243.9036 358.4258 C
245.7225 356.3204 248.2501 355.3311 251.075 355.5495 C
255.5377 356.0276 260.0944 361.8103 261.5914 364.6028 C
261.6539 364.7323 261.7676 364.9597 261.8301 365.0892 C
262.6457 366.8793 265.2014 372.9996 265.2666 377.5722 C
265.2428 380.7419 264.32 383.7766 262.569 386.3244 C
f
*u
1 D
281.2718 348.7315 m
280.7873 349.2777 280.1614 349.8349 279.336 350.3275 C
279.5205 351.7287 279.5245 352.9129 279.5229 353.7768 C
279.5229 353.8189 279.5228 353.8873 279.5229 353.9293 C
279.4949 357.2684 278.2803 360.5321 275.8741 363.6211 C
272.0589 368.373 266.6438 371.0581 260.9073 370.6302 C
254.0534 369.8395 249.8556 357.6295 249.1392 347.021 C
247.7385 345.2475 246.6103 342.8222 246.5857 339.2726 C
246.6064 336.7934 247.5482 334.5245 249.1904 332.9439 C
249.3465 332.8091 249.4847 332.6937 249.6412 332.5594 C
250.3815 329.3492 251.7705 326.3372 254.2334 324.2095 C
256.5006 322.3129 259.1426 321.518 262.1437 321.6898 C
265.3206 321.9291 267.93 323.4971 273.3554 327.8729 C
273.6492 328.1089 273.9303 328.3339 274.2242 328.5709 C
274.3777 328.6893 274.5284 328.8066 274.6817 328.9253 C
278.7538 332.0828 283.582 335.8684 283.6877 341.952 C
283.6695 344.5684 282.8397 346.9284 281.2718 348.7315 C
f
0 D
262.6699 350.3742 m
262.8838 351.4925 263.1293 352.4082 263.3774 353.1665 C
264.1428 352.9516 264.7738 352.6515 265.3091 352.3167 C
264.5939 351.7798 263.8247 351.2156 263.1058 350.692 C
262.9698 350.5925 262.806 350.4736 262.6699 350.3742 C
f
253.6342 345.0012 m
253.4904 344.9378 253.3366 344.8657 253.1931 344.8016 C
253.3366 344.8657 253.4904 344.9378 253.6342 345.0012 C
f
*U
322.5683 338.4468 m
322.4472 339.9126 322.3296 341.4018 322.2986 342.7412 C
322.2249 346.0061 321.9632 351.3224 321.7573 354.4242 C
321.1361 363.0775 317.034 372.7277 309.7372 372.7435 C
306.9085 372.6644 303.6093 371.4878 300.5005 369.2701 C
298.5996 370.6776 296.5052 371.4198 294.1837 371.3391 C
291.4525 371.2052 288.9901 369.8511 286.7171 367.7891 C
284.9821 368.891 283.1696 369.1787 281.4284 369.0876 C
277.2546 368.7607 271.4729 363.1519 271.337 355.4861 C
271.3432 353.419 271.6285 351.4621 271.9776 349.1586 C
272.356 346.6682 272.8028 343.7703 273.0446 340.0773 C
273.0495 340.0235 273.0525 339.9589 273.0576 339.905 C
273.9577 329.6353 274.5787 328.3269 274.8253 327.5928 C
274.9036 327.3955 274.9791 327.2081 275.0577 327.0126 C
276.5697 323.9013 280.2136 322.2839 284.6822 322.4267 C
286.6202 322.5212 289.3516 323.2675 291.5297 324.8552 C
294.1243 323.3296 296.9588 323.4253 298.0231 323.454 C
298.0715 323.4563 298.1177 323.457 298.1661 323.4593 C
301.1733 323.6172 303.6102 324.5568 305.4562 326.2016 C
306.847 325.2225 308.9141 324.3478 312.1449 324.3682 C
316.1326 324.4489 318.5023 325.8745 319.901 327.1587 C
321.7963 328.9512 322.8007 331.333 322.8212 334.2212 C
322.8187 335.4315 322.7 336.8415 322.5683 338.4468 C
f
*u
1 D
346.5851 338.6582 m
346.3342 341.328 346.0075 345.0593 346 346.7364 C
346.003 348.6952 346.1512 351.1066 346.2767 353.1809 C
346.3778 354.8644 346.4527 356.1679 346.4557 357.2188 C
346.4449 359.4774 345.9939 361.5765 345.1371 363.5073 C
345.9061 365.1545 346.5064 367.2984 346.5213 370.4009 C
346.5007 373.7341 345.6321 376.8394 343.9938 379.3452 C
341.987 382.3119 339.3265 383.8501 335.7801 383.9164 C
330.1831 383.864 325.545 377.1557 325.4281 369.8902 C
325.4434 366.9824 326.0753 364.4906 327.2741 362.434 C
326.4236 360.4632 325.959 358.3399 325.9483 356.0237 C
325.9552 350.2453 326.2634 342.8764 326.5009 337.7782 C
326.6151 335.3295 326.7263 333.0086 326.7293 332.3352 C
326.749 329.6094 327.7072 327.3706 329.5175 325.6935 C
331.4283 323.9834 333.9813 323.1102 336.9509 323.0552 C
339.585 323.0441 342.0691 323.9003 343.9907 325.5836 C
345.973 327.3786 347.0192 329.7981 347.0414 332.7637 C
347.0377 333.8805 346.8799 335.511 346.5851 338.6582 C
f
0 D
335.7798 375.5484 m
336.3013 375.2788 336.8431 374.7409 337.3387 373.9815 C
336.8649 374.1056 336.3614 374.1725 335.7796 374.1791 C
335.2317 374.1813 334.6984 373.992 334.1813 373.6619 C
334.6446 374.535 335.2126 375.2083 335.7798 375.5484 C
f
*U
371.1255 378.9469 m
371.1015 382.5716 370.1796 386.0207 368.4371 388.8973 C
365.0931 394.1794 360.301 395.0575 358.3022 395.1629 C
351.0699 395.3445 341.4764 384.9282 340.6253 366.0092 C
338.4114 363.85 337.0487 360.2713 337.0159 356.0557 C
337.063 351.8772 339.0507 348.4605 342.2163 346.7635 C
342.4313 344.6529 342.617 342.6359 342.7873 340.8132 C
342.9353 339.2349 343.0571 337.9681 343.18 336.8929 C
343.4464 334.3965 343.8121 332.0169 344.0636 330.4208 C
344.1481 329.8867 344.2474 329.2606 344.2725 329.0677 C
344.2729 329.056 344.2749 329.0464 344.2758 329.0347 C
344.934 323.9925 350.1638 321.6838 355.0471 321.4797 C
357.5133 321.4241 359.9183 322.2326 361.8573 323.8761 C
363.6944 325.4802 364.6629 327.5137 364.6821 329.8626 C
364.6775 331.0897 364.3977 332.815 363.6632 337.5528 C
363.3669 339.4662 363.044 341.6399 362.9495 342.5678 C
362.9472 342.5914 362.9437 342.6222 362.9414 342.6458 C
362.8025 343.9166 362.5171 346.1761 362.2129 348.6293 C
362.363 348.6791 362.5086 348.7288 362.658 348.7806 C
362.9567 348.8881 363.2358 349.0141 363.519 349.17 C
366.5964 350.9268 368.3498 354.4851 368.3915 359.3902 C
368.3766 362.0479 367.7087 364.6168 366.4786 366.7737 C
367.3786 367.3476 368.0497 368.0408 368.5638 368.7199 C
371.1233 372.2201 371.1255 377.0223 371.1255 378.9469 C
f
401.7753 351.4902 m
402.0243 352.5468 402.4102 354.8916 402.419 356.9118 C
402.397 359.8277 401.4837 362.6936 399.7559 365.1999 C
397.8009 367.9505 395.251 369.6556 392.5236 369.9019 C
387.3785 370.2512 383.5996 366.8511 382.1951 361.6304 C
380.9417 362.5964 379.4452 363.2945 377.4252 363.4219 C
372.1943 363.619 368.0151 358.1166 367.9196 351.7257 C
367.9583 347.1905 369.6878 343.5147 371.365 341.3513 C
374.4311 337.369 377.7162 332.8458 379.1055 330.7075 C
378.8951 328.2164 378.7901 325.9608 378.788 323.6449 C
378.7905 322.4915 378.9493 316.5042 379.3337 314.558 C
379.3419 314.519 379.3469 314.5036 379.3542 314.4644 C
380.296 310.6742 384.4346 308.2409 389.7916 307.7819 C
394.3478 307.5056 399.4228 309.7039 399.869 314.322 C
399.976 315.9578 399.5717 317.7316 399.1207 319.7773 C
398.8609 320.9555 398.5215 322.5604 398.5145 323.2975 C
398.5756 335.9067 401.6954 351.0818 401.832 351.7434 C
401.8144 351.6711 401.7919 351.5627 401.7753 351.4902 C
f
*u
1 D
421.5424 359.5098 m
418.369 363.8846 414.3542 366.9282 410.6532 367.5092 C
410.6455 367.5141 410.6356 367.5186 410.6277 367.5229 C
409.9087 367.9123 408.6311 368.6109 406.7373 368.8082 C
404.6204 369.0012 401.8703 368.3681 399.7481 364.513 C
394.3096 358.5968 390.5453 348.3089 390.4632 339.8598 C
390.5224 331.6259 393.216 327.6128 395.5612 325.2093 C
398.6589 322.1263 402.5875 320.4817 407.3229 320.0601 C
412.0192 319.7147 416.9048 321.2127 420.8085 324.5519 C
425.1145 328.3606 427.3847 333.7626 427.4355 340.7594 C
427.3669 349.4064 424.2523 355.6815 421.5424 359.5098 C
f
400.8114 365.5586 m
400.7117 365.4701 400.592 365.3651 400.4923 365.2765 C
400.5919 365.3651 400.7116 365.4701 400.8114 365.5586 C
f
*U
0 D
455.3372 330.7497 m
455.3462 330.6952 455.3556 330.6314 455.3645 330.5768 C
455.0644 332.6542 454.5787 337.2914 454.4552 339.4931 C
454.4496 339.5664 454.4424 339.6643 454.4385 339.7378 C
454.3984 340.2185 454.3495 341.0297 454.2878 342.0205 C
453.9613 347.3284 453.6613 351.6851 452.9966 354.4863 C
452.919 354.7608 452.8431 355.0234 452.7643 355.2992 C
451.1862 359.9367 447.9139 363.1224 443.6607 363.7877 C
440.383 364.2302 437.5377 362.8808 435.4886 360.4256 C
435.4534 360.4772 435.3953 360.5612 435.3608 360.6134 C
434.0294 362.4818 431.7435 364.7897 427.7816 365.3184 C
420.5751 366.087 417.0579 359.6164 416.9742 353.1423 C
416.9772 351.7542 417.0615 348.5897 417.1986 344.0418 C
417.2568 342.0324 417.3085 340.1588 417.3665 338.2435 C
417.6448 328.2169 420.0086 323.8339 422.7547 321.0792 C
425.5513 318.3755 428.4919 317.797 429.9293 317.6383 C
433.1913 317.3152 436.533 317.9429 439.793 319.4703 C
441.6061 318.2128 443.7938 317.4104 446.3939 317.0834 C
448.7435 316.8198 451.1738 317.5156 453.0972 319.0846 C
454.9188 320.6182 455.8789 322.6923 455.899 325.1732 C
455.8914 326.3334 455.4839 329.8561 455.3372 330.7497 C
f
491.3235 331.4654 m
489.4634 333.7374 487.0366 335.2139 484.2579 335.688 C
483.9572 335.7366 483.6788 335.762 483.3936 335.776 C
486.3093 337.2078 487.9988 340.3349 488.0365 344.9928 C
488.0067 348.837 486.6357 351.5213 485.4436 353.199 C
484.1954 354.916 482.0719 357.0692 478.4663 357.7778 C
472.2519 358.7035 458.1942 347.4635 457.8972 329.8083 C
458.0159 320.7039 463.5231 315.1754 472.5447 313.66 C
472.596 313.6526 472.6467 313.6452 472.6981 313.6378 C
478.6101 312.9293 493.5149 314.454 493.8284 324.8226 C
493.8105 327.1315 492.9491 329.4212 491.3235 331.4654 C
f
*u
1 D
516.5394 334.6309 m
513.9034 345.6662 509.1674 352.3437 501.8318 354.0601 C
497.52 354.9296 490.0545 352.5302 487.4966 350.8613 C
487.434 350.8176 487.3784 350.7786 487.3161 350.7345 C
485.0227 349.0152 483.764 346.2413 483.7356 342.9837 C
483.7565 340.2322 484.6862 337.6342 486.4418 335.3884 C
486.8737 334.8465 487.3246 334.3713 487.8208 333.9123 C
484.0561 330.1181 482.272 325.9641 482.3047 321.2396 C
482.3063 321.2137 482.3047 321.1882 482.3063 321.1623 C
482.4906 316.5058 485.4384 311.2106 493.9571 309.6725 C
496.1848 309.3065 498.8773 309.2601 501.6897 309.8206 C
503.8305 308.1867 506.0229 307.5777 507.3633 307.3293 C
510.1789 306.8437 515.0923 307.0068 516.6345 311.3367 C
517.9894 315.1713 518.0397 320.2471 518.04 320.8442 C
518.0373 323.3324 517.8793 329.4833 516.5394 334.6309 C
f
516.5645 311.1362 m
516.5911 311.2168 516.6163 311.2769 516.6429 311.3574 C
516.6401 311.3498 516.6384 311.3438 516.6345 311.3367 C
516.6093 311.2642 516.5884 311.2091 516.5645 311.1362 C
f
*U
0 D
545.6645 314.0734 m
545.5434 315.49 545.4258 316.8974 545.3949 318.1245 C
545.3377 320.537 545.1466 325.7254 544.8311 328.6231 C
544.825 328.6599 544.8208 328.7012 544.8173 328.7382 C
543.5861 337.7281 538.7885 344.3272 531.7914 346.2241 C
528.5208 347.0364 525.4839 346.7817 522.6089 345.4974 C
520.7087 346.9186 518.9328 347.4875 517.9947 347.7082 C
511.543 349.112 507.4721 345.1626 507.3827 337.9958 C
507.3915 335.8588 507.824 331.8226 508.4213 326.7537 C
508.5047 326.0395 508.5849 325.3606 508.6679 324.6526 C
508.8184 323.4108 508.925 322.2291 509.0333 321.0417 C
509.3362 317.7176 509.6145 314.7884 510.6196 311.9836 C
510.7071 311.7745 510.7881 311.5743 510.8756 311.3658 C
512.6233 307.7252 516.2609 305.0381 520.4677 304.1746 C
523.1997 303.6628 525.6825 304.126 527.507 305.5254 C
527.7202 305.6925 527.9098 305.8643 528.0976 306.0534 C
530.0131 304.1428 532.4598 302.8108 535.1754 302.2271 C
538.1445 301.6331 540.9116 302.1664 543.0184 303.7777 C
544.9033 305.2719 545.8985 307.3794 545.9174 309.9244 C
545.9161 311.1222 545.7962 312.5212 545.6645 314.0734 C
f
555.3377 311.8275 m
556.4448 313.328 557.0676 315.2533 557.079 317.679 C
557.0784 318.901 557.0256 320.8363 556.9598 323.3971 C
556.8885 326.7149 556.8232 329.8876 556.7533 333.2107 C
556.7056 337.4196 556.7666 341.0487 556.7988 343.078 C
556.8061 343.5957 556.8127 344.0911 556.8188 344.6091 C
556.7861 348.8609 555.1939 351.8205 553.8115 353.7221 C
552.4984 355.4916 550.289 357.8181 546.6626 359.1004 C
540.6363 361.0534 536.8505 356.4057 536.7666 350.7677 C
536.7688 349.7265 536.863 347.5831 537.0393 343.767 C
537.2098 340.0792 537.4125 335.707 537.4172 334.0109 C
537.39 331.0161 537.362 328.1778 537.3336 325.2335 C
537.3185 323.7407 537.3033 322.3212 537.287 320.841 C
537.3004 319.0159 537.8583 317.2259 538.9305 315.4922 C
537.7302 314.0682 537.0425 312.2956 537.0267 310.1727 C
537.0572 306.4798 538.5419 303.9926 539.8321 302.427 C
541.1768 300.8297 543.4847 298.8314 547.4434 297.9224 C
550.3779 297.2948 553.0522 297.7503 555.0231 299.2428 C
556.6999 300.5576 557.5817 302.4452 557.5997 304.737 C
557.5824 306.9411 556.7488 309.4754 555.3377 311.8275 C
f
*u
1 g
113.9127 308.5787 m
107.4368 307.1956 105.5587 308.1409 105.5177 312.3045 C
105.8145 332.7206 120.1417 350.0723 128.3598 352.5613 C
131.136 353.2857 131.7932 352.5404 131.809 350.9891 C
131.7259 348.0226 127.9305 345.0713 125.9519 343.7189 C
112.1576 333.3358 112.1579 319.4038 112.1555 316.2086 C
112.1855 313.0858 113.6063 313.3944 116.7109 314.0604 C
119.9406 314.8236 129.6696 320.233 133.2405 322.361 C
134.6213 323.1917 136.0851 324.7745 137.6006 325.1668 C
139.3199 325.4827 140.4402 324.6656 140.464 322.9748 C
140.4347 320.6031 139.0499 319.3392 137.7959 318.2305 C
134.7745 316.0642 120.3799 310.0524 113.9127 308.5787 C
f
*U
*u
157.5136 319.9342 m
154.7653 316.3933 150.3344 314.2659 147.1663 313.6549 C
143.9941 313.0935 142.1939 313.7016 142.0903 316.1163 C
142.0809 320.3842 144.7852 324.447 148.3376 328.1687 C
151.1854 331.3886 154.5052 334.5598 155.366 335.4333 C
155.8963 335.9589 156.4663 336.3391 156.9278 336.4998 C
156.5857 338.743 155.6605 341.0954 153.609 340.7472 C
151.7624 340.3564 149.212 338.236 148.1424 336.8882 C
147.9462 336.6313 147.1087 335.3665 146.4504 335.2156 C
145.3255 335.0185 143.5601 335.8006 143.5219 337.5929 C
143.5316 338.6 143.9721 339.3781 144.5632 340.0134 C
146.5009 341.9097 152.6678 345.9949 155.0407 346.5305 C
157.0894 346.9366 160.9166 347.1563 163.4355 337.1724 C
164.592 333.1672 164.6702 326.9865 164.672 325.695 C
164.6683 324.3359 164.4696 320.4846 163.5658 317.7339 C
163.2659 316.8561 161.298 316.154 160.5722 316.0228 C
159.4482 315.8402 157.361 315.8084 157.3183 317.8942 C
157.3851 318.5804 157.447 319.2402 157.5136 319.9342 C
f
1 D
150.2899 324.0716 m
149.174 322.2362 148.9922 321.3264 148.9884 320.1932 C
149.0015 319.1958 149.6237 318.7514 150.6154 318.9172 C
153.5824 319.5036 155.3722 322.4184 156.0167 322.959 C
156.9422 323.6568 157.8236 324.2636 157.7088 324.1161 C
157.7088 326.2799 157.7068 329.1229 157.5135 331.763 C
155.6655 330.1643 152.1003 326.9571 150.2899 324.0716 C
f
*U
*u
0 D
168.7161 340.3276 m
167.5255 340.1455 166.7164 341.2 166.6988 342.0917 C
166.7112 343.5077 167.2649 345.1231 168.7812 345.4263 C
169.6393 345.5881 170.4631 346.095 171.1891 346.2319 C
171.168 350.5799 170.236 353.7997 170.2782 357.0339 C
170.3032 358.8087 171.3557 360.8277 173.5321 361.3021 C
175.9787 361.763 177.1491 360.2488 177.1764 358.6963 C
177.1878 357.142 177.6855 351.7634 177.6968 348.3542 C
178.5536 348.6646 178.9837 349.2543 180.0396 349.4441 C
181.4284 349.6555 182.425 348.5582 182.5125 346.8776 C
182.5603 345.5006 181.802 344.4439 181.1459 344.099 C
180.1528 343.5658 178.9438 343.2205 178.2825 342.9651 C
178.2894 341.6129 178.6155 333.8936 178.8681 331.7583 C
178.9983 329.5359 179.3818 321.7804 179.3888 320.5499 C
179.3632 319.3829 178.1099 317.6761 176.3954 317.381 C
174.2803 317.0749 172.6541 317.6564 172.4256 318.9735 C
172.3005 320.3113 172.0406 326.9593 172.035 329.6625 C
172.0278 332.3675 171.6522 339.4906 171.6446 341.0485 C
170.72 340.8159 169.7064 340.501 168.7161 340.3276 C
f
*U
*u
190.3419 330.0105 m
190.354 327.4672 190.8929 326.1159 193.1404 326.3892 C
195.45 326.7314 197.4875 328.4727 198.6068 329.2361 C
199.6478 330.0092 201.3819 332.9343 203.2272 333.223 C
205.0776 333.4334 206.1969 332.4388 206.2208 331.3412 C
206.0198 327.2122 196.4604 322.2169 191.5786 321.4069 C
184.8375 320.6302 183.4742 324.3447 183.4438 327.9491 C
183.6804 341.4603 195.0064 352.482 197.4356 353.0164 C
199.1541 353.2611 200.4007 352.6855 200.429 350.2375 C
200.4192 348.4197 199.9909 346.4492 198.2164 345.7799 C
193.0388 343.7428 190.3977 334.8996 190.3419 330.0105 C
f
*U
*u
224.7843 340.6718 m
224.6953 346.5533 223.6378 350.9565 222.1162 350.8645 C
219.417 350.4237 215.1162 343.3132 215.0227 338.9386 C
215.0256 336.2462 215.1567 332.6113 215.4783 330.7451 C
215.8106 329.154 216.3779 327.0465 216.3894 325.6246 C
216.367 324.1375 215.2999 323.2534 214.0467 323.0317 C
211.0745 322.7037 210.8008 323.1402 210.3373 323.9822 C
209.6497 325.9653 208.2616 336.9087 207.9293 340.0319 C
207.5056 346.4597 205.505 359.7014 205.4569 367.4266 C
205.4942 373.4062 206.9711 375.625 210.4031 376.2345 C
212.4525 376.5469 213.6912 375.0641 213.7218 372.9685 C
213.7138 370.8714 213.4044 367.8543 213.3961 361.7872 C
213.4135 357.6045 214.16 351.8589 214.307 347.2971 C
215.0373 350.5466 219.3684 356.4492 225.1751 357.2412 C
229.2081 357.6212 231.9469 352.3004 232.0079 340.7577 C
231.9945 338.5541 231.3684 332.1368 231.2921 329.3533 C
231.2727 327.5033 230.3596 325.6651 227.2574 325.3177 C
225.2107 325.2627 224.092 326.2866 224.0686 327.8574 C
224.0826 330.284 224.769 334.8629 224.7843 340.6718 C
f
*U
*u
250.4898 372.3128 m
252.1262 376.1903 253.0749 380.4561 254.6552 380.6908 C
256.8363 380.868 258.6434 378.4242 258.6898 376.9933 C
258.6649 376.1329 257.6602 372.5573 256.2817 369.423 C
255.0034 366.9609 252.1295 364.1635 251.0753 364.0223 C
249.5552 363.9007 248.1164 364.662 248.0818 366.3509 C
248.1243 368.044 249.8863 370.9627 250.4898 372.3128 C
f
*U
*u
261.6876 339.7493 m
261.7226 336.1551 263.3008 334.2462 264.2257 334.2613 C
265.1497 334.3375 266.409 335.2987 268.1303 337.214 C
269.1827 338.4001 270.6509 340.4706 272.2953 342.1108 C
273.3529 343.1218 273.9745 343.649 274.8332 343.7048 C
276.4187 343.7732 277.0953 343.0304 277.1109 341.6442 C
277.0182 339.0915 272.7231 335.5699 270.2779 333.5533 C
268.9611 332.4645 263.7906 327.9292 262.1434 327.739 C
257.7816 327.5868 255.6809 333.5246 255.6354 338.1353 C
255.6354 338.1573 255.6354 338.1832 255.6354 338.2052 C
255.3045 338.0403 254.9934 337.9509 254.3989 337.9059 C
253.8041 337.8852 253.1757 338.994 253.1625 339.788 C
253.1748 341.8106 253.7211 342.329 255.6354 343.4435 C
255.6354 343.9661 255.6354 344.4686 255.6354 344.9985 C
255.7088 354.092 259.0649 361.4839 260.907 361.7549 C
268.043 362.1976 272.8347 356.5681 272.9461 353.5667 C
272.9483 351.4562 273.0264 349.2943 270.6033 347.2729 C
268.6782 345.7103 262.7636 341.8843 261.6876 340.8898 C
261.6876 340.5016 261.6876 340.1331 261.6876 339.7493 C
f
1 D
261.6225 346.8529 m
262.8165 347.6961 266.4154 349.8512 267.4145 350.6972 C
267.38 353.1558 265.8851 355.0187 263.7051 354.9033 C
262.5885 354.7267 261.644 349.4668 261.6225 346.8529 C
f
*U
*u
0 D
294.4435 331.9908 m
294.4504 332.9723 294.811 345.9425 294.6386 349.3 C
294.4916 352.3451 293.688 356.0212 291.9705 356.0255 C
290.1908 355.864 286.265 350.6443 286.1785 345.573 C
286.222 338.7751 288.1572 333.9798 288.196 330.7544 C
288.1447 329.3364 285.6062 328.4781 284.682 328.4241 C
282.9641 328.367 281.5186 328.901 281.1027 329.7685 C
280.4678 331.7945 279.8044 338.6007 279.6057 340.9069 C
279.123 348.1996 277.9414 352.8064 277.9137 355.8662 C
277.9723 358.3493 280.4378 360.1994 281.4281 360.2822 C
283.8057 360.3952 285.2284 359.8377 285.723 354.2274 C
287.4715 358.1257 290.816 362.1879 294.1834 362.3855 C
296.5613 362.4462 298.8795 360.9227 299.7799 357.6879 C
301.8752 361.1571 306.3681 363.586 309.7369 363.694 C
313.0388 363.652 314.9034 357.9153 315.2032 353.6955 C
315.3983 350.7743 315.6544 345.598 315.7237 342.5223 C
315.7982 339.4505 316.2349 336.0555 316.2444 334.1838 C
316.2227 332.314 315.2488 330.5485 312.1446 330.4705 C
309.0405 330.4642 308.5765 332.0253 308.5653 333.8221 C
308.5706 337.8192 308.8198 345.6851 308.8255 349.3588 C
308.8222 352.565 308.726 357.2452 306.613 357.287 C
304.4994 357.2177 303.3319 355.985 300.9512 352.9361 C
300.9245 352.6039 301.4622 344.3854 301.5368 341.5558 C
301.6062 338.5123 301.8571 335.0828 301.8623 333.2293 C
301.8458 331.3775 301.0592 329.6804 298.0228 329.4986 C
295.2487 329.4407 294.4608 330.2279 294.4435 331.9908 C
f
*U
*u
335.584 366.4504 m
333.2731 366.4897 332.0355 367.3975 332.0049 369.8822 C
332.0512 371.9998 333.9306 374.1597 335.7796 374.1791 C
338.4208 374.1314 339.9068 372.9333 339.9444 370.528 C
339.9119 367.571 338.6891 366.442 335.584 366.4504 C
f
336.8854 360.7182 m
338.9986 360.6694 339.8572 359.2626 339.8789 357.3345 C
339.8677 355.4914 339.4335 350.593 339.4232 346.8441 C
339.4446 343.1755 340.444 334.7938 340.4646 332.8798 C
340.4252 330.1781 338.5359 329.0638 336.9505 329.056 C
334.8374 329.1001 333.3379 330.0227 333.3061 332.3098 C
333.291 334.601 332.5426 347.2351 332.5251 356.0105 C
332.568 358.7452 334.3758 360.7082 336.8854 360.7182 C
f
*U
*u
345.0244 353.8309 m
343.907 354.3554 343.6007 355.3818 343.5928 355.9617 C
343.6029 357.3704 344.0337 359.0648 344.9595 359.078 C
346.0157 359.0617 346.7067 359.2884 347.4325 359.3609 C
347.2366 360.8142 347.1743 362.3012 347.1723 364.0668 C
347.3529 379.4514 354.733 384.8588 358.3016 384.7903 C
360.8776 384.6567 364.4563 383.2172 364.5488 379.3049 C
364.5379 376.2753 364.1816 374.8862 362.5962 374.9321 C
361.4064 374.9906 360.2831 375.2893 360.2534 376.7327 C
360.2197 377.5988 358.8967 377.7404 358.2361 377.7687 C
354.8673 377.7766 353.8364 370.5712 353.8103 367.0513 C
353.8166 364.6156 354.0666 362.4257 354.2005 360.1914 C
355.9848 360.1748 358.5317 362.1401 360.4481 362.1042 C
361.3055 362.05 361.8023 360.8689 361.8147 359.6728 C
361.8031 357.9647 361.3654 356.9596 360.5781 356.4785 C
359.784 356.1773 356.5028 355.0926 354.7861 355.1224 C
354.7863 355.1208 356.0761 344.9915 356.4129 341.9807 C
356.6889 339.3408 358.0786 331.5105 358.1052 330.0969 C
358.0701 328.6224 356.3025 327.3876 355.0467 327.3967 C
353.2626 327.4675 350.9924 328.3467 350.8165 329.5513 C
350.7448 330.2518 350.1108 333.8118 349.7099 337.5851 C
349.3186 341.0846 348.7974 348.2213 348.018 353.6881 C
347.2256 353.7054 346.0154 353.7317 345.0244 353.8309 C
f
*U
*u
377.4249 354.9497 m
379.4718 354.82 379.749 353.7871 381.3295 351.2146 C
382.5798 349.1405 386.2252 342.7913 387.0563 340 C
387.0784 340.5067 388.2644 348.1807 388.2931 357.3212 C
388.3335 359.838 390.0122 361.2054 392.5232 361.0455 C
394.305 360.8809 395.8067 359.037 395.8421 357.4394 C
395.8355 356.4313 395.5807 354.7629 395.4515 354.1979 C
395.0574 352.2572 391.9968 336.6332 391.9376 323.754 C
391.966 321.0747 393.4039 316.9941 393.3049 315.1543 C
393.1316 313.433 390.8487 312.6838 389.791 312.7362 C
388.0087 312.8753 386.1836 313.5686 385.821 315.0275 C
385.5711 316.3304 385.3683 321.471 385.3648 323.2737 C
385.3654 325.1372 385.4297 327.7711 385.82 331.5282 C
385.7029 332.9881 379.7468 341.3307 376.2534 346.0955 C
375.6641 346.8934 374.5211 348.9427 374.4964 351.4221 C
374.5231 353.1818 375.7074 355.007 377.4249 354.9497 C
f
*U
*u
404.4591 358.0618 m
405.2394 358.6881 405.0195 360.1641 406.7369 360.035 C
408.3875 359.869 408.7972 359.021 410.3162 358.8623 C
413.4829 358.4751 420.7001 352.7409 420.8586 341.4143 C
420.6852 330.2081 412.8751 325.8569 407.3226 326.1888 C
401.7114 326.7089 397.1412 329.8042 397.04 339.4181 C
397.1083 345.9341 400.2801 354.1457 404.4591 358.0618 C
f
1 D
413.7 340.5427 m
413.6509 346.5133 411.4416 352.7569 409.6002 353.0362 C
407.6817 353.0775 404.5272 346.334 404.4589 339.2949 C
404.4944 333.4236 406.123 331.1682 408.1685 330.9553 C
410.5478 330.8457 413.6315 334.5126 413.7 340.5427 C
f
*U
*u
0 D
431.4907 352.4669 m
431.4829 350.3625 431.1726 345.0556 431.1651 341.7616 C
431.1644 338.3197 431.0653 330.0757 434.2239 329.573 C
438.3886 329.2297 441.1902 333.8578 441.2523 339.4562 C
441.2496 341.5214 441.0586 343.0609 440.8618 344.4619 C
440.3203 348.1981 439.4514 350.2931 439.4302 352.0687 C
439.4708 353.8403 441.1482 355.6735 443.6605 355.3752 C
445.4414 355.1201 446.3103 354.1357 446.7191 352.9519 C
447.3431 350.261 447.6989 342.2894 447.8903 339.8906 C
448.0283 337.4278 448.5395 332.5751 448.8665 330.3257 C
448.9948 329.5498 449.3165 326.5285 449.3222 325.995 C
449.2794 324.1326 447.1878 323.2943 446.3936 323.3661 C
445.4698 323.4795 443.1245 323.9338 442.4889 325.3684 C
442.1695 326.199 442.0355 327.9359 441.8381 329.8029 C
438.0992 325.1389 433.2997 323.4985 429.929 323.7987 C
427.4871 324.1017 424.2756 326.2216 423.9414 337.7924 C
423.8741 340.8359 423.5587 350.2008 423.5511 352.4691 C
423.5758 354.7358 424.6102 357.0976 427.7813 356.7804 C
430.6208 356.4213 431.4694 354.6538 431.4907 352.4669 C
f
*U
*u
471.3723 329.0519 m
471.3835 326.4861 471.9275 324.9616 474.1707 324.6036 C
476.4861 324.2971 478.5171 325.4804 479.6373 325.9314 C
480.6811 326.4129 482.4052 328.8509 484.2578 328.6148 C
486.1063 328.3004 487.227 326.993 487.2516 325.8935 C
487.0494 321.7994 477.5014 319.4313 472.6089 319.9938 C
465.8793 321.1132 464.5058 325.2716 464.474 328.93 C
464.7136 342.5927 476.0137 350.0604 478.466 349.8011 C
480.1829 349.4886 481.4308 348.532 481.4597 346.1485 C
481.4493 344.3831 481.0262 342.5905 479.2469 342.4721 C
474.0482 342.0457 471.4279 333.975 471.3723 329.0519 C
f
*U
*u
504.3044 318.7763 m
501.5623 316.1497 497.1304 315.5522 493.957 316.0478 C
490.7875 316.592 488.9849 317.8389 488.8808 320.3105 C
488.8717 324.6402 491.573 327.8435 495.1283 330.3501 C
497.9748 332.6041 501.2957 334.5803 502.1568 335.1397 C
502.6874 335.4715 503.2559 335.6407 503.7187 335.6302 C
503.3762 337.9985 502.4441 340.7107 500.3997 341.1514 C
498.5488 341.4731 496.001 340.3026 494.9331 339.3278 C
494.7368 339.1401 493.9025 338.1591 493.2411 338.2544 C
492.1196 338.476 490.3518 339.966 490.3125 341.8375 C
490.3227 342.8835 490.7627 343.5203 491.3538 343.9447 C
493.2873 345.152 499.4473 346.8289 501.8316 346.4021 C
503.8784 345.9789 507.7046 344.6329 510.2266 333.897 C
511.3815 329.5243 511.4621 323.3661 511.463 322.074 C
511.4599 320.7144 511.263 316.9079 510.3568 314.435 C
510.0593 313.6419 508.0906 313.6235 507.3632 313.7449 C
506.2421 313.9528 504.1519 314.6621 504.1092 316.7812 C
504.1756 317.4524 504.2394 318.0984 504.3044 318.7763 C
f
1 D
497.0806 325.4926 m
495.9629 324.0283 495.7822 323.1676 495.7791 322.0207 C
495.7932 321.0076 496.4167 320.3373 497.406 320.1591 C
500.3832 319.7121 502.1604 322.0372 502.8076 322.3533 C
503.7344 322.7331 504.6363 323.0535 504.4997 322.9266 C
504.4997 325.1054 504.497 327.9605 504.3044 330.6751 C
502.4562 329.7405 498.888 327.7822 497.0806 325.4926 C
f
*U
*u
0 D
531.7913 339.1206 m
536.2719 337.9686 537.8159 332.9976 538.2991 329.33 C
538.5561 326.9406 538.752 322.2253 538.8198 319.387 C
538.8947 316.5482 539.3321 313.1775 539.3404 311.3213 C
539.3001 309.4704 537.3583 308.3201 535.1754 308.7348 C
533.1963 309.1607 531.4365 310.4419 531.4008 312.2334 C
531.4072 313.9548 531.6558 318.5107 531.6611 321.2183 C
531.6683 323.7239 532.0636 333.8615 529.2532 334.7002 C
527.4634 335.0306 522.2057 332.839 522.0944 324.0181 C
522.1211 321.4824 523.3711 315.0245 523.396 312.1868 C
523.3635 310.7407 521.79 310.3774 520.4675 310.6152 C
518.4881 311.0135 517.2347 312.1889 516.758 313.1915 C
515.7941 315.9515 515.7153 319.9195 515.1961 324.2706 C
514.7974 327.7076 513.977 334.4548 513.9597 336.6856 C
513.9785 339.2724 514.8193 341.041 517.9946 340.3964 C
520.1722 339.9071 521.349 338.7002 521.7041 335.0126 C
524.6394 338.7701 528.2203 339.9208 531.7913 339.1206 C
f
*U
*u
546.6625 352.1568 m
549.4302 351.2525 550.2243 349.0506 550.2419 346.5961 C
550.2395 345.5065 550.1147 340.6788 550.1766 334.8598 C
550.2474 328.4997 550.4956 321.7273 550.5021 319.1939 C
550.4869 317.3968 549.7555 315.5384 547.7036 315.8814 C
546.1205 316.1896 543.9096 317.8768 543.864 319.4227 C
543.8664 320.8986 543.9917 329.1088 543.9942 332.4526 C
543.9804 335.7312 543.356 346.8604 543.3436 348.8934 C
543.3696 350.7798 544.6074 352.7473 546.6625 352.1568 C
f
547.4433 311.4215 m
549.5498 310.9004 550.9922 307.5973 551.0227 306.2072 C
550.9877 304.7595 549.2951 304.0769 547.4434 304.457 C
544.9367 305.0245 543.6314 306.3446 543.6037 308.7915 C
543.6399 310.5713 545.4589 311.8187 547.4433 311.4215 C
f
*U
U
*u
1 D
0 g
593.4727 540.746 m
588.3033 519.4349 L
583.5237 543.0626 L
519.5327 557.1393 L
520.0016 521.5707 L
529.6385 519.4261 L
528.9163 512.9933 L
528.8228 513.0436 528.7337 513.0995 528.6399 513.1492 c
516.7133 519.4814 501.8968 520.1085 487.9313 514.847 c
483.2733 513.0644 478.9319 510.687 474.9656 507.8562 C
465.3518 568.7784 L
422.7903 568.7784 L
421.5985 561.7917 L
376.8236 561.7917 L
371.6983 530.4423 L
367.9774 535.0218 L
357.1252 548.3772 341.3992 555.727 323.9742 556.0934 C
361.9853 576.5169 L
335.4754 616.0954 L
287.5566 560.8959 L
295.8449 550.7871 L
288.3319 547.7284 281.7909 543.5191 276.3985 538.4223 C
235.3224 574.8611 L
220.9302 547.3282 L
221.4919 573.7754 L
157.25 553.2746 L
158.8892 518.7458 L
169.8202 521.5976 L
171.4481 504.0902 L
158.9695 509.7019 143.9756 509.5889 130.0481 503.6861 c
125.9306 501.9155 122.0736 499.6979 118.5182 497.1231 C
120.9322 507.7814 120.3605 518.291 116.3021 527.6521 c
111.5099 538.7066 103.0821 547.8607 92.7393 553.6284 C
85.4892 558.4538 76.8441 561.4696 67.7859 562.485 C
45.5823 566.381 18.8954 562.3783 -7.3588 551.2144 c
-17.0157 547.1083 -26.0301 542.4077 -34.1505 537.2433 C
-44.421 530.7116 L
-38.2224 520.2369 L
-18.9947 487.7445 L
-13.0852 477.7588 -13.057 477.7726 V
-2.6318 482.867 L
-1.1824 483.5751 L
46.6095 376.8563 L
51.2029 366.5989 L
61.908 370.0218 L
87.789 378.2965 L
99.1222 381.9197 L
96.1245 393.4346 L
82.3854 446.2096 L
86.3464 449.1212 90.0303 452.2296 93.4299 455.4842 C
92.6763 449.168 93.0634 442.7954 94.785 436.6846 c
98.3827 423.9023 106.7633 413.7885 118.3834 408.2066 c
130.9343 402.178 146.2545 402.1618 160.4155 408.163 c
167.5254 411.1961 173.8526 415.567 179.1913 420.8211 C
181.1437 399.8265 L
226.4381 406.4804 L
226.3778 447.1233 L
321.0447 400.3019 L
321.0447 445.6328 L
324.8694 445.9403 328.7415 446.5417 332.6334 447.4798 c
343.0733 449.996 351.9642 453.467 359.8881 458.2021 C
355.9132 433.8901 L
406.9518 425.8395 L
409.7743 444.2292 L
423.1074 419.5914 L
431.238 435.294 L
434.2116 409.5212 L
492.0945 399.3092 L
489.0207 418.7875 L
496.9336 417.8967 505.2922 418.9394 513.3557 421.9768 c
515.2879 422.71 517.1595 423.5556 518.9799 424.482 C
516.6512 403.7409 L
555.1702 398.3505 L
555.4854 382.556 L
595.6231 369.9266 L
647.9341 527.5349 L
593.4727 540.746 L
f
0 D
0 g
247.3491 492.2903 m
259.5113 504.1038 L
258.9903 498.6561 259.2642 492.9951 260.4088 487.2236 C
247.3491 492.2903 L
f
366.7727 500.3132 m
358.419 507.832 L
367.3444 517.3376 L
370.0222 520.1894 L
366.7727 500.3132 L
Bb
1 (Unnamed gradient\012118) 304 253.3333 -90 130 1.5711 0 0 1.5711 -2445.6285 -2851.9947 Bg
0 -18953.8229 -698.6347 0 651.0741 19510.4954 Bc
0 -204.2438 -698.6347 0 651.0741 556.6725 Bm
0 -18953.8229 -698.6347 0 651.0741 352.4287 Bc
f
0 BB
*U
*u
1 D
0 g
598.7098 558.5514 m
593.5401 537.2405 L
588.7606 560.8682 L
524.7696 574.9447 L
525.2384 539.3764 L
534.8754 537.2315 L
534.1532 530.7988 L
534.0599 530.8492 533.9708 530.9051 533.8768 530.9548 c
521.9502 537.2868 507.1338 537.914 493.1682 532.6525 c
488.5103 530.8699 484.1688 528.4926 480.2024 525.6618 C
470.5887 586.5839 L
428.0272 586.5839 L
426.8354 579.5972 L
382.0605 579.5972 L
376.9353 548.2478 L
373.2144 552.8273 L
362.3621 566.1828 346.636 573.5328 329.2111 573.8992 C
367.2222 594.3224 L
340.7123 633.9011 L
292.7934 578.7012 L
301.0818 568.5926 L
293.5687 565.5338 287.0277 561.3246 281.6353 556.2277 C
240.5594 592.6666 L
226.1672 565.134 L
226.7288 591.5812 L
162.487 571.0802 L
164.1261 536.5514 L
175.057 539.4031 L
176.6851 521.8956 L
164.2065 527.5077 149.2125 527.3947 135.2849 521.4916 c
131.1676 519.721 127.3106 517.5034 123.7551 514.9287 C
126.1692 525.5869 125.5975 536.0963 121.5391 545.4577 c
116.7467 556.5122 108.319 565.6661 97.9761 571.4338 C
90.7261 576.2594 82.0809 579.2752 73.0227 580.2905 C
50.8192 584.1864 24.1323 580.1838 -2.1218 569.0199 c
-11.7789 564.9137 -20.7931 560.2132 -28.9135 555.0488 C
-39.1841 548.5174 L
-32.9854 538.0422 L
-13.7577 505.55 L
-7.8482 495.5643 -7.8201 495.5781 V
2.6052 500.6725 L
4.0544 501.3805 L
51.8465 394.6618 L
56.4399 384.4044 L
67.1449 387.8271 L
93.0258 396.102 L
104.3591 399.7252 L
101.3615 411.2401 L
87.6223 464.015 L
91.5833 466.9267 95.2671 470.0351 98.6668 473.2895 C
97.9133 466.9735 98.3004 460.6009 100.022 454.4901 c
103.6196 441.7078 112.0002 431.5941 123.6203 426.0123 c
136.1712 419.9834 151.4914 419.9673 165.6526 425.9683 c
172.7623 429.0016 179.0895 433.3725 184.4282 438.6266 C
186.3805 417.6322 L
231.675 424.286 L
231.6148 464.9288 L
326.2815 418.1073 L
326.2815 463.4383 L
330.1063 463.7457 333.9784 464.3473 337.8702 465.2852 c
348.3102 467.8013 357.2012 471.2726 365.1249 476.0075 C
361.1503 451.6956 L
412.1887 443.6449 L
415.0111 462.0347 L
428.3442 437.3969 L
436.4748 453.0995 L
439.4484 427.3268 L
497.3314 417.1148 L
494.2576 436.5933 L
502.1706 435.7023 510.5291 436.7451 518.5926 439.7824 c
520.5249 440.5155 522.3965 441.3612 524.2167 442.2875 C
521.8883 421.5463 L
560.4071 416.1561 L
560.7223 400.3615 L
600.8599 387.7321 L
653.1709 545.3405 L
598.7098 558.5514 L
f
0 D
0 g
252.586 510.0958 m
264.7483 521.9095 L
264.2272 516.4616 264.5012 510.8007 265.6457 505.029 C
252.586 510.0958 L
f
372.0095 518.1186 m
363.6558 525.6375 L
372.5814 535.1432 L
375.259 537.9951 L
372.0095 518.1186 L
Bb
1 (Face Gradient) 314 310.6667 -90 148 1.5711 0 0 1.5711 -2445.6285 -2851.9947 Bg
0 -18953.8236 -698.6346 0 656.3109 19600.5729 Bc
0 -232.5237 -698.6346 0 656.3109 646.7493 Bm
0 -18953.8236 -698.6346 0 656.3109 414.2256 Bc
f
0 BB
*U
0.6094 0.668 0.6992 0.918 k
290.7623 548.131 m
288.209 545.8585 285.9341 543.3474 284.001 540.6106 C
291.2751 547.6759 L
290.7623 548.131 L
f
u
*u
1 0.74 0 0.14 k
1 D
598.7098 558.5514 m
593.5401 537.2405 L
588.7606 560.8682 L
524.7696 574.9447 L
525.2384 539.3764 L
534.8754 537.2315 L
534.1532 530.7988 L
534.0599 530.8492 533.9708 530.9051 533.8768 530.9548 c
521.9502 537.2868 507.1338 537.914 493.1682 532.6525 c
488.5103 530.8699 484.1688 528.4926 480.2024 525.6618 C
470.5887 586.5839 L
428.0272 586.5839 L
426.8354 579.5972 L
382.0605 579.5972 L
376.9353 548.2478 L
373.2144 552.8273 L
362.3621 566.1828 346.636 573.5328 329.2111 573.8992 C
367.2222 594.3224 L
340.7123 633.9011 L
292.7934 578.7012 L
301.0818 568.5926 L
293.5687 565.5338 287.0277 561.3246 281.6353 556.2277 C
240.5594 592.6666 L
226.1672 565.134 L
226.7288 591.5812 L
162.487 571.0802 L
164.1261 536.5514 L
175.057 539.4031 L
176.6851 521.8956 L
164.2065 527.5077 149.2125 527.3947 135.2849 521.4916 c
131.1676 519.721 127.3106 517.5034 123.7551 514.9287 C
126.1692 525.5869 125.5975 536.0963 121.5391 545.4577 c
116.7467 556.5122 108.319 565.6661 97.9761 571.4338 C
90.7261 576.2594 82.0809 579.2752 73.0227 580.2905 C
50.8192 584.1864 24.1323 580.1838 -2.1218 569.0199 c
-11.7789 564.9137 -20.7931 560.2132 -28.9135 555.0488 C
-39.1841 548.5174 L
-32.9854 538.0422 L
-13.7577 505.55 L
-7.8482 495.5643 -7.8201 495.5781 V
2.6052 500.6725 L
4.0544 501.3805 L
51.8465 394.6618 L
56.4399 384.4044 L
67.1449 387.8271 L
93.0258 396.102 L
104.3591 399.7252 L
101.3615 411.2401 L
87.6223 464.015 L
91.5833 466.9267 95.2671 470.0351 98.6668 473.2895 C
97.9133 466.9735 98.3004 460.6009 100.022 454.4901 c
103.6196 441.7078 112.0002 431.5941 123.6203 426.0123 c
136.1712 419.9834 151.4914 419.9673 165.6526 425.9683 c
172.7623 429.0016 179.0895 433.3725 184.4282 438.6266 C
186.3805 417.6322 L
231.675 424.286 L
231.6148 464.9288 L
326.2815 418.1073 L
326.2815 463.4383 L
330.1063 463.7457 333.9784 464.3473 337.8702 465.2852 c
348.3102 467.8013 357.2012 471.2726 365.1249 476.0075 C
361.1503 451.6956 L
412.1887 443.6449 L
415.0111 462.0347 L
428.3442 437.3969 L
436.4748 453.0995 L
439.4484 427.3268 L
497.3314 417.1148 L
494.2576 436.5933 L
502.1706 435.7023 510.5291 436.7451 518.5926 439.7824 c
520.5249 440.5155 522.3965 441.3612 524.2167 442.2875 C
521.8883 421.5463 L
560.4071 416.1561 L
560.7223 400.3615 L
600.8599 387.7321 L
653.1709 545.3405 L
598.7098 558.5514 L
f
0 D
372.5814 535.1432 m
375.259 537.9951 L
372.0095 518.1186 L
363.6558 525.6375 L
372.5814 535.1432 L
f
338.6688 616.3162 m
352.6823 597.2725 L
312.6028 577.4105 L
309.8331 581.6061 L
338.6688 616.3162 L
f
265.6457 505.029 m
252.586 510.0958 L
264.7483 521.9095 L
264.2272 516.4616 264.5012 510.8007 265.6457 505.029 C
f
73.2238 469.4346 m
89.1982 408.0736 L
63.3174 399.7987 L
10.1891 518.4328 L
7.3132 516.9179 1.9812 514.3714 -2.941 511.9509 C
-22.1689 544.4434 L
-14.4981 549.3216 -6.1283 553.6589 2.7963 557.4536 c
27.8524 568.108 51.7131 571.269 70.8506 567.9109 C
77.5966 567.1381 84.7692 565.126 91.0122 560.971 C
99.6251 556.1335 106.198 549.2456 110.0076 540.4582 c
119.2559 519.126 103.8018 488.309 73.2238 469.4346 C
f
182.9707 454.3018 m
177.5956 446.8466 170.1622 440.6338 161.3731 436.8841 c
138.9061 427.3634 116.4562 436.8841 110.461 458.1855 c
104.6435 478.8355 118.1693 503.3496 139.9352 512.7089 c
153.8159 518.592 167.7514 517.1983 177.7531 510.4097 c
183.94 506.2103 188.6248 499.9516 190.8507 492.0601 c
191.0939 491.2023 191.2933 490.337 191.4729 489.4683 c
192.0945 486.4616 192.3429 483.4008 192.2418 480.336 c
191.9409 471.2205 188.5816 462.0843 182.9707 454.3018 c
f
314.4337 436.9778 m
220.4968 483.9633 L
220.6616 434.7412 L
196.361 431.4146 L
194.6494 451.7421 L
202.1705 464.588 204.9109 479.7511 200.9782 493.6248 c
198.8263 501.2531 194.8695 507.9183 189.4738 513.2101 C
185.9878 554.6109 L
175.057 551.7596 L
174.5816 562.2151 L
213.6205 573.8345 L
215.9969 533.5873 L
244.7542 573.9865 L
272.8569 547.2349 L
233.5758 505.8182 L
270.4793 491.2133 L
274.6216 483.4054 280.8796 476.7439 288.793 471.8754 c
296.4375 467.1723 305.1658 464.3614 314.4337 463.4925 C
314.4337 436.9778 L
f
334.9922 477.152 m
332.0382 476.44 329.1313 475.9649 326.2815 475.6872 c
304.7287 473.5865 286.6605 483.5033 279.7783 499.5462 c
278.9563 501.4622 278.2914 503.4641 277.8016 505.5444 c
274.6159 519.0765 277.3178 531.1475 284.001 540.6106 c
285.9341 543.3474 288.209 545.8585 290.7623 548.131 c
297.0611 553.7377 305.0976 557.8549 314.199 560.0487 c
334.7536 565.0025 352.8429 558.7202 363.8928 545.1212 C
324.7819 503.4665 L
327.4485 502.9925 331.6653 503.6897 334.7743 504.4393 c
344.1016 506.6872 349.3295 511.6172 353.8972 517.0255 C
369.5305 502.9548 L
374.278 498.6819 L
372.1967 496.5342 370.0653 494.5617 367.8602 492.7382 c
358.8628 485.2978 348.5876 480.4287 334.9922 477.152 c
f
482.8202 432.2961 m
450.8408 437.1801 L
442.3455 493.5404 L
430.318 462.4447 L
412.2952 501.2985 L
412.101 501.2985 L
404.9651 456.2879 L
374.9545 461.5074 L
379.162 486.6253 L
380.2941 487.683 381.4157 488.7659 382.5178 489.9034 C
392.2268 499.9224 L
382.8094 508.3984 L
392.8255 568.191 L
423.146 568.191 L
430.7051 526.8075 L
439.2234 574.7851 L
460.8821 574.7851 L
469.8827 516.3259 L
458.4256 503.2806 452.8833 485.7684 456.71 469.7165 c
459.6646 457.307 467.3148 447.2732 478.2502 441.4629 c
479.3583 440.8742 480.4994 440.3518 481.6552 439.8629 C
482.8202 432.2961 L
f
514.8379 449.7025 m
507.0722 446.7773 499.4069 446.1736 492.5326 447.5255 c
487.7698 448.4623 483.3911 450.341 479.6246 453.0516 c
473.6025 457.3852 469.1443 463.8311 467.2134 471.9402 c
464.9011 481.6397 467.0175 492.033 472.2308 501.0743 c
474.8242 505.5715 478.1839 509.7305 482.1524 513.3041 c
486.5538 517.2673 491.6944 520.5139 497.3679 522.6851 c
510.6119 527.6747 523.6312 525.9311 532.8649 519.323 c
536.2122 516.9276 539.0587 513.8927 541.2389 510.3044 c
542.9196 507.5377 544.2128 504.4512 545.0203 501.0684 c
547.8163 489.4232 544.4696 476.919 537.1172 466.8404 c
533.9851 462.5472 530.1292 458.6941 525.7042 455.5378 c
522.377 453.1645 518.7337 451.1804 514.8379 449.7025 c
f
593.3247 402.3852 m
571.1171 409.0257 L
569.1805 490.8839 L
558.0076 427.7313 L
533.7738 431.5849 L
535.5004 449.7919 L
551.3224 463.1566 559.725 484.2335 555.1361 503.3447 c
553.1131 511.8192 548.7723 519.1749 542.6134 524.7991 C
544.6467 546.2402 L
535.4999 548.6839 L
536.1244 560.1364 L
577.869 551.7458 L
591.9045 485.1785 L
606.2836 544.853 L
638.0404 537.8246 L
593.3247 402.3852 L
f
*U
526.2277 508.0526 m
526.4793 507.0958 526.6071 506.0994 526.5653 505.0727 c
526.3135 498.8701 520.46 494.0714 513.4915 494.3547 c
506.5228 494.6376 501.0778 499.8951 501.3296 506.0975 c
501.5662 511.9231 506.745 516.5089 513.1481 516.8098 C
511.9195 517.074 510.6522 517.2511 509.3451 517.3043 c
497.7006 517.7769 488.1756 509.5214 487.7579 499.2345 c
487.3133 488.2844 496.1376 479.2841 507.6058 478.8185 c
519.2501 478.3457 528.7762 486.6006 529.2208 497.5507 c
529.3751 501.3496 528.2621 504.9694 526.2277 508.0526 C
f
172.6841 495.5157 m
172.6841 489.3081 167.0302 484.2758 160.0559 484.2758 c
153.0814 484.2758 147.4276 489.3081 147.4276 495.5157 c
147.4276 501.3461 152.4161 506.1381 158.8016 506.6985 C
157.5632 506.9128 156.2901 507.0385 154.9818 507.0385 c
143.3277 507.0385 134.1454 498.4032 134.1454 488.1078 c
134.1454 477.1484 143.3277 468.5137 154.8054 468.5137 c
166.4593 468.5137 175.6426 477.1484 175.6426 488.1078 c
175.6426 491.9098 174.3836 495.4813 172.2256 498.4795 C
172.5158 497.5338 172.6841 496.5432 172.6841 495.5157 c
f
56.6347 532.6239 m
60.3354 516.9097 L
61.7247 511.431 L
68.0473 514.4285 75.1005 514.4285 78.2364 511.5801 c
80.3328 509.6755 81.7334 507.8201 81.7234 505.0066 c
81.6977 497.7369 77.0552 489.7679 68.8718 483.2478 C
68.92 483.0576 L
82.515 490.8297 96.2901 500.2789 93.7771 519.1851 c
91.962 532.8404 74.6945 541.2449 56.6347 532.6239 C
f
338.28 545.5466 m
336.6789 546.1531 L
334.5806 546.9477 332.42 547.4341 330.257 547.5991 c
329.8109 547.633 329.38 547.6344 328.9633 547.6358 C
328.6138 547.6379 328.6136 547.6379 v
322.0102 547.702 315.4776 545.2514 310.219 540.7377 c
304.4712 535.8042 301.6705 530.4874 301.1377 523.4988 c
300.7806 518.8105 301.8046 514.2786 304.0997 510.393 c
304.7721 509.2546 305.4673 508.2719 306.225 507.3893 c
306.6283 506.9195 307.0759 506.4601 307.5791 505.9935 C
304.8679 509.2599 304.8169 514.922 307.7794 519.8594 c
311.3082 525.7404 317.7611 528.3525 322.192 525.6939 c
322.8588 525.294 323.4309 524.7877 323.9284 524.2125 C
337.3243 544.1259 L
338.28 545.5466 L
f
U
*u
0 g
613.0692 398.6419 m
622.2288 398.6419 L
622.2288 396.6398 L
618.8458 396.6398 L
618.8458 387.3346 L
616.4676 387.3346 L
616.4676 396.6398 L
613.0692 396.6398 L
613.0692 398.6419 l
f
*U
*u
629.0639 389.7511 m
631.1044 398.6419 L
634.5028 398.6419 L
634.5028 387.3346 L
632.3011 387.3346 L
632.3011 394.9828 l
632.3011 395.2027 632.3036 395.5108 632.3088 395.9073 c
632.3138 396.3036 632.3165 396.6091 632.3165 396.8239 C
630.1762 387.3346 L
627.8824 387.3346 L
625.7576 396.8239 l
625.7576 396.6091 625.7599 396.3036 625.7653 395.9073 c
625.7703 395.5108 625.7729 395.2027 625.7729 394.9828 C
625.7729 387.3346 L
623.5713 387.3346 L
623.5713 398.6419 L
627.008 398.6419 L
629.0639 389.7511 l
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF


------------------- CATCH'~1.EPS --------------------
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: (NOA) (Nintendo Of America)
%%Title: (catch 'em if u can.eps)
%%CreationDate: (5/4/98) (3:15 PM)
%%BoundingBox: -45 297 654 634
%%HiResBoundingBox: -44.421 297.7876 653.1709 633.9011
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 1.2
%AI3_ColorUsage: Color
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: -60 -59 492 671
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 792 612
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -126 732 1 949 729 18 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.1 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 13 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentscreen pop pop
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.3 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 68 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
	Adobe_blend_AI5_vars begin
	/invertXfer
	{
		[
		{
			1 exch sub
		} /exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	} bd
} bd
/terminate
{
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
		currentdict Adobe_blend_AI5 eq
		{
		 end
		} if
	} if
} bd
/nullString () def
/zeroStringAry 256 string def
/dpiThreshold 600 def
/tRectOK? deviceDPI dpiThreshold le currentscreen pop pop 150 le and def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 75 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
%/white? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where {pop lv1Fix} {false} ifelse def
[
/tint1Data
/tint2Data
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/ccAry1 5 array def
/setCustomColor
{
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/blendImg
{
	setImgSpace cData systemdict /image get
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
	} bd
} if
/colorimage where dup
{
	exch pop
	/doCImg /colorimage load def
	/mCMYKData
	{
		4
		{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
			4 1 roll
		} repeat
	} bd
} if
not
{
	/mCMYKData nullProc def
	/doCImg
	{
		pop pop
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
		systemdict /image get exec
		sSave restore
	} bd
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		setSSave
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		blendImg
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		currentcmykcolor
		4
		{
			makeByte 8 string copy 4 1 roll
		} repeat
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			/setcmykcolor cvx
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg {{_fill}}
			{{_of true eq {currentgray 1 ne {bwFill} if} {bwFill} ifelse}} ifelse def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq	
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					blendImg
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/d255- 256 array def
	0 1 255
	{
		d255- exch 1 d255 2 index get sub put
	} bind for
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		systemdict /setgray get
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
		
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
		
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					systemdict /setgray get exec
					systemdict /fill get exec
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
%
%
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq {/blend? false store} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
%
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt {/blend? false def} if
		blend?
		
%
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/getRData
{
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			7
		} ifelse
	} ifelse
	index 100 div /endPoint xs
	/colorType gMark store
	/color? colorType 0 gt store
	colorType dup 3 eq
	{
		/tint2Data gMark store
	} if
	dup 1 gt
	{
		/tint1Data gMark store
	} if
	/cData gMark store
	setCDataLen
	0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		clip
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/blendImg
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where
	{
		pop 0 0 bInc 1 /rectfill cvx
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		systemdict /fill get
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt {exch} if pop store
		
		/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
		pChange .5 gt dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx systemdict /fill get
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
	 end
	} if
} bd
/Bn
{
	1 add dict
	dup nullString null put
	/_bn xs
} bd
/Bd
{
	Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
		/_fill {_of true eq {currentgray 1 ne {__fill} if} {__fill} ifelse} def
	} ifelse
	/fill
	{
	} def
} bd
/BB
{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
2 Bn
%AI5_BeginGradient: (Face Gradient)
(Face Gradient) 0 2 Bd
[
0
<
292828282827272726262625252524242424232323222222212121202020201F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A1919191818181717171716161615151514
>
<
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
0
1 %_Br
[
0 0.08 0.25 0 1 50 100 %_Bs
0 0.16 0.51 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient\012118)
(Unnamed gradient\012118) 0 2 Bd
[
<
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413
1211100F0E0D0C0B0A09080706050403020100
>
<
0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A
0A0A0A0A0A0A09090909090909090909090909090808080808080808080808080808070707070707
07070707070707070606060606060606060606060606050505050505050505050505050504040404
04040404040404040404030303030303030303030303030302020202020202020202020202020101
01010101010101010101010100000000000000
>
<
26262626252525252524242424232323232322222222222121212120202020201F1F1F1F1F1E1E1E
1E1D1D1D1D1D1C1C1C1C1C1B1B1B1B1A1A1A1A1A1919191918181818181717171717161616161515
15151514141414141313131312121212121111111111101010100F0F0F0F0F0E0E0E0E0E0D0D0D0D
0C0C0C0C0C0B0B0B0B0B0A0A0A0A0909090909080808080807070707060606060605050505050404
04040303030303020202020201010101000000
>
<
52515150504F4F4E4E4D4D4D4C4C4B4B4A4A49494848484747464645454444434342424241414040
3F3F3E3E3D3D3D3C3C3B3B3A3A393938383737373636353534343333323232313130302F2F2E2E2D
2D2C2C2C2B2B2A2A292928282727272626252524242323222221212120201F1F1E1E1D1D1C1C1C1B
1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C0B0B0B0A0A0909
08080707060606050504040303020201010000
>
1 %_Br
[
0 0 0 0 1 50 100 %_Bs
0.7 0.05 0.15 0.32 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
3030302F2F2E2E2E2D2D2C2C2C2B2B2A2A2A29292828282727262626252524242423232222222121
2020201F1F1E1E1E1D1D1C1C1C1B1B1A1A1A19191818181717161616151514141413131212121111
1010100F
>
<
969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F
6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655545352504F4E4D4C4B4A49484746
45444342
>
0
1 %_Br
[
0 0.06 0.26 0 1 50 100 %_Bs
0 0.19 0.59 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 11 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
U
u
U
u
U
u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
144.3898 330.5218 m
142.5962 332.0447 140.2662 332.5788 137.6006 332.056 C
137.5063 332.0349 137.4093 332.012 137.3149 331.9911 C
134.741 331.3235 132.839 329.7888 131.5244 328.7338 C
131.2887 328.5452 130.969 328.2896 130.852 328.2085 C
127.1502 325.945 122.1606 323.1978 118.9968 321.6743 C
119.9546 328.5885 123.0512 333.8653 128.6051 337.8602 C
136.7618 343.3784 138.3482 348.7676 138.3858 352.6384 C
138.3579 356.151 137.0755 358.0221 135.9574 359.0283 C
133.1932 361.4037 129.5926 360.3326 128.36 359.9708 C
122.4281 358.1381 115.2904 351.6235 109.2584 342.6559 C
103.3325 333.6294 99.03 322.9713 98.9409 310.7892 C
98.9626 307.1864 99.9913 304.6628 102.1087 303.009 C
105.4115 300.5541 109.8204 301.1674 113.9127 302.0685 C
120.5782 303.612 136.3058 309.7919 140.9899 313.1175 C
141.1659 313.2572 141.3336 313.392 141.5096 313.5323 C
143.045 314.8581 146.9582 318.1432 147.0408 324.213 C
147.022 326.8211 146.1119 329.0063 144.3898 330.5218 C
f
*u
1 D
169.7481 340.3072 m
167.1146 350.7592 162.3976 355.6694 155.0408 354.1708 C
150.744 353.1562 143.2688 347.6792 140.706 345.0894 C
140.6538 345.0334 140.5778 344.9539 140.5255 344.898 C
138.2351 342.3614 136.9721 339.3017 136.9452 336.2272 C
136.9652 333.6379 137.8928 331.5088 139.6513 329.9793 C
140.0825 329.612 140.5336 329.3145 141.0303 329.0478 C
137.2702 324.0365 135.4813 319.4095 135.5143 314.7547 C
135.5156 314.7289 135.5146 314.7047 135.516 314.6789 C
135.7002 310.1231 138.629 305.8204 147.1663 307.3188 C
149.3924 307.7462 152.0856 308.6564 154.8988 310.1935 C
157.0368 309.3327 159.2316 309.5116 160.5723 309.7397 C
163.382 310.2502 168.2973 312.1057 169.8434 316.8519 C
171.1959 321.0695 171.2479 326.1613 171.2488 326.762 C
171.2454 329.2636 171.0887 335.4887 169.7481 340.3072 C
f
169.7733 316.632 m
169.799 316.713 169.8262 316.7941 169.8517 316.8752 C
169.8489 316.8675 169.846 316.8596 169.8434 316.8519 C
169.8204 316.7786 169.7962 316.7054 169.7733 316.632 C
f
*U
*u
0 D
163.7014 355.6997 m
163.702 355.7224 163.7042 355.7581 163.7048 355.7808 C
163.7053 355.8138 163.7036 355.8647 163.7034 355.8978 C
163.7024 355.8421 163.7024 355.7555 163.7014 355.6997 C
f
183.2256 337.419 m
183.1652 337.3886 183.0955 337.3544 183.0352 337.3239 C
183.0417 337.3264 183.0482 337.3319 183.0548 337.3344 C
183.1092 337.3611 183.1709 337.393 183.2256 337.419 C
f
1 D
189.0791 348.3531 m
188.8777 352.4823 186.8838 355.6843 183.9284 356.9744 C
183.9238 357.0421 183.9172 357.15 183.9124 357.2175 C
183.8461 358.2147 183.7606 359.5539 183.7531 359.9473 C
183.753 359.9403 183.7532 359.9286 183.7532 359.9216 C
183.7322 362.8925 182.8223 365.5029 181.0978 367.4272 C
179.1362 369.5418 176.5421 370.3324 173.5324 369.6899 C
167.9713 368.358 163.837 362.2695 163.7048 355.7808 C
163.6799 353.8627 163.8642 352.2156 164.0833 350.5687 C
161.6531 348.1641 160.1555 344.7178 160.122 340.8965 C
160.1416 338.4555 161.0324 336.3318 162.6537 334.8343 C
163.4504 334.1163 164.3242 333.6325 165.311 333.329 C
165.3897 331.4193 165.4564 329.6129 165.4582 328.5924 C
165.4638 325.819 165.7228 318.9632 165.8784 317.3147 C
165.8909 317.2111 165.9024 317.1257 165.915 317.0221 C
166.6647 312.5435 170.804 310.3927 176.3955 311.2084 C
178.9436 311.6282 181.2613 312.8677 183.1404 314.868 C
184.949 316.8471 185.9451 319.1726 185.9656 321.5107 C
185.9576 323.0172 185.5515 331.1206 185.4321 333.1755 C
185.4187 333.3216 185.4041 333.4848 185.3908 333.6309 C
185.2908 334.4694 185.1665 336.5025 185.0607 338.6606 C
187.6601 340.9393 189.2229 344.4985 189.0791 348.3531 C
f
*U
0 D
210.2927 338.1474 m
208.434 339.9304 206.0093 340.7217 203.2273 340.3805 C
202.9266 340.3419 202.6488 340.284 202.3629 340.2141 C
205.2739 342.5364 206.9668 346.2745 207.0058 351.1556 C
206.9753 355.1756 205.6062 357.5534 204.4129 358.9016 C
203.166 360.275 201.0464 361.7693 197.4358 361.2153 C
191.2583 359.9674 177.162 344.3525 176.8671 326.967 C
176.9841 318.0365 182.4773 314.1093 191.5142 315.1817 C
191.5656 315.1891 191.6162 315.1967 191.6676 315.2034 C
197.568 316.1832 212.4822 321.6512 212.7976 332.1236 C
212.7796 334.4444 211.9199 336.5335 210.2927 338.1474 C
f
233.3564 362.2507 m
231.0724 364.9355 228.3425 366.1457 225.1752 365.767 C
223.3451 365.5254 221.6531 364.9372 219.9795 364.0598 C
220.0068 366.9196 220.103 368.8804 220.1864 370.5889 C
220.247 371.8417 220.2969 372.8847 220.2987 373.9654 C
220.2757 377.3979 219.3595 380.4496 217.6244 382.7307 C
215.725 385.1447 213.25 386.1789 210.4035 385.6796 C
203.0899 384.2098 198.9816 376.7549 198.8801 366.3425 C
198.897 361.269 199.6045 354.7184 200.3257 348.5424 C
200.7931 344.5452 201.2141 341.0872 201.3678 338.6951 C
201.3759 338.5892 201.3884 338.4602 201.3966 338.3543 C
201.5647 336.7923 203.0659 324.1051 204.1177 321.176 C
204.2146 320.9222 204.3237 320.6892 204.4549 320.4557 C
206.775 316.4876 210.5036 316.5386 214.0469 316.9384 C
214.1629 316.9542 214.2767 316.9714 214.3927 316.9867 C
217.0805 317.4452 219.2937 318.7255 220.8806 320.6085 C
222.4954 319.5782 224.476 319.0722 226.8342 319.163 C
226.9772 319.1729 227.1147 319.1833 227.2576 319.1938 C
231.2184 319.6274 233.571 321.2604 234.9577 322.6568 C
236.8473 324.6131 237.8485 327.0802 237.8689 329.9605 C
237.8677 329.9076 237.8683 329.8569 237.8671 329.8039 C
237.898 330.998 238.0698 333.1782 238.2283 335.2469 C
238.4224 337.7802 238.5807 339.9707 238.5847 341.3806 C
238.5478 350.8713 236.8823 357.941 233.3564 362.2507 C
f
262.569 386.3244 m
260.3896 389.4001 257.6021 390.9761 254.6557 390.676 C
249.5239 389.9867 247.3165 383.3206 245.9234 379.3767 C
245.5836 378.4145 245.2759 377.5566 244.9478 376.7566 C
244.8665 376.5892 244.7031 376.2574 244.6213 376.0901 C
243.3621 373.5535 241.5488 369.9398 241.505 365.6823 C
241.5243 362.7591 242.347 360.2913 243.9036 358.4258 C
245.7225 356.3204 248.2501 355.3311 251.075 355.5495 C
255.5377 356.0276 260.0944 361.8103 261.5914 364.6028 C
261.6539 364.7323 261.7676 364.9597 261.8301 365.0892 C
262.6457 366.8793 265.2014 372.9996 265.2666 377.5722 C
265.2428 380.7419 264.32 383.7766 262.569 386.3244 C
f
*u
1 D
281.2718 348.7315 m
280.7873 349.2777 280.1614 349.8349 279.336 350.3275 C
279.5205 351.7287 279.5245 352.9129 279.5229 353.7768 C
279.5229 353.8189 279.5228 353.8873 279.5229 353.9293 C
279.4949 357.2684 278.2803 360.5321 275.8741 363.6211 C
272.0589 368.373 266.6438 371.0581 260.9073 370.6302 C
254.0534 369.8395 249.8556 357.6295 249.1392 347.021 C
247.7385 345.2475 246.6103 342.8222 246.5857 339.2726 C
246.6064 336.7934 247.5482 334.5245 249.1904 332.9439 C
249.3465 332.8091 249.4847 332.6937 249.6412 332.5594 C
250.3815 329.3492 251.7705 326.3372 254.2334 324.2095 C
256.5006 322.3129 259.1426 321.518 262.1437 321.6898 C
265.3206 321.9291 267.93 323.4971 273.3554 327.8729 C
273.6492 328.1089 273.9303 328.3339 274.2242 328.5709 C
274.3777 328.6893 274.5284 328.8066 274.6817 328.9253 C
278.7538 332.0828 283.582 335.8684 283.6877 341.952 C
283.6695 344.5684 282.8397 346.9284 281.2718 348.7315 C
f
0 D
262.6699 350.3742 m
262.8838 351.4925 263.1293 352.4082 263.3774 353.1665 C
264.1428 352.9516 264.7738 352.6515 265.3091 352.3167 C
264.5939 351.7798 263.8247 351.2156 263.1058 350.692 C
262.9698 350.5925 262.806 350.4736 262.6699 350.3742 C
f
253.6342 345.0012 m
253.4904 344.9378 253.3366 344.8657 253.1931 344.8016 C
253.3366 344.8657 253.4904 344.9378 253.6342 345.0012 C
f
*U
322.5683 338.4468 m
322.4472 339.9126 322.3296 341.4018 322.2986 342.7412 C
322.2249 346.0061 321.9632 351.3224 321.7573 354.4242 C
321.1361 363.0775 317.034 372.7277 309.7372 372.7435 C
306.9085 372.6644 303.6093 371.4878 300.5005 369.2701 C
298.5996 370.6776 296.5052 371.4198 294.1837 371.3391 C
291.4525 371.2052 288.9901 369.8511 286.7171 367.7891 C
284.9821 368.891 283.1696 369.1787 281.4284 369.0876 C
277.2546 368.7607 271.4729 363.1519 271.337 355.4861 C
271.3432 353.419 271.6285 351.4621 271.9776 349.1586 C
272.356 346.6682 272.8028 343.7703 273.0446 340.0773 C
273.0495 340.0235 273.0525 339.9589 273.0576 339.905 C
273.9577 329.6353 274.5787 328.3269 274.8253 327.5928 C
274.9036 327.3955 274.9791 327.2081 275.0577 327.0126 C
276.5697 323.9013 280.2136 322.2839 284.6822 322.4267 C
286.6202 322.5212 289.3516 323.2675 291.5297 324.8552 C
294.1243 323.3296 296.9588 323.4253 298.0231 323.454 C
298.0715 323.4563 298.1177 323.457 298.1661 323.4593 C
301.1733 323.6172 303.6102 324.5568 305.4562 326.2016 C
306.847 325.2225 308.9141 324.3478 312.1449 324.3682 C
316.1326 324.4489 318.5023 325.8745 319.901 327.1587 C
321.7963 328.9512 322.8007 331.333 322.8212 334.2212 C
322.8187 335.4315 322.7 336.8415 322.5683 338.4468 C
f
*u
1 D
346.5851 338.6582 m
346.3342 341.328 346.0075 345.0593 346 346.7364 C
346.003 348.6952 346.1512 351.1066 346.2767 353.1809 C
346.3778 354.8644 346.4527 356.1679 346.4557 357.2188 C
346.4449 359.4774 345.9939 361.5765 345.1371 363.5073 C
345.9061 365.1545 346.5064 367.2984 346.5213 370.4009 C
346.5007 373.7341 345.6321 376.8394 343.9938 379.3452 C
341.987 382.3119 339.3265 383.8501 335.7801 383.9164 C
330.1831 383.864 325.545 377.1557 325.4281 369.8902 C
325.4434 366.9824 326.0753 364.4906 327.2741 362.434 C
326.4236 360.4632 325.959 358.3399 325.9483 356.0237 C
325.9552 350.2453 326.2634 342.8764 326.5009 337.7782 C
326.6151 335.3295 326.7263 333.0086 326.7293 332.3352 C
326.749 329.6094 327.7072 327.3706 329.5175 325.6935 C
331.4283 323.9834 333.9813 323.1102 336.9509 323.0552 C
339.585 323.0441 342.0691 323.9003 343.9907 325.5836 C
345.973 327.3786 347.0192 329.7981 347.0414 332.7637 C
347.0377 333.8805 346.8799 335.511 346.5851 338.6582 C
f
0 D
335.7798 375.5484 m
336.3013 375.2788 336.8431 374.7409 337.3387 373.9815 C
336.8649 374.1056 336.3614 374.1725 335.7796 374.1791 C
335.2317 374.1813 334.6984 373.992 334.1813 373.6619 C
334.6446 374.535 335.2126 375.2083 335.7798 375.5484 C
f
*U
371.1255 378.9469 m
371.1015 382.5716 370.1796 386.0207 368.4371 388.8973 C
365.0931 394.1794 360.301 395.0575 358.3022 395.1629 C
351.0699 395.3445 341.4764 384.9282 340.6253 366.0092 C
338.4114 363.85 337.0487 360.2713 337.0159 356.0557 C
337.063 351.8772 339.0507 348.4605 342.2163 346.7635 C
342.4313 344.6529 342.617 342.6359 342.7873 340.8132 C
342.9353 339.2349 343.0571 337.9681 343.18 336.8929 C
343.4464 334.3965 343.8121 332.0169 344.0636 330.4208 C
344.1481 329.8867 344.2474 329.2606 344.2725 329.0677 C
344.2729 329.056 344.2749 329.0464 344.2758 329.0347 C
344.934 323.9925 350.1638 321.6838 355.0471 321.4797 C
357.5133 321.4241 359.9183 322.2326 361.8573 323.8761 C
363.6944 325.4802 364.6629 327.5137 364.6821 329.8626 C
364.6775 331.0897 364.3977 332.815 363.6632 337.5528 C
363.3669 339.4662 363.044 341.6399 362.9495 342.5678 C
362.9472 342.5914 362.9437 342.6222 362.9414 342.6458 C
362.8025 343.9166 362.5171 346.1761 362.2129 348.6293 C
362.363 348.6791 362.5086 348.7288 362.658 348.7806 C
362.9567 348.8881 363.2358 349.0141 363.519 349.17 C
366.5964 350.9268 368.3498 354.4851 368.3915 359.3902 C
368.3766 362.0479 367.7087 364.6168 366.4786 366.7737 C
367.3786 367.3476 368.0497 368.0408 368.5638 368.7199 C
371.1233 372.2201 371.1255 377.0223 371.1255 378.9469 C
f
401.7753 351.4902 m
402.0243 352.5468 402.4102 354.8916 402.419 356.9118 C
402.397 359.8277 401.4837 362.6936 399.7559 365.1999 C
397.8009 367.9505 395.251 369.6556 392.5236 369.9019 C
387.3785 370.2512 383.5996 366.8511 382.1951 361.6304 C
380.9417 362.5964 379.4452 363.2945 377.4252 363.4219 C
372.1943 363.619 368.0151 358.1166 367.9196 351.7257 C
367.9583 347.1905 369.6878 343.5147 371.365 341.3513 C
374.4311 337.369 377.7162 332.8458 379.1055 330.7075 C
378.8951 328.2164 378.7901 325.9608 378.788 323.6449 C
378.7905 322.4915 378.9493 316.5042 379.3337 314.558 C
379.3419 314.519 379.3469 314.5036 379.3542 314.4644 C
380.296 310.6742 384.4346 308.2409 389.7916 307.7819 C
394.3478 307.5056 399.4228 309.7039 399.869 314.322 C
399.976 315.9578 399.5717 317.7316 399.1207 319.7773 C
398.8609 320.9555 398.5215 322.5604 398.5145 323.2975 C
398.5756 335.9067 401.6954 351.0818 401.832 351.7434 C
401.8144 351.6711 401.7919 351.5627 401.7753 351.4902 C
f
*u
1 D
421.5424 359.5098 m
418.369 363.8846 414.3542 366.9282 410.6532 367.5092 C
410.6455 367.5141 410.6356 367.5186 410.6277 367.5229 C
409.9087 367.9123 408.6311 368.6109 406.7373 368.8082 C
404.6204 369.0012 401.8703 368.3681 399.7481 364.513 C
394.3096 358.5968 390.5453 348.3089 390.4632 339.8598 C
390.5224 331.6259 393.216 327.6128 395.5612 325.2093 C
398.6589 322.1263 402.5875 320.4817 407.3229 320.0601 C
412.0192 319.7147 416.9048 321.2127 420.8085 324.5519 C
425.1145 328.3606 427.3847 333.7626 427.4355 340.7594 C
427.3669 349.4064 424.2523 355.6815 421.5424 359.5098 C
f
400.8114 365.5586 m
400.7117 365.4701 400.592 365.3651 400.4923 365.2765 C
400.5919 365.3651 400.7116 365.4701 400.8114 365.5586 C
f
*U
0 D
455.3372 330.7497 m
455.3462 330.6952 455.3556 330.6314 455.3645 330.5768 C
455.0644 332.6542 454.5787 337.2914 454.4552 339.4931 C
454.4496 339.5664 454.4424 339.6643 454.4385 339.7378 C
454.3984 340.2185 454.3495 341.0297 454.2878 342.0205 C
453.9613 347.3284 453.6613 351.6851 452.9966 354.4863 C
452.919 354.7608 452.8431 355.0234 452.7643 355.2992 C
451.1862 359.9367 447.9139 363.1224 443.6607 363.7877 C
440.383 364.2302 437.5377 362.8808 435.4886 360.4256 C
435.4534 360.4772 435.3953 360.5612 435.3608 360.6134 C
434.0294 362.4818 431.7435 364.7897 427.7816 365.3184 C
420.5751 366.087 417.0579 359.6164 416.9742 353.1423 C
416.9772 351.7542 417.0615 348.5897 417.1986 344.0418 C
417.2568 342.0324 417.3085 340.1588 417.3665 338.2435 C
417.6448 328.2169 420.0086 323.8339 422.7547 321.0792 C
425.5513 318.3755 428.4919 317.797 429.9293 317.6383 C
433.1913 317.3152 436.533 317.9429 439.793 319.4703 C
441.6061 318.2128 443.7938 317.4104 446.3939 317.0834 C
448.7435 316.8198 451.1738 317.5156 453.0972 319.0846 C
454.9188 320.6182 455.8789 322.6923 455.899 325.1732 C
455.8914 326.3334 455.4839 329.8561 455.3372 330.7497 C
f
491.3235 331.4654 m
489.4634 333.7374 487.0366 335.2139 484.2579 335.688 C
483.9572 335.7366 483.6788 335.762 483.3936 335.776 C
486.3093 337.2078 487.9988 340.3349 488.0365 344.9928 C
488.0067 348.837 486.6357 351.5213 485.4436 353.199 C
484.1954 354.916 482.0719 357.0692 478.4663 357.7778 C
472.2519 358.7035 458.1942 347.4635 457.8972 329.8083 C
458.0159 320.7039 463.5231 315.1754 472.5447 313.66 C
472.596 313.6526 472.6467 313.6452 472.6981 313.6378 C
478.6101 312.9293 493.5149 314.454 493.8284 324.8226 C
493.8105 327.1315 492.9491 329.4212 491.3235 331.4654 C
f
*u
1 D
516.5394 334.6309 m
513.9034 345.6662 509.1674 352.3437 501.8318 354.0601 C
497.52 354.9296 490.0545 352.5302 487.4966 350.8613 C
487.434 350.8176 487.3784 350.7786 487.3161 350.7345 C
485.0227 349.0152 483.764 346.2413 483.7356 342.9837 C
483.7565 340.2322 484.6862 337.6342 486.4418 335.3884 C
486.8737 334.8465 487.3246 334.3713 487.8208 333.9123 C
484.0561 330.1181 482.272 325.9641 482.3047 321.2396 C
482.3063 321.2137 482.3047 321.1882 482.3063 321.1623 C
482.4906 316.5058 485.4384 311.2106 493.9571 309.6725 C
496.1848 309.3065 498.8773 309.2601 501.6897 309.8206 C
503.8305 308.1867 506.0229 307.5777 507.3633 307.3293 C
510.1789 306.8437 515.0923 307.0068 516.6345 311.3367 C
517.9894 315.1713 518.0397 320.2471 518.04 320.8442 C
518.0373 323.3324 517.8793 329.4833 516.5394 334.6309 C
f
516.5645 311.1362 m
516.5911 311.2168 516.6163 311.2769 516.6429 311.3574 C
516.6401 311.3498 516.6384 311.3438 516.6345 311.3367 C
516.6093 311.2642 516.5884 311.2091 516.5645 311.1362 C
f
*U
0 D
545.6645 314.0734 m
545.5434 315.49 545.4258 316.8974 545.3949 318.1245 C
545.3377 320.537 545.1466 325.7254 544.8311 328.6231 C
544.825 328.6599 544.8208 328.7012 544.8173 328.7382 C
543.5861 337.7281 538.7885 344.3272 531.7914 346.2241 C
528.5208 347.0364 525.4839 346.7817 522.6089 345.4974 C
520.7087 346.9186 518.9328 347.4875 517.9947 347.7082 C
511.543 349.112 507.4721 345.1626 507.3827 337.9958 C
507.3915 335.8588 507.824 331.8226 508.4213 326.7537 C
508.5047 326.0395 508.5849 325.3606 508.6679 324.6526 C
508.8184 323.4108 508.925 322.2291 509.0333 321.0417 C
509.3362 317.7176 509.6145 314.7884 510.6196 311.9836 C
510.7071 311.7745 510.7881 311.5743 510.8756 311.3658 C
512.6233 307.7252 516.2609 305.0381 520.4677 304.1746 C
523.1997 303.6628 525.6825 304.126 527.507 305.5254 C
527.7202 305.6925 527.9098 305.8643 528.0976 306.0534 C
530.0131 304.1428 532.4598 302.8108 535.1754 302.2271 C
538.1445 301.6331 540.9116 302.1664 543.0184 303.7777 C
544.9033 305.2719 545.8985 307.3794 545.9174 309.9244 C
545.9161 311.1222 545.7962 312.5212 545.6645 314.0734 C
f
555.3377 311.8275 m
556.4448 313.328 557.0676 315.2533 557.079 317.679 C
557.0784 318.901 557.0256 320.8363 556.9598 323.3971 C
556.8885 326.7149 556.8232 329.8876 556.7533 333.2107 C
556.7056 337.4196 556.7666 341.0487 556.7988 343.078 C
556.8061 343.5957 556.8127 344.0911 556.8188 344.6091 C
556.7861 348.8609 555.1939 351.8205 553.8115 353.7221 C
552.4984 355.4916 550.289 357.8181 546.6626 359.1004 C
540.6363 361.0534 536.8505 356.4057 536.7666 350.7677 C
536.7688 349.7265 536.863 347.5831 537.0393 343.767 C
537.2098 340.0792 537.4125 335.707 537.4172 334.0109 C
537.39 331.0161 537.362 328.1778 537.3336 325.2335 C
537.3185 323.7407 537.3033 322.3212 537.287 320.841 C
537.3004 319.0159 537.8583 317.2259 538.9305 315.4922 C
537.7302 314.0682 537.0425 312.2956 537.0267 310.1727 C
537.0572 306.4798 538.5419 303.9926 539.8321 302.427 C
541.1768 300.8297 543.4847 298.8314 547.4434 297.9224 C
550.3779 297.2948 553.0522 297.7503 555.0231 299.2428 C
556.6999 300.5576 557.5817 302.4452 557.5997 304.737 C
557.5824 306.9411 556.7488 309.4754 555.3377 311.8275 C
f
*u
1 g
113.9127 308.5787 m
107.4368 307.1956 105.5587 308.1409 105.5177 312.3045 C
105.8145 332.7206 120.1417 350.0723 128.3598 352.5613 C
131.136 353.2857 131.7932 352.5404 131.809 350.9891 C
131.7259 348.0226 127.9305 345.0713 125.9519 343.7189 C
112.1576 333.3358 112.1579 319.4038 112.1555 316.2086 C
112.1855 313.0858 113.6063 313.3944 116.7109 314.0604 C
119.9406 314.8236 129.6696 320.233 133.2405 322.361 C
134.6213 323.1917 136.0851 324.7745 137.6006 325.1668 C
139.3199 325.4827 140.4402 324.6656 140.464 322.9748 C
140.4347 320.6031 139.0499 319.3392 137.7959 318.2305 C
134.7745 316.0642 120.3799 310.0524 113.9127 308.5787 C
f
*U
*u
157.5136 319.9342 m
154.7653 316.3933 150.3344 314.2659 147.1663 313.6549 C
143.9941 313.0935 142.1939 313.7016 142.0903 316.1163 C
142.0809 320.3842 144.7852 324.447 148.3376 328.1687 C
151.1854 331.3886 154.5052 334.5598 155.366 335.4333 C
155.8963 335.9589 156.4663 336.3391 156.9278 336.4998 C
156.5857 338.743 155.6605 341.0954 153.609 340.7472 C
151.7624 340.3564 149.212 338.236 148.1424 336.8882 C
147.9462 336.6313 147.1087 335.3665 146.4504 335.2156 C
145.3255 335.0185 143.5601 335.8006 143.5219 337.5929 C
143.5316 338.6 143.9721 339.3781 144.5632 340.0134 C
146.5009 341.9097 152.6678 345.9949 155.0407 346.5305 C
157.0894 346.9366 160.9166 347.1563 163.4355 337.1724 C
164.592 333.1672 164.6702 326.9865 164.672 325.695 C
164.6683 324.3359 164.4696 320.4846 163.5658 317.7339 C
163.2659 316.8561 161.298 316.154 160.5722 316.0228 C
159.4482 315.8402 157.361 315.8084 157.3183 317.8942 C
157.3851 318.5804 157.447 319.2402 157.5136 319.9342 C
f
1 D
150.2899 324.0716 m
149.174 322.2362 148.9922 321.3264 148.9884 320.1932 C
149.0015 319.1958 149.6237 318.7514 150.6154 318.9172 C
153.5824 319.5036 155.3722 322.4184 156.0167 322.959 C
156.9422 323.6568 157.8236 324.2636 157.7088 324.1161 C
157.7088 326.2799 157.7068 329.1229 157.5135 331.763 C
155.6655 330.1643 152.1003 326.9571 150.2899 324.0716 C
f
*U
*u
0 D
168.7161 340.3276 m
167.5255 340.1455 166.7164 341.2 166.6988 342.0917 C
166.7112 343.5077 167.2649 345.1231 168.7812 345.4263 C
169.6393 345.5881 170.4631 346.095 171.1891 346.2319 C
171.168 350.5799 170.236 353.7997 170.2782 357.0339 C
170.3032 358.8087 171.3557 360.8277 173.5321 361.3021 C
175.9787 361.763 177.1491 360.2488 177.1764 358.6963 C
177.1878 357.142 177.6855 351.7634 177.6968 348.3542 C
178.5536 348.6646 178.9837 349.2543 180.0396 349.4441 C
181.4284 349.6555 182.425 348.5582 182.5125 346.8776 C
182.5603 345.5006 181.802 344.4439 181.1459 344.099 C
180.1528 343.5658 178.9438 343.2205 178.2825 342.9651 C
178.2894 341.6129 178.6155 333.8936 178.8681 331.7583 C
178.9983 329.5359 179.3818 321.7804 179.3888 320.5499 C
179.3632 319.3829 178.1099 317.6761 176.3954 317.381 C
174.2803 317.0749 172.6541 317.6564 172.4256 318.9735 C
172.3005 320.3113 172.0406 326.9593 172.035 329.6625 C
172.0278 332.3675 171.6522 339.4906 171.6446 341.0485 C
170.72 340.8159 169.7064 340.501 168.7161 340.3276 C
f
*U
*u
190.3419 330.0105 m
190.354 327.4672 190.8929 326.1159 193.1404 326.3892 C
195.45 326.7314 197.4875 328.4727 198.6068 329.2361 C
199.6478 330.0092 201.3819 332.9343 203.2272 333.223 C
205.0776 333.4334 206.1969 332.4388 206.2208 331.3412 C
206.0198 327.2122 196.4604 322.2169 191.5786 321.4069 C
184.8375 320.6302 183.4742 324.3447 183.4438 327.9491 C
183.6804 341.4603 195.0064 352.482 197.4356 353.0164 C
199.1541 353.2611 200.4007 352.6855 200.429 350.2375 C
200.4192 348.4197 199.9909 346.4492 198.2164 345.7799 C
193.0388 343.7428 190.3977 334.8996 190.3419 330.0105 C
f
*U
*u
224.7843 340.6718 m
224.6953 346.5533 223.6378 350.9565 222.1162 350.8645 C
219.417 350.4237 215.1162 343.3132 215.0227 338.9386 C
215.0256 336.2462 215.1567 332.6113 215.4783 330.7451 C
215.8106 329.154 216.3779 327.0465 216.3894 325.6246 C
216.367 324.1375 215.2999 323.2534 214.0467 323.0317 C
211.0745 322.7037 210.8008 323.1402 210.3373 323.9822 C
209.6497 325.9653 208.2616 336.9087 207.9293 340.0319 C
207.5056 346.4597 205.505 359.7014 205.4569 367.4266 C
205.4942 373.4062 206.9711 375.625 210.4031 376.2345 C
212.4525 376.5469 213.6912 375.0641 213.7218 372.9685 C
213.7138 370.8714 213.4044 367.8543 213.3961 361.7872 C
213.4135 357.6045 214.16 351.8589 214.307 347.2971 C
215.0373 350.5466 219.3684 356.4492 225.1751 357.2412 C
229.2081 357.6212 231.9469 352.3004 232.0079 340.7577 C
231.9945 338.5541 231.3684 332.1368 231.2921 329.3533 C
231.2727 327.5033 230.3596 325.6651 227.2574 325.3177 C
225.2107 325.2627 224.092 326.2866 224.0686 327.8574 C
224.0826 330.284 224.769 334.8629 224.7843 340.6718 C
f
*U
*u
250.4898 372.3128 m
252.1262 376.1903 253.0749 380.4561 254.6552 380.6908 C
256.8363 380.868 258.6434 378.4242 258.6898 376.9933 C
258.6649 376.1329 257.6602 372.5573 256.2817 369.423 C
255.0034 366.9609 252.1295 364.1635 251.0753 364.0223 C
249.5552 363.9007 248.1164 364.662 248.0818 366.3509 C
248.1243 368.044 249.8863 370.9627 250.4898 372.3128 C
f
*U
*u
261.6876 339.7493 m
261.7226 336.1551 263.3008 334.2462 264.2257 334.2613 C
265.1497 334.3375 266.409 335.2987 268.1303 337.214 C
269.1827 338.4001 270.6509 340.4706 272.2953 342.1108 C
273.3529 343.1218 273.9745 343.649 274.8332 343.7048 C
276.4187 343.7732 277.0953 343.0304 277.1109 341.6442 C
277.0182 339.0915 272.7231 335.5699 270.2779 333.5533 C
268.9611 332.4645 263.7906 327.9292 262.1434 327.739 C
257.7816 327.5868 255.6809 333.5246 255.6354 338.1353 C
255.6354 338.1573 255.6354 338.1832 255.6354 338.2052 C
255.3045 338.0403 254.9934 337.9509 254.3989 337.9059 C
253.8041 337.8852 253.1757 338.994 253.1625 339.788 C
253.1748 341.8106 253.7211 342.329 255.6354 343.4435 C
255.6354 343.9661 255.6354 344.4686 255.6354 344.9985 C
255.7088 354.092 259.0649 361.4839 260.907 361.7549 C
268.043 362.1976 272.8347 356.5681 272.9461 353.5667 C
272.9483 351.4562 273.0264 349.2943 270.6033 347.2729 C
268.6782 345.7103 262.7636 341.8843 261.6876 340.8898 C
261.6876 340.5016 261.6876 340.1331 261.6876 339.7493 C
f
1 D
261.6225 346.8529 m
262.8165 347.6961 266.4154 349.8512 267.4145 350.6972 C
267.38 353.1558 265.8851 355.0187 263.7051 354.9033 C
262.5885 354.7267 261.644 349.4668 261.6225 346.8529 C
f
*U
*u
0 D
294.4435 331.9908 m
294.4504 332.9723 294.811 345.9425 294.6386 349.3 C
294.4916 352.3451 293.688 356.0212 291.9705 356.0255 C
290.1908 355.864 286.265 350.6443 286.1785 345.573 C
286.222 338.7751 288.1572 333.9798 288.196 330.7544 C
288.1447 329.3364 285.6062 328.4781 284.682 328.4241 C
282.9641 328.367 281.5186 328.901 281.1027 329.7685 C
280.4678 331.7945 279.8044 338.6007 279.6057 340.9069 C
279.123 348.1996 277.9414 352.8064 277.9137 355.8662 C
277.9723 358.3493 280.4378 360.1994 281.4281 360.2822 C
283.8057 360.3952 285.2284 359.8377 285.723 354.2274 C
287.4715 358.1257 290.816 362.1879 294.1834 362.3855 C
296.5613 362.4462 298.8795 360.9227 299.7799 357.6879 C
301.8752 361.1571 306.3681 363.586 309.7369 363.694 C
313.0388 363.652 314.9034 357.9153 315.2032 353.6955 C
315.3983 350.7743 315.6544 345.598 315.7237 342.5223 C
315.7982 339.4505 316.2349 336.0555 316.2444 334.1838 C
316.2227 332.314 315.2488 330.5485 312.1446 330.4705 C
309.0405 330.4642 308.5765 332.0253 308.5653 333.8221 C
308.5706 337.8192 308.8198 345.6851 308.8255 349.3588 C
308.8222 352.565 308.726 357.2452 306.613 357.287 C
304.4994 357.2177 303.3319 355.985 300.9512 352.9361 C
300.9245 352.6039 301.4622 344.3854 301.5368 341.5558 C
301.6062 338.5123 301.8571 335.0828 301.8623 333.2293 C
301.8458 331.3775 301.0592 329.6804 298.0228 329.4986 C
295.2487 329.4407 294.4608 330.2279 294.4435 331.9908 C
f
*U
*u
335.584 366.4504 m
333.2731 366.4897 332.0355 367.3975 332.0049 369.8822 C
332.0512 371.9998 333.9306 374.1597 335.7796 374.1791 C
338.4208 374.1314 339.9068 372.9333 339.9444 370.528 C
339.9119 367.571 338.6891 366.442 335.584 366.4504 C
f
336.8854 360.7182 m
338.9986 360.6694 339.8572 359.2626 339.8789 357.3345 C
339.8677 355.4914 339.4335 350.593 339.4232 346.8441 C
339.4446 343.1755 340.444 334.7938 340.4646 332.8798 C
340.4252 330.1781 338.5359 329.0638 336.9505 329.056 C
334.8374 329.1001 333.3379 330.0227 333.3061 332.3098 C
333.291 334.601 332.5426 347.2351 332.5251 356.0105 C
332.568 358.7452 334.3758 360.7082 336.8854 360.7182 C
f
*U
*u
345.0244 353.8309 m
343.907 354.3554 343.6007 355.3818 343.5928 355.9617 C
343.6029 357.3704 344.0337 359.0648 344.9595 359.078 C
346.0157 359.0617 346.7067 359.2884 347.4325 359.3609 C
347.2366 360.8142 347.1743 362.3012 347.1723 364.0668 C
347.3529 379.4514 354.733 384.8588 358.3016 384.7903 C
360.8776 384.6567 364.4563 383.2172 364.5488 379.3049 C
364.5379 376.2753 364.1816 374.8862 362.5962 374.9321 C
361.4064 374.9906 360.2831 375.2893 360.2534 376.7327 C
360.2197 377.5988 358.8967 377.7404 358.2361 377.7687 C
354.8673 377.7766 353.8364 370.5712 353.8103 367.0513 C
353.8166 364.6156 354.0666 362.4257 354.2005 360.1914 C
355.9848 360.1748 358.5317 362.1401 360.4481 362.1042 C
361.3055 362.05 361.8023 360.8689 361.8147 359.6728 C
361.8031 357.9647 361.3654 356.9596 360.5781 356.4785 C
359.784 356.1773 356.5028 355.0926 354.7861 355.1224 C
354.7863 355.1208 356.0761 344.9915 356.4129 341.9807 C
356.6889 339.3408 358.0786 331.5105 358.1052 330.0969 C
358.0701 328.6224 356.3025 327.3876 355.0467 327.3967 C
353.2626 327.4675 350.9924 328.3467 350.8165 329.5513 C
350.7448 330.2518 350.1108 333.8118 349.7099 337.5851 C
349.3186 341.0846 348.7974 348.2213 348.018 353.6881 C
347.2256 353.7054 346.0154 353.7317 345.0244 353.8309 C
f
*U
*u
377.4249 354.9497 m
379.4718 354.82 379.749 353.7871 381.3295 351.2146 C
382.5798 349.1405 386.2252 342.7913 387.0563 340 C
387.0784 340.5067 388.2644 348.1807 388.2931 357.3212 C
388.3335 359.838 390.0122 361.2054 392.5232 361.0455 C
394.305 360.8809 395.8067 359.037 395.8421 357.4394 C
395.8355 356.4313 395.5807 354.7629 395.4515 354.1979 C
395.0574 352.2572 391.9968 336.6332 391.9376 323.754 C
391.966 321.0747 393.4039 316.9941 393.3049 315.1543 C
393.1316 313.433 390.8487 312.6838 389.791 312.7362 C
388.0087 312.8753 386.1836 313.5686 385.821 315.0275 C
385.5711 316.3304 385.3683 321.471 385.3648 323.2737 C
385.3654 325.1372 385.4297 327.7711 385.82 331.5282 C
385.7029 332.9881 379.7468 341.3307 376.2534 346.0955 C
375.6641 346.8934 374.5211 348.9427 374.4964 351.4221 C
374.5231 353.1818 375.7074 355.007 377.4249 354.9497 C
f
*U
*u
404.4591 358.0618 m
405.2394 358.6881 405.0195 360.1641 406.7369 360.035 C
408.3875 359.869 408.7972 359.021 410.3162 358.8623 C
413.4829 358.4751 420.7001 352.7409 420.8586 341.4143 C
420.6852 330.2081 412.8751 325.8569 407.3226 326.1888 C
401.7114 326.7089 397.1412 329.8042 397.04 339.4181 C
397.1083 345.9341 400.2801 354.1457 404.4591 358.0618 C
f
1 D
413.7 340.5427 m
413.6509 346.5133 411.4416 352.7569 409.6002 353.0362 C
407.6817 353.0775 404.5272 346.334 404.4589 339.2949 C
404.4944 333.4236 406.123 331.1682 408.1685 330.9553 C
410.5478 330.8457 413.6315 334.5126 413.7 340.5427 C
f
*U
*u
0 D
431.4907 352.4669 m
431.4829 350.3625 431.1726 345.0556 431.1651 341.7616 C
431.1644 338.3197 431.0653 330.0757 434.2239 329.573 C
438.3886 329.2297 441.1902 333.8578 441.2523 339.4562 C
441.2496 341.5214 441.0586 343.0609 440.8618 344.4619 C
440.3203 348.1981 439.4514 350.2931 439.4302 352.0687 C
439.4708 353.8403 441.1482 355.6735 443.6605 355.3752 C
445.4414 355.1201 446.3103 354.1357 446.7191 352.9519 C
447.3431 350.261 447.6989 342.2894 447.8903 339.8906 C
448.0283 337.4278 448.5395 332.5751 448.8665 330.3257 C
448.9948 329.5498 449.3165 326.5285 449.3222 325.995 C
449.2794 324.1326 447.1878 323.2943 446.3936 323.3661 C
445.4698 323.4795 443.1245 323.9338 442.4889 325.3684 C
442.1695 326.199 442.0355 327.9359 441.8381 329.8029 C
438.0992 325.1389 433.2997 323.4985 429.929 323.7987 C
427.4871 324.1017 424.2756 326.2216 423.9414 337.7924 C
423.8741 340.8359 423.5587 350.2008 423.5511 352.4691 C
423.5758 354.7358 424.6102 357.0976 427.7813 356.7804 C
430.6208 356.4213 431.4694 354.6538 431.4907 352.4669 C
f
*U
*u
471.3723 329.0519 m
471.3835 326.4861 471.9275 324.9616 474.1707 324.6036 C
476.4861 324.2971 478.5171 325.4804 479.6373 325.9314 C
480.6811 326.4129 482.4052 328.8509 484.2578 328.6148 C
486.1063 328.3004 487.227 326.993 487.2516 325.8935 C
487.0494 321.7994 477.5014 319.4313 472.6089 319.9938 C
465.8793 321.1132 464.5058 325.2716 464.474 328.93 C
464.7136 342.5927 476.0137 350.0604 478.466 349.8011 C
480.1829 349.4886 481.4308 348.532 481.4597 346.1485 C
481.4493 344.3831 481.0262 342.5905 479.2469 342.4721 C
474.0482 342.0457 471.4279 333.975 471.3723 329.0519 C
f
*U
*u
504.3044 318.7763 m
501.5623 316.1497 497.1304 315.5522 493.957 316.0478 C
490.7875 316.592 488.9849 317.8389 488.8808 320.3105 C
488.8717 324.6402 491.573 327.8435 495.1283 330.3501 C
497.9748 332.6041 501.2957 334.5803 502.1568 335.1397 C
502.6874 335.4715 503.2559 335.6407 503.7187 335.6302 C
503.3762 337.9985 502.4441 340.7107 500.3997 341.1514 C
498.5488 341.4731 496.001 340.3026 494.9331 339.3278 C
494.7368 339.1401 493.9025 338.1591 493.2411 338.2544 C
492.1196 338.476 490.3518 339.966 490.3125 341.8375 C
490.3227 342.8835 490.7627 343.5203 491.3538 343.9447 C
493.2873 345.152 499.4473 346.8289 501.8316 346.4021 C
503.8784 345.9789 507.7046 344.6329 510.2266 333.897 C
511.3815 329.5243 511.4621 323.3661 511.463 322.074 C
511.4599 320.7144 511.263 316.9079 510.3568 314.435 C
510.0593 313.6419 508.0906 313.6235 507.3632 313.7449 C
506.2421 313.9528 504.1519 314.6621 504.1092 316.7812 C
504.1756 317.4524 504.2394 318.0984 504.3044 318.7763 C
f
1 D
497.0806 325.4926 m
495.9629 324.0283 495.7822 323.1676 495.7791 322.0207 C
495.7932 321.0076 496.4167 320.3373 497.406 320.1591 C
500.3832 319.7121 502.1604 322.0372 502.8076 322.3533 C
503.7344 322.7331 504.6363 323.0535 504.4997 322.9266 C
504.4997 325.1054 504.497 327.9605 504.3044 330.6751 C
502.4562 329.7405 498.888 327.7822 497.0806 325.4926 C
f
*U
*u
0 D
531.7913 339.1206 m
536.2719 337.9686 537.8159 332.9976 538.2991 329.33 C
538.5561 326.9406 538.752 322.2253 538.8198 319.387 C
538.8947 316.5482 539.3321 313.1775 539.3404 311.3213 C
539.3001 309.4704 537.3583 308.3201 535.1754 308.7348 C
533.1963 309.1607 531.4365 310.4419 531.4008 312.2334 C
531.4072 313.9548 531.6558 318.5107 531.6611 321.2183 C
531.6683 323.7239 532.0636 333.8615 529.2532 334.7002 C
527.4634 335.0306 522.2057 332.839 522.0944 324.0181 C
522.1211 321.4824 523.3711 315.0245 523.396 312.1868 C
523.3635 310.7407 521.79 310.3774 520.4675 310.6152 C
518.4881 311.0135 517.2347 312.1889 516.758 313.1915 C
515.7941 315.9515 515.7153 319.9195 515.1961 324.2706 C
514.7974 327.7076 513.977 334.4548 513.9597 336.6856 C
513.9785 339.2724 514.8193 341.041 517.9946 340.3964 C
520.1722 339.9071 521.349 338.7002 521.7041 335.0126 C
524.6394 338.7701 528.2203 339.9208 531.7913 339.1206 C
f
*U
*u
546.6625 352.1568 m
549.4302 351.2525 550.2243 349.0506 550.2419 346.5961 C
550.2395 345.5065 550.1147 340.6788 550.1766 334.8598 C
550.2474 328.4997 550.4956 321.7273 550.5021 319.1939 C
550.4869 317.3968 549.7555 315.5384 547.7036 315.8814 C
546.1205 316.1896 543.9096 317.8768 543.864 319.4227 C
543.8664 320.8986 543.9917 329.1088 543.9942 332.4526 C
543.9804 335.7312 543.356 346.8604 543.3436 348.8934 C
543.3696 350.7798 544.6074 352.7473 546.6625 352.1568 C
f
547.4433 311.4215 m
549.5498 310.9004 550.9922 307.5973 551.0227 306.2072 C
550.9877 304.7595 549.2951 304.0769 547.4434 304.457 C
544.9367 305.0245 543.6314 306.3446 543.6037 308.7915 C
543.6399 310.5713 545.4589 311.8187 547.4433 311.4215 C
f
*U
U
*u
1 D
0 g
593.4727 540.746 m
588.3033 519.4349 L
583.5237 543.0626 L
519.5327 557.1393 L
520.0016 521.5707 L
529.6385 519.4261 L
528.9163 512.9933 L
528.8228 513.0436 528.7337 513.0995 528.6399 513.1492 c
516.7133 519.4814 501.8968 520.1085 487.9313 514.847 c
483.2733 513.0644 478.9319 510.687 474.9656 507.8562 C
465.3518 568.7784 L
422.7903 568.7784 L
421.5985 561.7917 L
376.8236 561.7917 L
371.6983 530.4423 L
367.9774 535.0218 L
357.1252 548.3772 341.3992 555.727 323.9742 556.0934 C
361.9853 576.5169 L
335.4754 616.0954 L
287.5566 560.8959 L
295.8449 550.7871 L
288.3319 547.7284 281.7909 543.5191 276.3985 538.4223 C
235.3224 574.8611 L
220.9302 547.3282 L
221.4919 573.7754 L
157.25 553.2746 L
158.8892 518.7458 L
169.8202 521.5976 L
171.4481 504.0902 L
158.9695 509.7019 143.9756 509.5889 130.0481 503.6861 c
125.9306 501.9155 122.0736 499.6979 118.5182 497.1231 C
120.9322 507.7814 120.3605 518.291 116.3021 527.6521 c
111.5099 538.7066 103.0821 547.8607 92.7393 553.6284 C
85.4892 558.4538 76.8441 561.4696 67.7859 562.485 C
45.5823 566.381 18.8954 562.3783 -7.3588 551.2144 c
-17.0157 547.1083 -26.0301 542.4077 -34.1505 537.2433 C
-44.421 530.7116 L
-38.2224 520.2369 L
-18.9947 487.7445 L
-13.0852 477.7588 -13.057 477.7726 V
-2.6318 482.867 L
-1.1824 483.5751 L
46.6095 376.8563 L
51.2029 366.5989 L
61.908 370.0218 L
87.789 378.2965 L
99.1222 381.9197 L
96.1245 393.4346 L
82.3854 446.2096 L
86.3464 449.1212 90.0303 452.2296 93.4299 455.4842 C
92.6763 449.168 93.0634 442.7954 94.785 436.6846 c
98.3827 423.9023 106.7633 413.7885 118.3834 408.2066 c
130.9343 402.178 146.2545 402.1618 160.4155 408.163 c
167.5254 411.1961 173.8526 415.567 179.1913 420.8211 C
181.1437 399.8265 L
226.4381 406.4804 L
226.3778 447.1233 L
321.0447 400.3019 L
321.0447 445.6328 L
324.8694 445.9403 328.7415 446.5417 332.6334 447.4798 c
343.0733 449.996 351.9642 453.467 359.8881 458.2021 C
355.9132 433.8901 L
406.9518 425.8395 L
409.7743 444.2292 L
423.1074 419.5914 L
431.238 435.294 L
434.2116 409.5212 L
492.0945 399.3092 L
489.0207 418.7875 L
496.9336 417.8967 505.2922 418.9394 513.3557 421.9768 c
515.2879 422.71 517.1595 423.5556 518.9799 424.482 C
516.6512 403.7409 L
555.1702 398.3505 L
555.4854 382.556 L
595.6231 369.9266 L
647.9341 527.5349 L
593.4727 540.746 L
f
0 D
0 g
247.3491 492.2903 m
259.5113 504.1038 L
258.9903 498.6561 259.2642 492.9951 260.4088 487.2236 C
247.3491 492.2903 L
f
366.7727 500.3132 m
358.419 507.832 L
367.3444 517.3376 L
370.0222 520.1894 L
366.7727 500.3132 L
Bb
1 (Unnamed gradient\012118) 304 253.3333 -90 130 1.5711 0 0 1.5711 -2445.6285 -2851.9947 Bg
0 -18953.8229 -698.6347 0 651.0741 19510.4954 Bc
0 -204.2438 -698.6347 0 651.0741 556.6725 Bm
0 -18953.8229 -698.6347 0 651.0741 352.4287 Bc
f
0 BB
*U
*u
1 D
0 g
598.7098 558.5514 m
593.5401 537.2405 L
588.7606 560.8682 L
524.7696 574.9447 L
525.2384 539.3764 L
534.8754 537.2315 L
534.1532 530.7988 L
534.0599 530.8492 533.9708 530.9051 533.8768 530.9548 c
521.9502 537.2868 507.1338 537.914 493.1682 532.6525 c
488.5103 530.8699 484.1688 528.4926 480.2024 525.6618 C
470.5887 586.5839 L
428.0272 586.5839 L
426.8354 579.5972 L
382.0605 579.5972 L
376.9353 548.2478 L
373.2144 552.8273 L
362.3621 566.1828 346.636 573.5328 329.2111 573.8992 C
367.2222 594.3224 L
340.7123 633.9011 L
292.7934 578.7012 L
301.0818 568.5926 L
293.5687 565.5338 287.0277 561.3246 281.6353 556.2277 C
240.5594 592.6666 L
226.1672 565.134 L
226.7288 591.5812 L
162.487 571.0802 L
164.1261 536.5514 L
175.057 539.4031 L
176.6851 521.8956 L
164.2065 527.5077 149.2125 527.3947 135.2849 521.4916 c
131.1676 519.721 127.3106 517.5034 123.7551 514.9287 C
126.1692 525.5869 125.5975 536.0963 121.5391 545.4577 c
116.7467 556.5122 108.319 565.6661 97.9761 571.4338 C
90.7261 576.2594 82.0809 579.2752 73.0227 580.2905 C
50.8192 584.1864 24.1323 580.1838 -2.1218 569.0199 c
-11.7789 564.9137 -20.7931 560.2132 -28.9135 555.0488 C
-39.1841 548.5174 L
-32.9854 538.0422 L
-13.7577 505.55 L
-7.8482 495.5643 -7.8201 495.5781 V
2.6052 500.6725 L
4.0544 501.3805 L
51.8465 394.6618 L
56.4399 384.4044 L
67.1449 387.8271 L
93.0258 396.102 L
104.3591 399.7252 L
101.3615 411.2401 L
87.6223 464.015 L
91.5833 466.9267 95.2671 470.0351 98.6668 473.2895 C
97.9133 466.9735 98.3004 460.6009 100.022 454.4901 c
103.6196 441.7078 112.0002 431.5941 123.6203 426.0123 c
136.1712 419.9834 151.4914 419.9673 165.6526 425.9683 c
172.7623 429.0016 179.0895 433.3725 184.4282 438.6266 C
186.3805 417.6322 L
231.675 424.286 L
231.6148 464.9288 L
326.2815 418.1073 L
326.2815 463.4383 L
330.1063 463.7457 333.9784 464.3473 337.8702 465.2852 c
348.3102 467.8013 357.2012 471.2726 365.1249 476.0075 C
361.1503 451.6956 L
412.1887 443.6449 L
415.0111 462.0347 L
428.3442 437.3969 L
436.4748 453.0995 L
439.4484 427.3268 L
497.3314 417.1148 L
494.2576 436.5933 L
502.1706 435.7023 510.5291 436.7451 518.5926 439.7824 c
520.5249 440.5155 522.3965 441.3612 524.2167 442.2875 C
521.8883 421.5463 L
560.4071 416.1561 L
560.7223 400.3615 L
600.8599 387.7321 L
653.1709 545.3405 L
598.7098 558.5514 L
f
0 D
0 g
252.586 510.0958 m
264.7483 521.9095 L
264.2272 516.4616 264.5012 510.8007 265.6457 505.029 C
252.586 510.0958 L
f
372.0095 518.1186 m
363.6558 525.6375 L
372.5814 535.1432 L
375.259 537.9951 L
372.0095 518.1186 L
Bb
1 (Face Gradient) 314 310.6667 -90 148 1.5711 0 0 1.5711 -2445.6285 -2851.9947 Bg
0 -18953.8236 -698.6346 0 656.3109 19600.5729 Bc
0 -232.5237 -698.6346 0 656.3109 646.7493 Bm
0 -18953.8236 -698.6346 0 656.3109 414.2256 Bc
f
0 BB
*U
0.6094 0.668 0.6992 0.918 k
290.7623 548.131 m
288.209 545.8585 285.9341 543.3474 284.001 540.6106 C
291.2751 547.6759 L
290.7623 548.131 L
f
u
*u
1 0.74 0 0.14 k
1 D
598.7098 558.5514 m
593.5401 537.2405 L
588.7606 560.8682 L
524.7696 574.9447 L
525.2384 539.3764 L
534.8754 537.2315 L
534.1532 530.7988 L
534.0599 530.8492 533.9708 530.9051 533.8768 530.9548 c
521.9502 537.2868 507.1338 537.914 493.1682 532.6525 c
488.5103 530.8699 484.1688 528.4926 480.2024 525.6618 C
470.5887 586.5839 L
428.0272 586.5839 L
426.8354 579.5972 L
382.0605 579.5972 L
376.9353 548.2478 L
373.2144 552.8273 L
362.3621 566.1828 346.636 573.5328 329.2111 573.8992 C
367.2222 594.3224 L
340.7123 633.9011 L
292.7934 578.7012 L
301.0818 568.5926 L
293.5687 565.5338 287.0277 561.3246 281.6353 556.2277 C
240.5594 592.6666 L
226.1672 565.134 L
226.7288 591.5812 L
162.487 571.0802 L
164.1261 536.5514 L
175.057 539.4031 L
176.6851 521.8956 L
164.2065 527.5077 149.2125 527.3947 135.2849 521.4916 c
131.1676 519.721 127.3106 517.5034 123.7551 514.9287 C
126.1692 525.5869 125.5975 536.0963 121.5391 545.4577 c
116.7467 556.5122 108.319 565.6661 97.9761 571.4338 C
90.7261 576.2594 82.0809 579.2752 73.0227 580.2905 C
50.8192 584.1864 24.1323 580.1838 -2.1218 569.0199 c
-11.7789 564.9137 -20.7931 560.2132 -28.9135 555.0488 C
-39.1841 548.5174 L
-32.9854 538.0422 L
-13.7577 505.55 L
-7.8482 495.5643 -7.8201 495.5781 V
2.6052 500.6725 L
4.0544 501.3805 L
51.8465 394.6618 L
56.4399 384.4044 L
67.1449 387.8271 L
93.0258 396.102 L
104.3591 399.7252 L
101.3615 411.2401 L
87.6223 464.015 L
91.5833 466.9267 95.2671 470.0351 98.6668 473.2895 C
97.9133 466.9735 98.3004 460.6009 100.022 454.4901 c
103.6196 441.7078 112.0002 431.5941 123.6203 426.0123 c
136.1712 419.9834 151.4914 419.9673 165.6526 425.9683 c
172.7623 429.0016 179.0895 433.3725 184.4282 438.6266 C
186.3805 417.6322 L
231.675 424.286 L
231.6148 464.9288 L
326.2815 418.1073 L
326.2815 463.4383 L
330.1063 463.7457 333.9784 464.3473 337.8702 465.2852 c
348.3102 467.8013 357.2012 471.2726 365.1249 476.0075 C
361.1503 451.6956 L
412.1887 443.6449 L
415.0111 462.0347 L
428.3442 437.3969 L
436.4748 453.0995 L
439.4484 427.3268 L
497.3314 417.1148 L
494.2576 436.5933 L
502.1706 435.7023 510.5291 436.7451 518.5926 439.7824 c
520.5249 440.5155 522.3965 441.3612 524.2167 442.2875 C
521.8883 421.5463 L
560.4071 416.1561 L
560.7223 400.3615 L
600.8599 387.7321 L
653.1709 545.3405 L
598.7098 558.5514 L
f
0 D
372.5814 535.1432 m
375.259 537.9951 L
372.0095 518.1186 L
363.6558 525.6375 L
372.5814 535.1432 L
f
338.6688 616.3162 m
352.6823 597.2725 L
312.6028 577.4105 L
309.8331 581.6061 L
338.6688 616.3162 L
f
265.6457 505.029 m
252.586 510.0958 L
264.7483 521.9095 L
264.2272 516.4616 264.5012 510.8007 265.6457 505.029 C
f
73.2238 469.4346 m
89.1982 408.0736 L
63.3174 399.7987 L
10.1891 518.4328 L
7.3132 516.9179 1.9812 514.3714 -2.941 511.9509 C
-22.1689 544.4434 L
-14.4981 549.3216 -6.1283 553.6589 2.7963 557.4536 c
27.8524 568.108 51.7131 571.269 70.8506 567.9109 C
77.5966 567.1381 84.7692 565.126 91.0122 560.971 C
99.6251 556.1335 106.198 549.2456 110.0076 540.4582 c
119.2559 519.126 103.8018 488.309 73.2238 469.4346 C
f
182.9707 454.3018 m
177.5956 446.8466 170.1622 440.6338 161.3731 436.8841 c
138.9061 427.3634 116.4562 436.8841 110.461 458.1855 c
104.6435 478.8355 118.1693 503.3496 139.9352 512.7089 c
153.8159 518.592 167.7514 517.1983 177.7531 510.4097 c
183.94 506.2103 188.6248 499.9516 190.8507 492.0601 c
191.0939 491.2023 191.2933 490.337 191.4729 489.4683 c
192.0945 486.4616 192.3429 483.4008 192.2418 480.336 c
191.9409 471.2205 188.5816 462.0843 182.9707 454.3018 c
f
314.4337 436.9778 m
220.4968 483.9633 L
220.6616 434.7412 L
196.361 431.4146 L
194.6494 451.7421 L
202.1705 464.588 204.9109 479.7511 200.9782 493.6248 c
198.8263 501.2531 194.8695 507.9183 189.4738 513.2101 C
185.9878 554.6109 L
175.057 551.7596 L
174.5816 562.2151 L
213.6205 573.8345 L
215.9969 533.5873 L
244.7542 573.9865 L
272.8569 547.2349 L
233.5758 505.8182 L
270.4793 491.2133 L
274.6216 483.4054 280.8796 476.7439 288.793 471.8754 c
296.4375 467.1723 305.1658 464.3614 314.4337 463.4925 C
314.4337 436.9778 L
f
334.9922 477.152 m
332.0382 476.44 329.1313 475.9649 326.2815 475.6872 c
304.7287 473.5865 286.6605 483.5033 279.7783 499.5462 c
278.9563 501.4622 278.2914 503.4641 277.8016 505.5444 c
274.6159 519.0765 277.3178 531.1475 284.001 540.6106 c
285.9341 543.3474 288.209 545.8585 290.7623 548.131 c
297.0611 553.7377 305.0976 557.8549 314.199 560.0487 c
334.7536 565.0025 352.8429 558.7202 363.8928 545.1212 C
324.7819 503.4665 L
327.4485 502.9925 331.6653 503.6897 334.7743 504.4393 c
344.1016 506.6872 349.3295 511.6172 353.8972 517.0255 C
369.5305 502.9548 L
374.278 498.6819 L
372.1967 496.5342 370.0653 494.5617 367.8602 492.7382 c
358.8628 485.2978 348.5876 480.4287 334.9922 477.152 c
f
482.8202 432.2961 m
450.8408 437.1801 L
442.3455 493.5404 L
430.318 462.4447 L
412.2952 501.2985 L
412.101 501.2985 L
404.9651 456.2879 L
374.9545 461.5074 L
379.162 486.6253 L
380.2941 487.683 381.4157 488.7659 382.5178 489.9034 C
392.2268 499.9224 L
382.8094 508.3984 L
392.8255 568.191 L
423.146 568.191 L
430.7051 526.8075 L
439.2234 574.7851 L
460.8821 574.7851 L
469.8827 516.3259 L
458.4256 503.2806 452.8833 485.7684 456.71 469.7165 c
459.6646 457.307 467.3148 447.2732 478.2502 441.4629 c
479.3583 440.8742 480.4994 440.3518 481.6552 439.8629 C
482.8202 432.2961 L
f
514.8379 449.7025 m
507.0722 446.7773 499.4069 446.1736 492.5326 447.5255 c
487.7698 448.4623 483.3911 450.341 479.6246 453.0516 c
473.6025 457.3852 469.1443 463.8311 467.2134 471.9402 c
464.9011 481.6397 467.0175 492.033 472.2308 501.0743 c
474.8242 505.5715 478.1839 509.7305 482.1524 513.3041 c
486.5538 517.2673 491.6944 520.5139 497.3679 522.6851 c
510.6119 527.6747 523.6312 525.9311 532.8649 519.323 c
536.2122 516.9276 539.0587 513.8927 541.2389 510.3044 c
542.9196 507.5377 544.2128 504.4512 545.0203 501.0684 c
547.8163 489.4232 544.4696 476.919 537.1172 466.8404 c
533.9851 462.5472 530.1292 458.6941 525.7042 455.5378 c
522.377 453.1645 518.7337 451.1804 514.8379 449.7025 c
f
593.3247 402.3852 m
571.1171 409.0257 L
569.1805 490.8839 L
558.0076 427.7313 L
533.7738 431.5849 L
535.5004 449.7919 L
551.3224 463.1566 559.725 484.2335 555.1361 503.3447 c
553.1131 511.8192 548.7723 519.1749 542.6134 524.7991 C
544.6467 546.2402 L
535.4999 548.6839 L
536.1244 560.1364 L
577.869 551.7458 L
591.9045 485.1785 L
606.2836 544.853 L
638.0404 537.8246 L
593.3247 402.3852 L
f
*U
526.2277 508.0526 m
526.4793 507.0958 526.6071 506.0994 526.5653 505.0727 c
526.3135 498.8701 520.46 494.0714 513.4915 494.3547 c
506.5228 494.6376 501.0778 499.8951 501.3296 506.0975 c
501.5662 511.9231 506.745 516.5089 513.1481 516.8098 C
511.9195 517.074 510.6522 517.2511 509.3451 517.3043 c
497.7006 517.7769 488.1756 509.5214 487.7579 499.2345 c
487.3133 488.2844 496.1376 479.2841 507.6058 478.8185 c
519.2501 478.3457 528.7762 486.6006 529.2208 497.5507 c
529.3751 501.3496 528.2621 504.9694 526.2277 508.0526 C
f
172.6841 495.5157 m
172.6841 489.3081 167.0302 484.2758 160.0559 484.2758 c
153.0814 484.2758 147.4276 489.3081 147.4276 495.5157 c
147.4276 501.3461 152.4161 506.1381 158.8016 506.6985 C
157.5632 506.9128 156.2901 507.0385 154.9818 507.0385 c
143.3277 507.0385 134.1454 498.4032 134.1454 488.1078 c
134.1454 477.1484 143.3277 468.5137 154.8054 468.5137 c
166.4593 468.5137 175.6426 477.1484 175.6426 488.1078 c
175.6426 491.9098 174.3836 495.4813 172.2256 498.4795 C
172.5158 497.5338 172.6841 496.5432 172.6841 495.5157 c
f
56.6347 532.6239 m
60.3354 516.9097 L
61.7247 511.431 L
68.0473 514.4285 75.1005 514.4285 78.2364 511.5801 c
80.3328 509.6755 81.7334 507.8201 81.7234 505.0066 c
81.6977 497.7369 77.0552 489.7679 68.8718 483.2478 C
68.92 483.0576 L
82.515 490.8297 96.2901 500.2789 93.7771 519.1851 c
91.962 532.8404 74.6945 541.2449 56.6347 532.6239 C
f
338.28 545.5466 m
336.6789 546.1531 L
334.5806 546.9477 332.42 547.4341 330.257 547.5991 c
329.8109 547.633 329.38 547.6344 328.9633 547.6358 C
328.6138 547.6379 328.6136 547.6379 v
322.0102 547.702 315.4776 545.2514 310.219 540.7377 c
304.4712 535.8042 301.6705 530.4874 301.1377 523.4988 c
300.7806 518.8105 301.8046 514.2786 304.0997 510.393 c
304.7721 509.2546 305.4673 508.2719 306.225 507.3893 c
306.6283 506.9195 307.0759 506.4601 307.5791 505.9935 C
304.8679 509.2599 304.8169 514.922 307.7794 519.8594 c
311.3082 525.7404 317.7611 528.3525 322.192 525.6939 c
322.8588 525.294 323.4309 524.7877 323.9284 524.2125 C
337.3243 544.1259 L
338.28 545.5466 L
f
U
*u
0 g
613.0692 398.6419 m
622.2288 398.6419 L
622.2288 396.6398 L
618.8458 396.6398 L
618.8458 387.3346 L
616.4676 387.3346 L
616.4676 396.6398 L
613.0692 396.6398 L
613.0692 398.6419 l
f
*U
*u
629.0639 389.7511 m
631.1044 398.6419 L
634.5028 398.6419 L
634.5028 387.3346 L
632.3011 387.3346 L
632.3011 394.9828 l
632.3011 395.2027 632.3036 395.5108 632.3088 395.9073 c
632.3138 396.3036 632.3165 396.6091 632.3165 396.8239 C
630.1762 387.3346 L
627.8824 387.3346 L
625.7576 396.8239 l
625.7576 396.6091 625.7599 396.3036 625.7653 395.9073 c
625.7703 395.5108 625.7729 395.2027 625.7729 394.9828 C
625.7729 387.3346 L
623.5713 387.3346 L
623.5713 398.6419 L
627.008 398.6419 L
629.0639 389.7511 l
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF


------------------- FLATFI~1 --------------------
%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 5.5
%%For: (NOA) (Nintendo Of America)
%%Title: (Flat final)
%%CreationDate: (4/29/98) (10:28 AM)
%%BoundingBox: 31 320 477 492
%%HiResBoundingBox: 31.989 320.9302 476.0109 491.0698
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 1.2
%AI3_ColorUsage: Color
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -366 828 -2 635 437 18 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%IncludeResource: procset Adobe_level2_AI5 1.0 0
%%IncludeResource: procset Adobe_screens_AI5 1.0 0
%%IncludeResource: procset Adobe_blend_AI5 1.0 0
%%IncludeResource: procset Adobe_IllustratorA_AI5 1.0 0
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
2 Bn
%AI5_BeginGradient: (Face Gradient)
(Face Gradient) 0 2 Bd
[
0 0.08 0.25 0 1 50 100 %_Bs
0 0.16 0.51 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient\012118)
(Unnamed gradient\012118) 0 2 Bd
[
0 0 0 0 1 50 100 %_Bs
0.7 0.05 0.15 0.32 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
2 Bn
%AI5_BeginGradient: (Borders UPPERMOST Gradient)
(Borders UPPERMOST Gradient) 0 2 Bd
[
0.83 0.51 0 0 1 50 100 %_Bs
0.86 0.72 0.01 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Extruded Gradient)
(Extruded Gradient) 0 2 Bd
[
0.83 0.51 0 0 1 50 100 %_Bs
0.87 0.74 0.05 0.51 1 50.5618 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.87 0.74 0.05 0.51 k
Pc
Pc
0.83 0.51 0 0 k
Pc
Bb
2 (Face Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Borders UPPERMOST Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Extruded Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.7 0.05 0.15 0.32 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
*u
0 O
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
0 g
438.0126 431.776 m
434.7222 418.2113 L
431.68 433.2505 L
390.9493 442.2104 L
391.2477 419.5708 L
397.3817 418.2057 L
396.922 414.1112 L
396.8625 414.1432 396.8058 414.1788 396.7461 414.2104 c
389.1547 418.2409 379.7239 418.6401 370.8348 415.2911 c
367.8699 414.1565 365.1066 412.6432 362.582 410.8414 C
356.4628 449.6188 L
329.3721 449.6188 L
328.6135 445.1717 L
300.114 445.1717 L
296.8517 425.2176 L
294.4833 428.1325 L
287.5758 436.6333 277.5661 441.3115 266.475 441.5447 C
290.6693 454.5444 L
273.7956 479.7364 L
243.2949 444.6015 L
248.5705 438.1672 L
243.7884 436.2203 239.625 433.5411 236.1927 430.2969 C
210.0475 453.4905 L
200.8868 435.9656 L
201.2443 452.7994 L
160.3539 439.7505 L
161.3973 417.7727 L
168.3549 419.5879 L
169.3911 408.4443 L
161.4484 412.0162 151.9047 411.9443 143.0397 408.1871 c
140.4189 407.0601 137.9639 405.6486 135.7009 404.0097 C
137.2374 410.7938 136.8735 417.4832 134.2903 423.4416 c
131.24 430.4779 125.8757 436.3045 119.2924 439.9757 C
114.6777 443.0471 109.175 444.9667 103.4094 445.613 C
89.2767 448.0928 72.2903 445.5451 55.5793 438.4392 c
49.4326 435.8256 43.6949 432.8337 38.5262 429.5465 C
31.989 425.389 L
35.9344 418.7218 L
48.173 398.0402 L
51.9344 391.6842 51.9524 391.693 V
58.5881 394.9356 L
59.5106 395.3863 L
89.9305 327.4591 L
92.8542 320.9302 L
99.6681 323.1089 L
116.1415 328.3758 L
123.3552 330.682 L
121.4471 338.0113 L
112.7021 371.6029 L
115.2233 373.4562 117.5681 375.4347 119.732 377.5063 C
119.2523 373.486 119.4987 369.4298 120.5945 365.5402 c
122.8845 357.4042 128.2188 350.9667 135.6151 347.4138 c
143.6038 343.5765 153.3552 343.5662 162.3688 347.386 c
166.8943 349.3166 170.9216 352.0987 174.3197 355.443 C
175.5624 342.0798 L
204.3926 346.315 L
204.3542 372.1845 L
264.6103 342.3824 L
264.6103 371.2358 L
267.0448 371.4315 269.5094 371.8143 271.9866 372.4114 c
278.6317 374.013 284.2908 376.2223 289.3344 379.2362 C
286.8044 363.7615 L
319.2908 358.6372 L
321.0873 370.3424 L
329.5739 354.6603 L
334.7491 364.6551 L
336.6418 348.2505 L
373.4847 341.7505 L
371.5282 354.1486 L
376.5648 353.5816 381.8851 354.2453 387.0176 356.1786 c
388.2474 356.6453 389.4387 357.1835 390.5974 357.7732 C
389.1152 344.5713 L
413.6328 341.1403 L
413.8334 331.087 L
439.3813 323.0483 L
472.6776 423.367 L
438.0126 431.776 L
f
0 D
0 g
217.7026 400.9336 m
225.4439 408.453 L
225.1123 404.9855 225.2866 401.3822 226.0152 397.7086 C
217.7026 400.9336 L
f
293.7165 406.0402 m
288.3993 410.826 L
294.0804 416.8764 L
295.7848 418.6916 L
293.7165 406.0402 L
Bb
1 (Unnamed gradient\012118) 304 253.3333 -90 130 1 0 0 1 -37.3334 -188.6667 Bg
0 -12064.0004 -444.6886 0 474.6776 12506.0003 Bc
0 -130 -444.6886 0 474.6776 442 Bm
0 -12064.0004 -444.6886 0 474.6776 312 Bc
f
0 BB
*U
*u
1 D
0 g
441.346 443.1092 m
438.0555 429.5447 L
435.0133 444.5839 L
394.2826 453.5437 L
394.581 430.9042 L
400.715 429.539 L
400.2553 425.4445 L
400.1959 425.4766 400.1392 425.5122 400.0794 425.5438 c
392.488 429.5742 383.0573 429.9734 374.1681 426.6244 c
371.2033 425.4898 368.4399 423.9766 365.9153 422.1748 C
359.7961 460.9521 L
332.7054 460.9521 L
331.9468 456.505 L
303.4473 456.505 L
300.1851 436.5509 L
297.8167 439.4658 L
290.9091 447.9667 280.8994 452.645 269.8083 452.8782 C
294.0026 465.8777 L
277.1289 491.0698 L
246.6282 455.9347 L
251.9038 449.5005 L
247.1217 447.5536 242.9583 444.8744 239.526 441.6302 C
213.3809 464.8238 L
204.2202 447.2991 L
204.5776 464.1329 L
163.6873 451.0839 L
164.7306 429.1061 L
171.6882 430.9212 L
172.7245 419.7776 L
164.7818 423.3497 155.238 423.2778 146.373 419.5204 c
143.7523 418.3934 141.2973 416.9819 139.0342 415.3431 C
140.5708 422.1271 140.2069 428.8164 137.6237 434.775 c
134.5733 441.8113 129.209 447.6378 122.6257 451.309 C
118.011 454.3805 112.5083 456.3001 106.7427 456.9463 C
92.61 459.4261 75.6236 456.8784 58.9127 449.7725 c
52.7659 447.1589 47.0283 444.167 41.8596 440.8798 C
35.3223 436.7225 L
39.2678 430.055 L
51.5064 409.3735 L
55.2678 403.0175 55.2857 403.0263 V
61.9215 406.2689 L
62.8439 406.7196 L
93.2639 338.7924 L
96.1876 332.2635 L
103.0014 334.4421 L
119.4748 339.7091 L
126.6885 342.0153 L
124.7805 349.3446 L
116.0354 382.9362 L
118.5566 384.7895 120.9014 386.768 123.0653 388.8395 C
122.5857 384.8193 122.8321 380.7631 123.9279 376.8735 c
126.2178 368.7375 131.5521 362.3001 138.9484 358.7472 c
146.9371 354.9098 156.6885 354.8995 165.7022 358.7192 c
170.2276 360.6499 174.2549 363.432 177.653 366.7763 C
178.8957 353.4132 L
207.7259 357.6484 L
207.6876 383.5178 L
267.9436 353.7156 L
267.9436 382.5691 L
270.3781 382.7648 272.8427 383.1477 275.3199 383.7447 c
281.965 385.3462 287.6242 387.5557 292.6677 390.5695 C
290.1378 375.0948 L
322.6241 369.9705 L
324.4206 381.6757 L
332.9072 365.9936 L
338.0824 375.9884 L
339.9751 359.5839 L
376.818 353.0839 L
374.8615 365.4821 L
379.8982 364.915 385.2184 365.5787 390.3509 367.512 c
391.5808 367.9786 392.7721 368.5169 393.9307 369.1065 C
392.4486 355.9046 L
416.9661 352.4737 L
417.1667 342.4203 L
442.7146 334.3816 L
476.0109 434.7004 L
441.346 443.1092 L
f
0 D
0 g
221.0359 412.2669 m
228.7773 419.7864 L
228.4456 416.3188 228.62 412.7156 229.3485 409.0419 C
221.0359 412.2669 L
f
297.0498 417.3735 m
291.7326 422.1593 L
297.4138 428.2098 L
299.1181 430.025 L
297.0498 417.3735 L
Bb
1 (Face Gradient) 314 310.6667 -90 148 1 0 0 1 -37.3334 -188.6667 Bg
0 -12064.0009 -444.6886 0 478.0109 12563.3342 Bc
0 -148 -444.6886 0 478.0109 499.3334 Bm
0 -12064.0009 -444.6886 0 478.0109 351.3334 Bc
f
0 BB
*U
0.6094 0.668 0.6992 0.918 k
245.3354 436.4766 m
243.7102 435.0301 242.2622 433.4318 241.0318 431.6898 C
245.6618 436.1869 L
245.3354 436.4766 L
f
u
*u
1 0.74 0 0.14 k
1 D
441.346 443.1092 m
438.0555 429.5447 L
435.0133 444.5839 L
394.2826 453.5437 L
394.581 430.9042 L
400.715 429.539 L
400.2553 425.4445 L
400.1959 425.4766 400.1392 425.5122 400.0794 425.5438 c
392.488 429.5742 383.0573 429.9734 374.1681 426.6244 c
371.2033 425.4898 368.4399 423.9766 365.9153 422.1748 C
359.7961 460.9521 L
332.7054 460.9521 L
331.9468 456.505 L
303.4473 456.505 L
300.1851 436.5509 L
297.8167 439.4658 L
290.9091 447.9667 280.8994 452.645 269.8083 452.8782 C
294.0026 465.8777 L
277.1289 491.0698 L
246.6282 455.9347 L
251.9038 449.5005 L
247.1217 447.5536 242.9583 444.8744 239.526 441.6302 C
213.3809 464.8238 L
204.2202 447.2991 L
204.5776 464.1329 L
163.6873 451.0839 L
164.7306 429.1061 L
171.6882 430.9212 L
172.7245 419.7776 L
164.7818 423.3497 155.238 423.2778 146.373 419.5204 c
143.7523 418.3934 141.2973 416.9819 139.0342 415.3431 C
140.5708 422.1271 140.2069 428.8164 137.6237 434.775 c
134.5733 441.8113 129.209 447.6378 122.6257 451.309 C
118.011 454.3805 112.5083 456.3001 106.7427 456.9463 C
92.61 459.4261 75.6236 456.8784 58.9127 449.7725 c
52.7659 447.1589 47.0283 444.167 41.8596 440.8798 C
35.3223 436.7225 L
39.2678 430.055 L
51.5064 409.3735 L
55.2678 403.0175 55.2857 403.0263 V
61.9215 406.2689 L
62.8439 406.7196 L
93.2639 338.7924 L
96.1876 332.2635 L
103.0014 334.4421 L
119.4748 339.7091 L
126.6885 342.0153 L
124.7805 349.3446 L
116.0354 382.9362 L
118.5566 384.7895 120.9014 386.768 123.0653 388.8395 C
122.5857 384.8193 122.8321 380.7631 123.9279 376.8735 c
126.2178 368.7375 131.5521 362.3001 138.9484 358.7472 c
146.9371 354.9098 156.6885 354.8995 165.7022 358.7192 c
170.2276 360.6499 174.2549 363.432 177.653 366.7763 C
178.8957 353.4132 L
207.7259 357.6484 L
207.6876 383.5178 L
267.9436 353.7156 L
267.9436 382.5691 L
270.3781 382.7648 272.8427 383.1477 275.3199 383.7447 c
281.965 385.3462 287.6242 387.5557 292.6677 390.5695 C
290.1378 375.0948 L
322.6241 369.9705 L
324.4206 381.6757 L
332.9072 365.9936 L
338.0824 375.9884 L
339.9751 359.5839 L
376.818 353.0839 L
374.8615 365.4821 L
379.8982 364.915 385.2184 365.5787 390.3509 367.512 c
391.5808 367.9786 392.7721 368.5169 393.9307 369.1065 C
392.4486 355.9046 L
416.9661 352.4737 L
417.1667 342.4203 L
442.7146 334.3816 L
476.0109 434.7004 L
441.346 443.1092 L
f
0 D
297.4138 428.2098 m
299.1181 430.025 L
297.0498 417.3735 L
291.7326 422.1593 L
297.4138 428.2098 L
f
275.8282 479.8769 m
284.7479 467.7555 L
259.237 455.1132 L
257.4741 457.7837 L
275.8282 479.8769 L
f
229.3485 409.0419 m
221.0359 412.2669 L
228.7773 419.7864 L
228.4456 416.3188 228.62 412.7156 229.3485 409.0419 C
f
106.8707 386.3858 m
117.0385 347.3291 L
100.5652 342.0621 L
66.7487 417.5735 L
64.9181 416.6092 61.5243 414.9884 58.3913 413.4477 C
46.1526 434.1294 L
51.0351 437.2344 56.3625 439.9951 62.0431 442.4105 c
77.9915 449.1921 93.179 451.2041 105.3601 449.0666 C
109.654 448.5747 114.2194 447.294 118.1931 444.6493 C
123.6753 441.5702 127.859 437.186 130.2838 431.5928 c
136.1704 418.0147 126.3338 398.3995 106.8707 386.3858 C
f
176.7253 376.7537 m
173.304 372.0084 168.5726 368.0539 162.9783 365.6672 c
148.6779 359.6072 134.3884 365.6672 130.5724 379.2257 c
126.8695 392.3695 135.4788 407.9729 149.3329 413.9302 c
158.1681 417.6748 167.0381 416.7877 173.4043 412.4667 c
177.3423 409.7938 180.3242 405.8101 181.741 400.7871 c
181.8958 400.2411 182.0227 399.6903 182.137 399.1374 c
182.5327 397.2236 182.6908 395.2754 182.6264 393.3246 c
182.4349 387.5225 180.2967 381.7073 176.7253 376.7537 c
f
260.4024 365.7268 m
200.6109 395.6334 L
200.7158 364.3032 L
185.2483 362.1858 L
184.1589 375.1244 L
188.9461 383.3009 190.6904 392.9523 188.1872 401.783 c
186.8175 406.6385 184.299 410.8809 180.8646 414.2492 C
178.6457 440.6011 L
171.6882 438.7862 L
171.3856 445.4412 L
196.2341 452.837 L
197.7467 427.2194 L
216.0509 452.9338 L
233.9385 435.9062 L
208.9358 409.5442 L
232.4251 400.2481 L
235.0617 395.2783 239.045 391.0382 244.0819 387.9394 c
248.9477 384.9458 254.5033 383.1567 260.4024 382.6036 C
260.4024 365.7268 L
f
273.488 391.298 m
271.6078 390.8448 269.7575 390.5424 267.9436 390.3656 c
254.2251 389.0285 242.7246 395.3406 238.344 405.552 c
237.8208 406.7716 237.3976 408.0458 237.0858 409.3699 c
235.0581 417.9832 236.7779 425.6665 241.0318 431.6898 c
242.2622 433.4318 243.7102 435.0301 245.3354 436.4766 c
249.3446 440.0453 254.4599 442.6659 260.253 444.0623 c
273.3361 447.2154 284.8501 443.2167 291.8834 434.5608 C
266.9891 408.0473 L
268.6864 407.7456 271.3704 408.1894 273.3493 408.6665 c
279.2862 410.0973 282.6138 413.2353 285.5212 416.6777 C
295.4719 407.7216 L
298.4937 405.0019 L
297.1689 403.6349 295.8123 402.3794 294.4087 401.2187 c
288.6818 396.4828 282.1416 393.3836 273.488 391.298 c
f
367.5815 362.7469 m
347.2264 365.8556 L
341.8191 401.7293 L
334.1635 381.9367 L
322.6919 406.6674 L
322.5683 406.6674 L
318.0262 378.0178 L
298.9243 381.3401 L
301.6024 397.3278 L
302.323 398.001 303.0369 398.6903 303.7384 399.4143 C
309.9182 405.7915 L
303.924 411.1865 L
310.2993 449.2449 L
329.5985 449.2449 L
334.4099 422.904 L
339.8319 453.4421 L
353.6178 453.4421 L
359.3467 416.2324 L
352.0542 407.929 348.5265 396.7824 350.9622 386.5652 c
352.8428 378.6665 357.7122 372.2799 364.6727 368.5816 c
365.378 368.2069 366.1043 367.8744 366.84 367.5632 C
367.5815 362.7469 L
f
387.961 373.8262 m
383.0181 371.9643 378.1391 371.58 373.7635 372.4405 c
370.732 373.0368 367.9449 374.2326 365.5475 375.9579 c
361.7144 378.7163 358.8767 382.8191 357.6477 387.9806 c
356.1759 394.1544 357.523 400.7698 360.8413 406.5247 c
362.492 409.3872 364.6305 412.0344 367.1565 414.309 c
369.958 416.8316 373.23 418.8981 376.8412 420.2801 c
385.2711 423.456 393.558 422.3462 399.4353 418.1401 c
401.5659 416.6154 403.3777 414.6837 404.7654 412.3997 c
405.8352 410.6387 406.6583 408.6741 407.1723 406.5209 c
408.952 399.1087 406.8218 391.1497 402.1419 384.7346 c
400.1483 382.0019 397.694 379.5494 394.8775 377.5404 c
392.7597 376.0298 390.4407 374.7669 387.961 373.8262 c
f
437.9184 343.7084 m
423.7831 347.9351 L
422.5504 400.0384 L
415.4388 359.8414 L
400.0138 362.2942 L
401.1128 373.8831 L
411.1836 382.3898 416.5319 395.8054 413.6111 407.9698 c
412.3234 413.3639 409.5605 418.0458 405.6403 421.6257 C
406.9345 435.2731 L
401.1125 436.8285 L
401.51 444.1181 L
428.0807 438.7774 L
437.0144 396.4069 L
446.1668 434.3901 L
466.3802 429.9165 L
437.9184 343.7084 L
f
*U
395.2107 410.9664 m
395.3708 410.3574 395.4522 409.7232 395.4256 409.0697 c
395.2653 405.1217 391.5395 402.0673 387.104 402.2476 c
382.6684 402.4277 379.2026 405.7741 379.3629 409.722 c
379.5135 413.43 382.8098 416.3489 386.8854 416.5404 C
386.1034 416.7086 385.2968 416.8213 384.4648 416.8552 c
377.053 417.156 370.9903 411.9013 370.7244 405.3536 c
370.4414 398.3838 376.0581 392.6551 383.3577 392.3587 c
390.7694 392.0578 396.8328 397.3121 397.1158 404.2819 c
397.214 406.6999 396.5056 409.0039 395.2107 410.9664 C
f
170.1778 402.9866 m
170.1778 399.0354 166.5791 395.8323 162.1399 395.8323 c
157.7006 395.8323 154.1019 399.0354 154.1019 402.9866 c
154.1019 406.6977 157.2771 409.7478 161.3415 410.1045 C
160.5533 410.2409 159.7429 410.3209 158.9102 410.3209 c
151.4923 410.3209 145.6477 404.8245 145.6477 398.2714 c
145.6477 391.2957 151.4923 385.7996 158.7979 385.7996 c
166.2157 385.7996 172.0609 391.2957 172.0609 398.2714 c
172.0609 400.6914 171.2596 402.9647 169.886 404.8731 C
170.0707 404.2711 170.1778 403.6406 170.1778 402.9866 c
f
96.3116 426.6062 m
98.6671 416.604 L
99.5514 413.1168 L
103.5758 415.0247 108.0652 415.0247 110.0612 413.2117 c
111.3956 411.9994 112.2871 410.8184 112.2807 409.0276 c
112.2644 404.4004 109.3094 399.3281 104.1006 395.178 C
104.1313 395.0569 L
112.7846 400.0039 121.5525 406.0184 119.953 418.0523 c
118.7977 426.744 107.8068 432.0935 96.3116 426.6062 C
f
275.5807 434.8316 m
274.5616 435.2176 L
273.226 435.7234 271.8508 436.033 270.474 436.138 c
270.1901 436.1596 269.9158 436.1605 269.6506 436.1614 C
269.4281 436.1627 269.428 436.1627 v
265.2249 436.2035 261.0668 434.6437 257.7197 431.7707 c
254.0612 428.6305 252.2785 425.2463 251.9394 420.798 c
251.7121 417.8139 252.3639 414.9293 253.8247 412.4561 c
254.2527 411.7315 254.6952 411.106 255.1775 410.5442 c
255.4342 410.2452 255.7191 409.9528 256.0394 409.6558 C
254.3137 411.7349 254.2812 415.3388 256.1669 418.4815 c
258.413 422.2248 262.5203 423.8874 265.3406 422.1952 c
265.765 421.9407 266.1292 421.6184 266.4458 421.2523 C
274.9724 433.9273 L
275.5807 434.8316 L
f
U
*u
0 g
450.4859 341.3258 m
456.316 341.3258 L
456.316 340.0514 L
454.1627 340.0514 L
454.1627 334.1286 L
452.649 334.1286 L
452.649 340.0514 L
450.4859 340.0514 L
450.4859 341.3258 l
f
*U
*u
460.6666 335.6667 m
461.9654 341.3258 L
464.1285 341.3258 L
464.1285 334.1286 L
462.7271 334.1286 L
462.7271 338.9967 l
462.7271 339.1367 462.7287 339.3328 462.732 339.5852 c
462.7352 339.8374 462.7369 340.0319 462.7369 340.1686 C
461.3746 334.1286 L
459.9146 334.1286 L
458.5621 340.1686 l
458.5621 340.0319 458.5636 339.8374 458.567 339.5852 c
458.5702 339.3328 458.5719 339.1367 458.5719 338.9967 C
458.5719 334.1286 L
457.1705 334.1286 L
457.1705 341.3258 L
459.358 341.3258 L
460.6666 335.6667 l
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF


------------------- FLATFI~1.EPS --------------------
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: (NOA) (Nintendo Of America)
%%Title: (Flat final.eps)
%%CreationDate: (5/4/98) (3:15 PM)
%%BoundingBox: 80 346 525 517
%%HiResBoundingBox: 80.9746 346.5233 524.9965 516.6629
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 1.2
%AI3_ColorUsage: Color
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 0 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -366 828 -2 635 437 18 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.1 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 13 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentscreen pop pop
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.3 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 68 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
	Adobe_blend_AI5_vars begin
	/invertXfer
	{
		[
		{
			1 exch sub
		} /exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	} bd
} bd
/terminate
{
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
		currentdict Adobe_blend_AI5 eq
		{
		 end
		} if
	} if
} bd
/nullString () def
/zeroStringAry 256 string def
/dpiThreshold 600 def
/tRectOK? deviceDPI dpiThreshold le currentscreen pop pop 150 le and def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 75 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
%/white? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where {pop lv1Fix} {false} ifelse def
[
/tint1Data
/tint2Data
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/ccAry1 5 array def
/setCustomColor
{
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/blendImg
{
	setImgSpace cData systemdict /image get
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
	} bd
} if
/colorimage where dup
{
	exch pop
	/doCImg /colorimage load def
	/mCMYKData
	{
		4
		{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
			4 1 roll
		} repeat
	} bd
} if
not
{
	/mCMYKData nullProc def
	/doCImg
	{
		pop pop
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
		systemdict /image get exec
		sSave restore
	} bd
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		setSSave
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		blendImg
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		currentcmykcolor
		4
		{
			makeByte 8 string copy 4 1 roll
		} repeat
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			/setcmykcolor cvx
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg {{_fill}}
			{{_of true eq {currentgray 1 ne {bwFill} if} {bwFill} ifelse}} ifelse def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq	
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					blendImg
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/d255- 256 array def
	0 1 255
	{
		d255- exch 1 d255 2 index get sub put
	} bind for
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		systemdict /setgray get
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
		
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
		
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					systemdict /setgray get exec
					systemdict /fill get exec
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
%
%
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq {/blend? false store} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
%
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt {/blend? false def} if
		blend?
		
%
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/getRData
{
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			7
		} ifelse
	} ifelse
	index 100 div /endPoint xs
	/colorType gMark store
	/color? colorType 0 gt store
	colorType dup 3 eq
	{
		/tint2Data gMark store
	} if
	dup 1 gt
	{
		/tint1Data gMark store
	} if
	/cData gMark store
	setCDataLen
	0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		clip
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/blendImg
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where
	{
		pop 0 0 bInc 1 /rectfill cvx
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		systemdict /fill get
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt {exch} if pop store
		
		/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
		pChange .5 gt dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx systemdict /fill get
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
	 end
	} if
} bd
/Bn
{
	1 add dict
	dup nullString null put
	/_bn xs
} bd
/Bd
{
	Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
		/_fill {_of true eq {currentgray 1 ne {__fill} if} {__fill} ifelse} def
	} ifelse
	/fill
	{
	} def
} bd
/BB
{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
2 Bn
%AI5_BeginGradient: (Face Gradient)
(Face Gradient) 0 2 Bd
[
0
<
292828282827272726262625252524242424232323222222212121202020201F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A1919191818181717171716161615151514
>
<
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
0
1 %_Br
[
0 0.08 0.25 0 1 50 100 %_Bs
0 0.16 0.51 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient\012118)
(Unnamed gradient\012118) 0 2 Bd
[
<
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413
1211100F0E0D0C0B0A09080706050403020100
>
<
0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A
0A0A0A0A0A0A09090909090909090909090909090808080808080808080808080808070707070707
07070707070707070606060606060606060606060606050505050505050505050505050504040404
04040404040404040404030303030303030303030303030302020202020202020202020202020101
01010101010101010101010100000000000000
>
<
26262626252525252524242424232323232322222222222121212120202020201F1F1F1F1F1E1E1E
1E1D1D1D1D1D1C1C1C1C1C1B1B1B1B1A1A1A1A1A1919191918181818181717171717161616161515
15151514141414141313131312121212121111111111101010100F0F0F0F0F0E0E0E0E0E0D0D0D0D
0C0C0C0C0C0B0B0B0B0B0A0A0A0A0909090909080808080807070707060606060605050505050404
04040303030303020202020201010101000000
>
<
52515150504F4F4E4E4D4D4D4C4C4B4B4A4A49494848484747464645454444434342424241414040
3F3F3E3E3D3D3D3C3C3B3B3A3A393938383737373636353534343333323232313130302F2F2E2E2D
2D2C2C2C2B2B2A2A292928282727272626252524242323222221212120201F1F1E1E1D1D1C1C1C1B
1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C0B0B0B0A0A0909
08080707060606050504040303020201010000
>
1 %_Br
[
0 0 0 0 1 50 100 %_Bs
0.7 0.05 0.15 0.32 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
2 Bn
%AI5_BeginGradient: (Borders UPPERMOST Gradient)
(Borders UPPERMOST Gradient) 0 2 Bd
[
<
DBDBDBDBDBDBDADADADADADADAD9D9D9D9D9D9D9D8D8D8D8D8D8D8D7D7D7D7D7D7D7D6D6D6D6D6D6
D6D5D5D5D5D5D5D5D4D4D4D4D4D4
>
<
B8B7B6B5B4B3B2B1B0AFADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190
8F8E8D8C8B8A8988878685848382
>
<
03030202020202020202020202020202020202020202010101010101010101010101010101010101
0101010000000000000000000000
>
0
1 %_Br
[
0.83 0.51 0 0 1 50 100 %_Bs
0.86 0.72 0.01 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Extruded Gradient)
(Extruded Gradient) 0 2 Bd
[
<
DEDEDEDEDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDB
DBDBDBDBDBDADADADADADADADADADADADADAD9D9D9D9D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D8
D8D8D8D7D7D7D7D7D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D5D5
D5D5D4D4D4D4D4D4D4D4D4D4D4
>
<
BDBCBCBBBBBBBABAB9B9B8B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADADACAC
ABABAAAAA9A9A9A8A8A7A7A6A6A5A5A5A4A4A3A3A2A2A1A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A
99999998989797969695959594949393929291919090908F8F8E8E8D8D8C8C8C8B8B8A8A89898888
87878786868585848483838282
>
<
0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0909090909
09090909090808080808080808080808070707070707070707070606060606060606060605050505
05050505050505040404040404040404040303030303030303030302020202020202020202010101
01010101010101000000000000
>
<
8281807F7E7D7C7B7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A59585756565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635
34333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D
0C0B0A09080706050403020100
>
1 %_Br
[
0.83 0.51 0 0 1 50 100 %_Bs
0.87 0.74 0.05 0.51 1 50.5618 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.87 0.74 0.05 0.51 k
Pc
Pc
0.83 0.51 0 0 k
Pc
Bb
2 (Face Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Borders UPPERMOST Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Extruded Gradient) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.7 0.05 0.15 0.32 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
*u
0 O
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
0 g
486.9982 457.3691 m
483.7078 443.8044 L
480.6656 458.8436 L
439.9349 467.8035 L
440.2333 445.1639 L
446.3673 443.7988 L
445.9076 439.7043 L
445.8481 439.7363 445.7914 439.7719 445.7317 439.8035 c
438.1403 443.834 428.7095 444.2332 419.8204 440.8842 c
416.8555 439.7496 414.0922 438.2363 411.5676 436.4345 C
405.4484 475.2119 L
378.3577 475.2119 L
377.5991 470.7648 L
349.0996 470.7648 L
345.8373 450.8107 L
343.4689 453.7256 L
336.5614 462.2264 326.5517 466.9046 315.4606 467.1378 C
339.6549 480.1375 L
322.7812 505.3295 L
292.2805 470.1946 L
297.5561 463.7603 L
292.774 461.8134 288.6106 459.1342 285.1783 455.89 C
259.0331 479.0836 L
249.8724 461.5587 L
250.2299 478.3925 L
209.3395 465.3436 L
210.3829 443.3658 L
217.3405 445.181 L
218.3767 434.0374 L
210.434 437.6093 200.8903 437.5374 192.0253 433.7802 c
189.4045 432.6532 186.9495 431.2417 184.6865 429.6028 C
186.223 436.3869 185.8591 443.0763 183.2759 449.0347 c
180.2256 456.071 174.8613 461.8976 168.278 465.5688 C
163.6633 468.6402 158.1606 470.5598 152.395 471.2061 C
138.2623 473.6859 121.2759 471.1382 104.5649 464.0323 c
98.4182 461.4187 92.6805 458.4268 87.5118 455.1396 C
80.9746 450.9821 L
84.92 444.3149 L
97.1586 423.6333 L
100.92 417.2773 100.938 417.2861 V
107.5737 420.5287 L
108.4962 420.9794 L
138.9161 353.0522 L
141.8398 346.5233 L
148.6537 348.702 L
165.1271 353.9689 L
172.3408 356.2751 L
170.4327 363.6044 L
161.6877 397.196 L
164.2089 399.0493 166.5537 401.0278 168.7176 403.0994 C
168.2379 399.0791 168.4843 395.0229 169.5801 391.1333 c
171.8701 382.9973 177.2044 376.5598 184.6007 373.0069 c
192.5894 369.1696 202.3408 369.1593 211.3544 372.9791 c
215.8799 374.9097 219.9072 377.6918 223.3053 381.0361 C
224.548 367.6729 L
253.3782 371.9081 L
253.3398 397.7776 L
313.5959 367.9755 L
313.5959 396.8289 L
316.0304 397.0246 318.495 397.4074 320.9722 398.0045 c
327.6173 399.6061 333.2764 401.8154 338.32 404.8293 C
335.79 389.3546 L
368.2764 384.2303 L
370.0729 395.9355 L
378.5595 380.2534 L
383.7347 390.2482 L
385.6274 373.8436 L
422.4703 367.3436 L
420.5138 379.7417 L
425.5504 379.1747 430.8707 379.8384 436.0032 381.7717 c
437.233 382.2384 438.4243 382.7766 439.583 383.3663 C
438.1008 370.1644 L
462.6184 366.7334 L
462.819 356.6801 L
488.3669 348.6414 L
521.6632 448.9601 L
486.9982 457.3691 L
f
0 D
0 g
266.6882 426.5267 m
274.4295 434.0461 L
274.0979 430.5786 274.2722 426.9753 275.0008 423.3017 C
266.6882 426.5267 L
f
342.7021 431.6333 m
337.3849 436.4191 L
343.066 442.4695 L
344.7704 444.2847 L
342.7021 431.6333 L
Bb
1 (Unnamed gradient\012118) 304 253.3333 -90 130 1 0 0 1 11.6522 -214.2598 Bg
0 -12064.0004 -444.6886 0 523.6632 12531.5935 Bc
0 -130 -444.6886 0 523.6632 467.5931 Bm
0 -12064.0004 -444.6886 0 523.6632 337.5931 Bc
f
0 BB
*U
*u
1 D
0 g
490.3316 468.7023 m
487.0411 455.1378 L
483.9989 470.177 L
443.2682 479.1368 L
443.5666 456.4973 L
449.7006 455.1321 L
449.2409 451.0376 L
449.1815 451.0697 449.1248 451.1053 449.065 451.1369 c
441.4736 455.1673 432.0429 455.5665 423.1537 452.2175 c
420.1889 451.0829 417.4255 449.5697 414.9009 447.7679 C
408.7817 486.5452 L
381.691 486.5452 L
380.9324 482.0981 L
352.4329 482.0981 L
349.1707 462.144 L
346.8023 465.0589 L
339.8947 473.5598 329.885 478.2381 318.7939 478.4713 C
342.9882 491.4708 L
326.1145 516.6629 L
295.6138 481.5278 L
300.8894 475.0936 L
296.1073 473.1467 291.9439 470.4675 288.5116 467.2233 C
262.3665 490.4169 L
253.2058 472.8922 L
253.5632 489.726 L
212.6729 476.677 L
213.7162 454.6992 L
220.6738 456.5143 L
221.7101 445.3707 L
213.7674 448.9428 204.2236 448.8709 195.3586 445.1135 c
192.7379 443.9865 190.2829 442.575 188.0198 440.9362 C
189.5564 447.7202 189.1925 454.4095 186.6093 460.3681 c
183.5589 467.4044 178.1946 473.2309 171.6113 476.9021 C
166.9966 479.9736 161.4939 481.8932 155.7283 482.5394 C
141.5956 485.0192 124.6092 482.4715 107.8983 475.3656 c
101.7515 472.752 96.0139 469.7601 90.8452 466.4729 C
84.3079 462.3156 L
88.2534 455.6481 L
100.492 434.9666 L
104.2534 428.6106 104.2713 428.6194 V
110.9071 431.862 L
111.8295 432.3127 L
142.2495 364.3855 L
145.1732 357.8566 L
151.987 360.0352 L
168.4604 365.3022 L
175.6741 367.6084 L
173.7661 374.9377 L
165.021 408.5293 L
167.5422 410.3826 169.887 412.3611 172.0509 414.4326 C
171.5713 410.4124 171.8177 406.3562 172.9135 402.4666 c
175.2034 394.3306 180.5377 387.8932 187.934 384.3403 c
195.9227 380.5029 205.6741 380.4926 214.6878 384.3123 c
219.2132 386.243 223.2405 389.0251 226.6386 392.3694 C
227.8813 379.0063 L
256.7115 383.2415 L
256.6732 409.1109 L
316.9292 379.3087 L
316.9292 408.1622 L
319.3637 408.3579 321.8283 408.7408 324.3055 409.3378 c
330.9506 410.9393 336.6098 413.1488 341.6533 416.1626 C
339.1234 400.6879 L
371.6097 395.5636 L
373.4062 407.2688 L
381.8928 391.5867 L
387.068 401.5815 L
388.9607 385.177 L
425.8036 378.677 L
423.8471 391.0752 L
428.8838 390.5081 434.204 391.1718 439.3365 393.1051 c
440.5664 393.5717 441.7577 394.11 442.9163 394.6996 C
441.4342 381.4977 L
465.9517 378.0668 L
466.1523 368.0134 L
491.7002 359.9747 L
524.9965 460.2935 L
490.3316 468.7023 L
f
0 D
0 g
270.0215 437.86 m
277.7629 445.3795 L
277.4312 441.9119 277.6056 438.3087 278.3341 434.635 C
270.0215 437.86 L
f
346.0354 442.9666 m
340.7182 447.7524 L
346.3994 453.8029 L
348.1037 455.6181 L
346.0354 442.9666 L
Bb
1 (Face Gradient) 314 310.6667 -90 148 1 0 0 1 11.6522 -214.2598 Bg
0 -12064.0009 -444.6886 0 526.9965 12588.9274 Bc
0 -148 -444.6886 0 526.9965 524.9265 Bm
0 -12064.0009 -444.6886 0 526.9965 376.9265 Bc
f
0 BB
*U
0.6094 0.668 0.6992 0.918 k
294.321 462.0697 m
292.6958 460.6232 291.2478 459.0249 290.0174 457.2829 C
294.6474 461.78 L
294.321 462.0697 L
f
u
*u
1 0.74 0 0.14 k
1 D
490.3316 468.7023 m
487.0411 455.1378 L
483.9989 470.177 L
443.2682 479.1368 L
443.5666 456.4973 L
449.7006 455.1321 L
449.2409 451.0376 L
449.1815 451.0697 449.1248 451.1053 449.065 451.1369 c
441.4736 455.1673 432.0429 455.5665 423.1537 452.2175 c
420.1889 451.0829 417.4255 449.5697 414.9009 447.7679 C
408.7817 486.5452 L
381.691 486.5452 L
380.9324 482.0981 L
352.4329 482.0981 L
349.1707 462.144 L
346.8023 465.0589 L
339.8947 473.5598 329.885 478.2381 318.7939 478.4713 C
342.9882 491.4708 L
326.1145 516.6629 L
295.6138 481.5278 L
300.8894 475.0936 L
296.1073 473.1467 291.9439 470.4675 288.5116 467.2233 C
262.3665 490.4169 L
253.2058 472.8922 L
253.5632 489.726 L
212.6729 476.677 L
213.7162 454.6992 L
220.6738 456.5143 L
221.7101 445.3707 L
213.7674 448.9428 204.2236 448.8709 195.3586 445.1135 c
192.7379 443.9865 190.2829 442.575 188.0198 440.9362 C
189.5564 447.7202 189.1925 454.4095 186.6093 460.3681 c
183.5589 467.4044 178.1946 473.2309 171.6113 476.9021 C
166.9966 479.9736 161.4939 481.8932 155.7283 482.5394 C
141.5956 485.0192 124.6092 482.4715 107.8983 475.3656 c
101.7515 472.752 96.0139 469.7601 90.8452 466.4729 C
84.3079 462.3156 L
88.2534 455.6481 L
100.492 434.9666 L
104.2534 428.6106 104.2713 428.6194 V
110.9071 431.862 L
111.8295 432.3127 L
142.2495 364.3855 L
145.1732 357.8566 L
151.987 360.0352 L
168.4604 365.3022 L
175.6741 367.6084 L
173.7661 374.9377 L
165.021 408.5293 L
167.5422 410.3826 169.887 412.3611 172.0509 414.4326 C
171.5713 410.4124 171.8177 406.3562 172.9135 402.4666 c
175.2034 394.3306 180.5377 387.8932 187.934 384.3403 c
195.9227 380.5029 205.6741 380.4926 214.6878 384.3123 c
219.2132 386.243 223.2405 389.0251 226.6386 392.3694 C
227.8813 379.0063 L
256.7115 383.2415 L
256.6732 409.1109 L
316.9292 379.3087 L
316.9292 408.1622 L
319.3637 408.3579 321.8283 408.7408 324.3055 409.3378 c
330.9506 410.9393 336.6098 413.1488 341.6533 416.1626 C
339.1234 400.6879 L
371.6097 395.5636 L
373.4062 407.2688 L
381.8928 391.5867 L
387.068 401.5815 L
388.9607 385.177 L
425.8036 378.677 L
423.8471 391.0752 L
428.8838 390.5081 434.204 391.1718 439.3365 393.1051 c
440.5664 393.5717 441.7577 394.11 442.9163 394.6996 C
441.4342 381.4977 L
465.9517 378.0668 L
466.1523 368.0134 L
491.7002 359.9747 L
524.9965 460.2935 L
490.3316 468.7023 L
f
0 D
346.3994 453.8029 m
348.1037 455.6181 L
346.0354 442.9666 L
340.7182 447.7524 L
346.3994 453.8029 L
f
324.8138 505.47 m
333.7335 493.3486 L
308.2226 480.7063 L
306.4597 483.3768 L
324.8138 505.47 L
f
278.3341 434.635 m
270.0215 437.86 L
277.7629 445.3795 L
277.4312 441.9119 277.6056 438.3087 278.3341 434.635 C
f
155.8563 411.9789 m
166.0241 372.9222 L
149.5508 367.6552 L
115.7343 443.1666 L
113.9037 442.2023 110.5099 440.5815 107.3769 439.0408 C
95.1382 459.7225 L
100.0207 462.8275 105.3481 465.5882 111.0287 468.0036 c
126.9771 474.7852 142.1646 476.7972 154.3457 474.6597 C
158.6396 474.1678 163.205 472.8871 167.1787 470.2424 C
172.6609 467.1633 176.8446 462.7791 179.2694 457.1859 c
185.156 443.6078 175.3194 423.9926 155.8563 411.9789 C
f
225.7109 402.3468 m
222.2896 397.6015 217.5582 393.647 211.9639 391.2603 c
197.6635 385.2003 183.374 391.2603 179.558 404.8188 c
175.8551 417.9626 184.4644 433.566 198.3185 439.5233 c
207.1537 443.2679 216.0237 442.3808 222.3899 438.0598 c
226.3279 435.3869 229.3098 431.4032 230.7266 426.3802 c
230.8814 425.8342 231.0083 425.2834 231.1226 424.7305 c
231.5183 422.8167 231.6764 420.8685 231.612 418.9177 c
231.4205 413.1156 229.2823 407.3004 225.7109 402.3468 c
f
309.388 391.3199 m
249.5965 421.2265 L
249.7014 389.8963 L
234.2339 387.7789 L
233.1445 400.7175 L
237.9317 408.894 239.676 418.5454 237.1728 427.3761 c
235.8031 432.2316 233.2846 436.474 229.8502 439.8423 C
227.6313 466.1942 L
220.6738 464.3793 L
220.3712 471.0343 L
245.2197 478.4301 L
246.7323 452.8125 L
265.0365 478.5269 L
282.9241 461.4993 L
257.9214 435.1373 L
281.4107 425.8412 L
284.0473 420.8714 288.0306 416.6313 293.0675 413.5325 c
297.9333 410.5389 303.4889 408.7498 309.388 408.1967 C
309.388 391.3199 L
f
322.4736 416.8911 m
320.5934 416.4379 318.7431 416.1355 316.9292 415.9587 c
303.2107 414.6216 291.7102 420.9337 287.3296 431.1451 c
286.8064 432.3647 286.3832 433.6389 286.0714 434.963 c
284.0437 443.5763 285.7635 451.2596 290.0174 457.2829 c
291.2478 459.0249 292.6958 460.6232 294.321 462.0697 c
298.3302 465.6384 303.4455 468.259 309.2386 469.6554 c
322.3217 472.8085 333.8357 468.8098 340.869 460.1539 C
315.9747 433.6404 L
317.672 433.3387 320.356 433.7825 322.3349 434.2596 c
328.2718 435.6904 331.5994 438.8284 334.5068 442.2708 C
344.4575 433.3147 L
347.4793 430.595 L
346.1545 429.228 344.7979 427.9725 343.3943 426.8118 c
337.6674 422.0759 331.1272 418.9767 322.4736 416.8911 c
f
416.5671 388.34 m
396.212 391.4487 L
390.8047 427.3224 L
383.1491 407.5298 L
371.6775 432.2605 L
371.5539 432.2605 L
367.0118 403.6109 L
347.9099 406.9332 L
350.588 422.9209 L
351.3086 423.5941 352.0225 424.2834 352.724 425.0074 C
358.9038 431.3846 L
352.9096 436.7796 L
359.2849 474.838 L
378.5841 474.838 L
383.3955 448.4971 L
388.8175 479.0352 L
402.6034 479.0352 L
408.3323 441.8255 L
401.0398 433.5221 397.5121 422.3755 399.9478 412.1583 c
401.8284 404.2596 406.6978 397.873 413.6583 394.1747 c
414.3636 393.8 415.0899 393.4675 415.8256 393.1563 C
416.5671 388.34 L
f
436.9466 399.4193 m
432.0037 397.5574 427.1247 397.1731 422.7491 398.0336 c
419.7176 398.6299 416.9305 399.8257 414.5331 401.551 c
410.7 404.3094 407.8623 408.4122 406.6333 413.5737 c
405.1615 419.7475 406.5086 426.3629 409.8269 432.1178 c
411.4776 434.9803 413.6161 437.6275 416.1421 439.9021 c
418.9436 442.4247 422.2156 444.4912 425.8268 445.8732 c
434.2567 449.0491 442.5436 447.9393 448.4209 443.7332 c
450.5515 442.2085 452.3633 440.2768 453.751 437.9928 c
454.8208 436.2318 455.6439 434.2672 456.1579 432.114 c
457.9376 424.7018 455.8074 416.7428 451.1275 410.3277 c
449.1339 407.595 446.6796 405.1425 443.8631 403.1335 c
441.7453 401.6229 439.4263 400.36 436.9466 399.4193 c
f
486.904 369.3015 m
472.7687 373.5282 L
471.536 425.6315 L
464.4244 385.4345 L
448.9994 387.8873 L
450.0984 399.4762 L
460.1692 407.9829 465.5175 421.3985 462.5967 433.5629 c
461.309 438.957 458.5461 443.6389 454.6259 447.2188 C
455.9201 460.8662 L
450.0981 462.4216 L
450.4956 469.7112 L
477.0663 464.3705 L
486 422 L
495.1524 459.9832 L
515.3658 455.5096 L
486.904 369.3015 L
f
*U
444.1963 436.5595 m
444.3564 435.9505 444.4378 435.3163 444.4112 434.6628 c
444.2509 430.7148 440.5251 427.6604 436.0896 427.8407 c
431.654 428.0208 428.1882 431.3672 428.3485 435.3151 c
428.4991 439.0231 431.7954 441.942 435.871 442.1335 C
435.089 442.3017 434.2824 442.4144 433.4504 442.4483 c
426.0386 442.7491 419.9759 437.4944 419.71 430.9467 c
419.427 423.9769 425.0437 418.2482 432.3433 417.9518 c
439.755 417.6509 445.8184 422.9052 446.1014 429.875 c
446.1996 432.293 445.4912 434.597 444.1963 436.5595 C
f
219.1634 428.5797 m
219.1634 424.6285 215.5647 421.4254 211.1255 421.4254 c
206.6862 421.4254 203.0875 424.6285 203.0875 428.5797 c
203.0875 432.2908 206.2627 435.3409 210.3271 435.6976 C
209.5389 435.834 208.7285 435.914 207.8958 435.914 c
200.4779 435.914 194.6333 430.4176 194.6333 423.8645 c
194.6333 416.8888 200.4779 411.3927 207.7835 411.3927 c
215.2013 411.3927 221.0465 416.8888 221.0465 423.8645 c
221.0465 426.2845 220.2452 428.5578 218.8716 430.4662 C
219.0563 429.8642 219.1634 429.2337 219.1634 428.5797 c
f
145.2972 452.1993 m
147.6527 442.1971 L
148.537 438.7099 L
152.5614 440.6178 157.0508 440.6178 159.0468 438.8048 c
160.3812 437.5925 161.2727 436.4115 161.2663 434.6207 c
161.25 429.9935 158.295 424.9212 153.0862 420.7711 C
153.1169 420.65 L
161.7702 425.597 170.5381 431.6115 168.9386 443.6454 c
167.7833 452.3371 156.7924 457.6866 145.2972 452.1993 C
f
324.5663 460.4247 m
323.5472 460.8107 L
322.2116 461.3165 320.8364 461.6261 319.4596 461.7311 c
319.1757 461.7527 318.9014 461.7536 318.6362 461.7545 C
318.4137 461.7558 318.4136 461.7558 v
314.2105 461.7966 310.0524 460.2368 306.7053 457.3638 c
303.0468 454.2236 301.2641 450.8394 300.925 446.3911 c
300.6977 443.407 301.3495 440.5224 302.8103 438.0492 c
303.2383 437.3246 303.6808 436.6991 304.1631 436.1373 c
304.4198 435.8383 304.7047 435.5459 305.025 435.2489 C
303.2993 437.328 303.2668 440.9319 305.1525 444.0746 c
307.3986 447.8179 311.5059 449.4805 314.3262 447.7883 c
314.7506 447.5338 315.1148 447.2115 315.4314 446.8454 C
323.958 459.5204 L
324.5663 460.4247 L
f
U
*u
0 g
499.4715 366.9189 m
505.3016 366.9189 L
505.3016 365.6445 L
503.1483 365.6445 L
503.1483 359.7217 L
501.6346 359.7217 L
501.6346 365.6445 L
499.4715 365.6445 L
499.4715 366.9189 l
f
*U
*u
509.6522 361.2598 m
510.951 366.9189 L
513.1141 366.9189 L
513.1141 359.7217 L
511.7127 359.7217 L
511.7127 364.5898 l
511.7127 364.7298 511.7143 364.9259 511.7176 365.1783 c
511.7208 365.4305 511.7225 365.625 511.7225 365.7617 C
510.3602 359.7217 L
508.9002 359.7217 L
507.5477 365.7617 l
507.5477 365.625 507.5492 365.4305 507.5526 365.1783 c
507.5558 364.9259 507.5575 364.7298 507.5575 364.5898 C
507.5575 359.7217 L
506.1561 359.7217 L
506.1561 366.9189 L
508.3436 366.9189 L
509.6522 361.2598 l
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF


