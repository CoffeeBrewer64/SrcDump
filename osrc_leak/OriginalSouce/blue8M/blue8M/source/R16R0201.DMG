
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	group.def


bank7	group	G_BANK7


	public	r16_room2


	extern	minka_a  	 	; map data adrs
	extern	gyaarth_play
	extern	se_wait
	


MINKA_TYPE	equ	8
EXIT		=	0ffh



r16_room2:  
ysiz	=	4
xsiz	=	4
  	db	MINKA_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	minka_a  	 	; map data adrs
	dw	msg_tbl 		; message tbl adrs
	dw	event 			; event routine adrs
	db	0			; map link flg
	dw	room_str 


event:
	jp	init_for_talkmap


msg_tbl:
	dw	msg1
	dw	msg2



msg1:
	db	CALL_MSG

	ld	a,(ev_r16 + 1)
	bit	6,a
	ld	hl,msg1_2$
	jr	nz,ret$

	ld	hl,msg1_0$
	call	put_win_msg

	ld	bc,197 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,ev_r16 + 1
	set	6,(hl)

	ld	hl,msg1_1$

	jr	ret$


full$:
	ld	hl,msg1_3$

ret$:
	call	put_win_msg

	jp	msg_return



msg1_0$:
	extern	msg1_0_0_R16R0201
	db I_MSG2	; mvmsg追加
	dw msg1_0_0_R16R0201	; mvmsg追加
	db 023h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_1$:
	extern	msg1_1_1_R16R0201
	db I_MSG2	; mvmsg追加
	dw msg1_1_1_R16R0201	; mvmsg追加
	db 023h	; mvmsg追加
	db	FANFARE6
	db	EOM


msg1_2$:
	extern	msg1_2_2_R16R0201
	db I_MSG2	; mvmsg追加
	dw msg1_2_2_R16R0201	; mvmsg追加
	db 023h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_3$:
	extern	msg1_3_3_R16R0201
	db I_MSG2	; mvmsg追加
	dw msg1_3_3_R16R0201	; mvmsg追加
	db 023h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2:
	db	CALL_MSG

	ld	hl,msg2_0
	call	put_win_msg

	ld	a,35
	call	gyaarth_play
	call	se_wait
	
	jp	msg_return


msg2_0:
	extern	msg2_0_4_R16R0201
	db I_MSG2	; mvmsg追加
	dw msg2_0_4_R16R0201	; mvmsg追加
	db 023h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


room_str:
	include	..\sxy\r16r0201.sxy

