
	include		common.def
	include		macro.h

bank1	group	1

	public	hit_check

hit_check:
hit_check1$:
	nop
	ld	h,> actor_table
z1$:
	GET	l,0
	ld	a,(hl)		;+0 actor code
	and	a
	ret	z		;return

	ADDM	l,3

	ld	a,(hli)		;+3 y.dot
	call	get_offset
	ld	a,(hli)		;+4 y
	add	a,004h
	add	a,b
	and	0f0h
	or	c
	ld	(actwork1),a	;y
	ld	a,(hli)		;+5 x.dot
	call	get_offset
	ld	a,(hl)		;+6 x
	add	a,b
	and	0f0h
	or	c
	ld	(actwork2),a	;x

	ADDM	l,007h

	xor	a
	ld	(hld),a		;+d Hit flag
	ld	(hld),a		;+c Hit flag
	ld	a,(actwork2)
	ld	(hld),a		;+b x
	ld	a,(actwork1)
	ld	(hl),a		;+c y

	xor	a
z3$:
	ld	(actwork0),a
	swap	a
	ld	e,a
	ld	a,(actlow)
	cp	e
	jp	z,z4$

	ld	d,h
	ld	a,(de)		;+0 actor code
	and	a
	jp	z,z4$		;skip not use
	inc	e
	inc	e
	ld	a,(de)		;+2 action pattern
	inc	a
	jp	z,z4$		;skip not display

	GET	l,00ah
	inc	e
	ld	a,(de)		;+3 y.dot
	call	get_offset
	inc	e
	ld	a,(de)		;y coor
	add	a,004h
	add	a,b
	and	0f0h
	or	c
	sub	(hl)		;y coor
	jr	nc,z5$
	cpl
	inc	a
z5$:
	ld	(actwork1),a
	push	af
	rl	c
	pop	af
	ccf
	rl	c
	ld	b,007h
	ld	a,(hl)
	and	00fh
	jr	z,notmove_y2$
	ld	b,009h
notmove_y2$:
	ld	a,(actwork1)
	sub	b
	ld	(actwork3),a
	ld	a,b
	ld	(actwork1),a
	jr	c,z10$
	ld	b,007h
	dec	e
	ld	a,(de)
	inc	e
	and	a
	jr	z,notmove_y1$
	ld	b,009h
notmove_y1$:
	ld	a,(actwork3)
	sub	b		;fix actor heigh
	jr	z,z10$
	jr	nc,z4$
z10$:
	inc	e
	inc	l
	ld	a,(de)
	push	bc
	call	get_offset
	inc	e
	ld	a,(de)	;x coor
	add	a,b
	and	0f0h
	or	c
	pop	bc
	sub	(hl)	;x coor
	jr	nc,z6$
	cpl
	inc	a
z6$:
	ld	(actwork2),a
	push	af
	rl	c
	pop	af
	ccf
	rl	c
	ld	b,007h
	ld	a,(hl)
	and	00fh
	jr	z,notmove_x2$
	ld	b,009h
notmove_x2$:
	ld	a,(actwork2)
	sub	b
	ld	(actwork3),a
	ld	a,b
	ld	(actwork2),a
	jr	c,z11$
	ld	b,007h
	dec	e
	ld	a,(de)
	inc	e
	and	a
	jr	z,notmove_x1$
	ld	b,009h
notmove_x1$:
	ld	a,(actwork3)
	sub	b		;fix actor heigh
	jr	z,z11$
	jr	nc,z4$
z11$:
;flg set
	ld	a,(actwork2)
	ld	b,a
	ld	a,(actwork1)
	inc	l
	cp	b
	jr	c,nearx1$
	ld	b,00ch
	jr	common1$
nearx1$:
	ld	b,003h
common1$:
	ld	a,c
	and	b
	or	(hl)
	ld	(hl),a
	ld	a,c
	inc	l
	inc	l

	ld	a,(actwork0)
	ld	de,hitbit_data
	add	a,a
	add	a,e
	ld	e,a
	jr	nc,z98$
	inc	d
z98$:
	ld	a,(de)
	or	(hl)
	ld	(hli),a
	inc	de
	ld	a,(de)
	or	(hl)
	ld	(hl),a

z4$:
	ld	a,(actwork0)
	inc	a
	cp	< ACTOR_MAX
	jp	nz,z3$
	ret

get_offset:
	and	a
	ld	b,000h		; bc = 0
	ld	c,000h
	jr	z,stop1$	; return
	ld	c,009h
	cp	0ffh
	jr	z,up1$		;up or left
	ld	c,007h
	ld	a,000h
up1$:
	ld	b,a
stop1$:
	ret

hitbit_data:
	db	00h,01h
	db	00h,02h
	db	00h,04h
	db	00h,08h
	db	00h,010h
	db	00h,020h
	db	00h,040h
	db	00h,080h
	db	01h,00h
	db	02h,00h
	db	04h,00h
	db	08h,00h
	db	010h,00h
	db	020h,00h
	db	040h,00h
	db	080h,00h

