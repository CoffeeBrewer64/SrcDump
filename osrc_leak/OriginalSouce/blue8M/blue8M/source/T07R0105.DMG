
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	macro.h
	include	group.def
	include pm_debug.def


bank12	group	G_BANK12


	public	t7_room1_5f


	extern	remove_item

	extern	check_pack
	extern	check_money
	extern	direct_play
	extern	put_dec
	extern	pal_off_put_wait
	extern	dvram_cls
	extern	prt_mons_chr2
	extern	color_set
	extern	set_oam_buf16
	extern	get_pet_name
	extern	talk_99 
	extern	talk_100 

	extern	check_coin
	extern	CheckAssignPos
	extern	check_item2
	extern	plural
	extern	yes_no
	extern	search_hit
	extern	table_jump
	extern	bank2bank
	extern	fnt_kana
	extern	fontmove
	extern	memset
	extern	actor_anime_set
	extern	ev_msg_adrs_save
	extern	ev_msg_adrs_load
	extern	change_command
	extern	mk_trace_cmd
	extern	acttbl_l_adrs
	extern	acttbl_h_adrs
	extern	save_position
	extern	bank_push_call
	extern	set_gauge
	extern	set_serifu
	extern	table_search
	extern	map_rewrite2

	extern	gyaarth
	extern	gyaarth_play
	extern	add_capsule2
	extern	pal_off
	extern	color_rewrite

	extern	pop_vram_m
	extern	pop_vram_s
	extern	azukari_bank

	extern	se_wait
	extern	se_play
	extern	save_mons_data
	extern	chk_hidenmachine

	extern	put_bcd
	extern	block_cls
	extern	strcpy
	extern	put_wait
	extern	wait_vb
	extern	mul_any




DEPART_TYPE	equ	18
EXIT		=	0ffh


t7_room1_5f:
ysiz	=	4
xsiz	=	10
	db	DEPART_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	depart5f		; map data adrs
	dw	msg_t7r1f5
	dw	ev_t7r1f5		; event routine adrs
	db	0			; map link flg
	dw	sxy_t7r1f5


ev_t7r1f5:
	jp	init_for_talkmap


item_popup:
	xor	a
	ld	(anime_cnt),a

	ld	de,anime_buf + 0

	ld	hl,search$

loop$:
	ld	a,(hli)
	and	a
	jr	z,rts$				; end

	push	hl				; base data address(save)
	push	de

	ld	(in_dat),a			; for "get_item_name"
	ld	b,a
	ld	a,B_ITEM_TAKE_CHK
	call	bank2bank

	pop	de
	pop	hl				; base data address(load)

	ld	a,b
	and	a
	jr	z,loop$

	ld	a,(in_dat)
	ld	(de),a
	inc	de

	push	hl

	ld	hl,anime_cnt
	inc	(hl)

	pop	hl

	jr	loop$


rts$:
	ld	a,0ffh
	ld	(de),a

	ret


search$:
	db	60,61,62
	db	00h


ItemList:
	ld	hl,obs_system
	set	6,(hl)				; system message speed mode

	ld	hl,msg2_2$
	call	put_win_msg

	xor	a
	ld	(allow_cnt),a

	ld	a,BT_A + BT_B
	ld	(allow_msk),a			; assign key
	ld	a,(anime_cnt)
	dec	a
	ld	(allow_max),a			; select elements
	ld	a,2
	ld	(allow_pos + 0),a		; 1st locate Y
	ld	a,1
	ld	(allow_pos + 1),a		; 1st locate X

loop$:
	ld	a,(anime_cnt)
	dec	a
	ld	bc,002h
	ld	hl,003h
	call	mul_any				; hl = hl + a * bc
	dec	l				; -1
	ld	b,l
  ifn	pm_jmsg
	ld	c,8 - 1
  else
	ld	c,12
  endif
	ld	hl,0*014h + 0 + dmy_vram
	call	put_window

	call	actor_blanch

	call	item_strings

	ld	hl,obs_system
	res	6,(hl)				; scenario message speed mode

	call	allow
	bit    	1,a
	ret	nz

	ld	hl,anime_buf + 0
	ld	a,(allow_cnt)
	ld	d,0
	ld	e,a
	add	hl,de
	ld	a,(hl)
	ld	(DA_BUF + 0),a			; using item
	cp	60
	jr	z,machine13$

	cp	61
	jr	z,machine48$

machine49$:
	ld	a,(ev_t7_1 + 0)
	bit	6,a
	jr	nz,del$

	ld	hl,msg2_3_2$
	call	put_win_msg

	call	del_hook$

	ld	bc,249 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,msg2_4_2$
	call	put_win_msg

	ld	hl,ev_t7_1 + 0
	set	6,(hl)

	ret


machine48$:
	ld	a,(ev_t7_1 + 0)
	bit	5,a
	jr	nz,del$

	ld	hl,msg2_3_1$
	call	put_win_msg

	call	del_hook$

	ld	bc,248 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,msg2_4_1$
	call	put_win_msg

	ld	hl,ev_t7_1 + 0
	set	5,(hl)

	ret


machine13$:
	ld	a,(ev_t7_1 + 0)
	bit	4,a
	jr	nz,del$

	ld	hl,msg2_3_0$
	call	put_win_msg

	call	del_hook$

	ld	bc,213 * 256 + 1
	call	take_item
	jr	nc,full$

	ld	hl,msg2_4_0$
	call	put_win_msg

	ld	hl,ev_t7_1 + 0
	set	4,(hl)

	ret


full$:
	ld	hl,msg2_5$
	jp	put_win_msg


del$:
	ld	hl,msg2_6$
	jp	put_win_msg


del_hook$:
	ld	b,005h
	ld	hl,remove_item
	jp	bank_push_call




msg2_2$:
	extern	msg2_2_0_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_2_0_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


msg2_3_0$:	; mix-ore
	extern	msg2_3_0_1_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_3_0_1_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_4_0$:
	extern	msg2_4_0_2_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_0_2_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	FANFARE
	extern	msg2_4_0_3_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_0_3_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_3_1$:
	extern	msg2_3_1_4_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_3_1_4_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_4_1$:
	extern	msg2_4_1_5_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_1_5_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	FANFARE
	extern	msg2_4_1_6_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_1_6_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_3_2$:
	extern	msg2_3_2_7_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_3_2_7_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_4_2$:
	extern	msg2_4_2_8_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_2_8_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	FANFARE
	extern	msg2_4_2_9_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_4_2_9_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_5$:
	extern	msg2_5_10_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_5_10_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM


msg2_6$:
	extern	msg2_6_11_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_6_11_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db	WAIT_NP
	db	EOM





DISP_LINE	equ	002h*014h + 002h + dmy_vram

item_strings:
	ld	hl,anime_buf + 0

	xor	a
	ld	(DA_BUF + 0),a

loop$:
	ld	a,(hli)
	cp	0ffh
	ret	z

	push	hl

	ld	(in_dat),a
	call	get_item_name

	ld	hl,DISP_LINE
	ld	a,(DA_BUF + 0)
	ld	bc,002h * 014h
	call	mul_any
	ld	de,table_data
	call	put_msg

	ld	hl,DA_BUF + 0
	inc	(hl)

	pop	hl

	jr	loop$



msg_t7r1f5:
	dw	msg1
	dw	msg2
	dw	machine1
	dw	machine1
	dw	machine1
	dw	kanban1


msg1:
	extern	msg1_12_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg1_12_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡

msg2:
	db	CALL_MSG

	call	item_popup
	ld	a,(anime_cnt)
	and	a
	jr	z,no_item$

	ld	a,1
	ld	(wait_pass_flg),a

	ld	hl,msg2_1$
	call	put_win_msg

	call	yes_no
	ld	a,(allow_cnt)
	and	a
	jr	nz,end$

	call	ItemList

	jr	end$


no_item$:
	ld	hl,msg2_0$
	call	put_win_msg

end$:
	jp	msg_return



msg2_0$:
	extern	msg2_0_13_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_0_13_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


msg2_1$:
	extern	msg2_1_14_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw msg2_1_14_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


machine1:
	db	0f5h


kanban1:
	extern	kanban1_15_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw kanban1_15_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡




sxy_t7r1f5:
	include	..\sxy\t07r0105.sxy


depart5f:
	include	..\mapdata\dept5f.map





bank1d	group	G_BANK1d


	public	DrinkMachine

DrinkMachine:
	ld	hl,DMinfo$
	call	put_win_msg

	SET_WIN_MOD KANE_WIN
	call	step_prn_win			; print taking money

	xor	a
	ld	(allow_cnt),a
	ld	(allow_old),a

	ld	a,BT_A + BT_B
	ld	(allow_msk),a			; assign key
	ld	a,4 - 1
	ld	(allow_max),a			; select elements
	ld	a,5
	ld	(allow_pos + 0),a		; 1st locate Y
	ld	a,1
	ld	(allow_pos + 1),a		; 1st locate X

	ld	hl,obs_system
	set	6,(hl)

	SET_WIN_POS	0,3,13,12
	call	put_window

	call	actor_blanch

 ifn	ASSEMBLE__ENGLISH
	S_POS	2,5
	ld	de,DMmenu$			;ÅhÇ®Ç¢ÇµÇ¢Ç›Ç∏ÅAÉTÉCÉRÉ\Å[É_ÅAÉ~ÉbÉNÉXÉIÉåÅh
	call 	put_msg
	S_POS	9,6
	ld	de,DMmenu_2$			;ÅhÇQÇOÇOâ~ÅAÇRÇOÇOâ~ÅAÇRÇTÇOâ~Åh
	call 	put_msg
 else
	ld	hl,5*20 + 2 + dmy_vram
	ld	de,DMmenu$
	call 	put_msg
 endif
	ld	hl,obs_system
	res	6,(hl)

	call	allow
	bit    	1,a				; check cancel request(b)
	jr	nz,rts$

	ld	a,(allow_cnt)
	cp	4 - 1
	jr	z,rts$				; "yameru" select

	xor	a
	ld	(divwk1 + 0),a
	ld	(divwk1 + 2),a
	ld	a,002h
	ld	(divwk1 + 1),a			; \200
	call	check_money			; check take money
	jr	nc,enough$

	ld	hl,DMmoneyless$
	jp	put_win_msg


enough$:
	call	get_drink

	ld	a,(DA_BUF + 0)
	ld	b,a
	ld	c,1
	call	take_item
	jr	nc,full$

	ld	b,60
se_loop$:
	ld	c,2
	call	wait_vb_s

	push	bc
	extern	musiwa
	ld	a,< musiwa
	call	play
	pop	bc

	dec	b
	jr	nz,se_loop$

	ld	hl,DMbuy$
	call	put_win_msg

	ld	hl,DA_BUF + 3
	ld	de,my_gold + 2
	ld	c,3
	ld	a,B_BCD_SUB
	call	bank2bank

	SET_WIN_MOD KANE_WIN
	jp	step_prn_win			; print taking money

full$:
	ld	hl,DMfull$
	jp	put_win_msg


rts$:
	ld	hl,DMcancel$
	jp	put_win_msg



DMinfo$:
	extern	DMinfo_16_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw DMinfo_16_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


 ifn	ASSEMBLE__ENGLISH
  ifn	pm_jmsg
DMmenu$:
	db	o_,i_,si_,i_,mi_,zu_,cr@		; Ç®Ç¢ÇµÇ¢Ç›Ç∏
	db	sa__,i__,ko__,so__,bou@,da__,cr@	; ÉTÉCÉRÉ\Å[É_
	db	mi__,ttu__,ku__,su__,o__,re__,cr@ 	; É~ÉbÉNÉXÉIÉå
	db	i_,ra_,na_,i_,EOM
DMmenu_2$
	db	n2@,n0@,n0@,yen@,cr@			; ÇQÇOÇOâ~
	db	n3@,n0@,n0@,yen@,cr@			; ÇRÇOÇOâ~
	db	n3@,n5@,n0@,yen@,cr@			; ÇRÇTÇOâ~
	db	EOM
  else
DMmenu$:
	db	usf_f,usf_r,usf_e,usf_s,usf_h,spc@,usf_w,usf_a,usf_t,usf_e,usf_r,cr@
	db	usf_s,usf_o,usf_d,usf_a,spc@,usf_p,usf_o,usf_p,cr@
	db	usf_l,usf_e,usf_m,usf_o,usf_n,usf_a,usf_d,usf_e,cr@
	db	usf_c,usf_a,usf_n,usf_c,usf_e,usf_l,EOM
DMmenu_2$
	db	dol@,n2@,n0@,n0@,cr@			; ÅêÇQÇOÇO
	db	dol@,n3@,n0@,n0@,cr@			; ÅêÇRÇOÇO
	db	dol@,n3@,n5@,n0@,cr@			; ÅêÇRÇTÇO
	db	EOM
  endif
 else
DMmenu$:
	db	o_,i_,si_,i_,mi_,zu_,spc@,n2@,n0@,n0@,yen@,cr@
	db	sa__,i__,ko__,so__,bou@,da__,spc@,n3@,n0@,n0@,yen@,cr@
	db	mi__,ttu__,ku__,su__,o__,re__,spc@,n3@,n5@,n0@,yen@,cr@
	db	i_,ra_,na_,i_,EOM
 endif

DMmoneyless$:
	extern	DMmoneyless_17_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw DMmoneyless_17_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


DMbuy$:
;	db	D_MSG
;	db	pi__,n__,po__,bou@,n__,gyoe@
;	db	EOM
;	db	FANFARE
;	db	D_MSG
;	db	home@
;	db	EOM
	extern	DMbuy_18_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw DMbuy_18_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


DMfull$:
	extern	DMfull_19_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw DMfull_19_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡


DMcancel$:
	extern	DMcancel_20_T07R0105
	db I_MSG2	; mvmsgí«â¡
	dw DMcancel_20_T07R0105	; mvmsgí«â¡
	db 027h	; mvmsgí«â¡
	db EOM	; put_msg_sèIóπÉRÅ[Éh mvmsgí«â¡



get_drink:
	ld	hl,price$
	ld	a,(allow_cnt)
	add	a,a
	add	a,a
	ld	d,0
	ld	e,a
	add	hl,de
	ld	a,(hli)
	ld	(DA_BUF + 0),a			; item number
	ld	a,(hli)
	ld	(DA_BUF + 1),a
	ld	a,(hli)
	ld	(DA_BUF + 2),a
	ld	a,(hl)
	ld	(DA_BUF + 3),a

	ret


price$:
	db	60,00h,02h,00h
	db	61,00h,03h,00h
	db	62,00h,03h,50h



