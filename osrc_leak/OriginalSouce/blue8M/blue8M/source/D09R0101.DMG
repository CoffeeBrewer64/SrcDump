
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	macro.h
	include	group.def


bank11	group	G_BANK11


	public	d9_room1


;;	extern	D9R1F1msg8
	extern	table_jump
	extern	bank2bank
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position
	extern	obj_stepping
	extern	capsule_item

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking

	extern	musdoor


BUILDING_TYPE	equ	22
EXIT		=	0ffh


seq_d9r1f1	equ	seq_ctrl_buf + 41h



d9_room1:
ysiz	=	14
xsiz	=	15
	db	BUILDING_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	azito_b1		; map data adrs
	dw	msg_d9r1f1		; message tbl adrs
	dw	ev_d9r1f1		; event routine adrs
	db	0			; map link flg
	dw	sxy_d9r1f1


ev_d9r1f1:
	call	d9r1f1_door$

	call	init_for_talkmap

	ld	hl,dealer_talk
	ld	de,d9r1f1_tbl
	ld	a,(seq_d9r1f1)
	call	battle_sequence
	ld	(seq_d9r1f1),a

	ret



d9r1f1_door$:
	ld	hl,ptn_data
	bit	5,(hl)
	res	5,(hl)
	ret	z

	ld	a,(ev_d9 + 0)
	bit	7,a
	jr	nz,z2nd$

	bit	5,a
	jr	nz,open$

	ld	a,054h + 00h

	jr	set$


open$:
	ld	a,< musdoor
	call	play

	ld	hl,ev_d9 + 0
	bit	7,(hl)

z2nd$:
	ld	a,00ch + 02h

set$:
	ld	(el_c),a
	ld	bc,8 * 256 + 12
	ld	a,B_BGCELL_CHANGE
	jp	bank2bank



d9r1f1_tbl:
	initndw	battle_main,seq_battle_main
	ndw	battle_missing,seq_battle_missing
	ndw	battle_after,seq_battle_after


msg_d9r1f1:
	msgndw	msg1,msg_member1
	ndw	msg3,msg_member2
	ndw	msg6,msg_member3
	ndw	msg7,msg_member4
	ndw	msg8,msg_member5
	ndw	capsule_item,msg_capsule1
	ndw	capsule_item,msg_capsule2



dealer_talk:
d_talk1:
	db	msg_member1,030h
	dw	ev_d9 + 0
	dw	msg1_0
	dw	msg1_after
	dw	msg1_win
	dw	msg1_win

d_talk3:
	db	msg_member2,020h
	dw	ev_d9 + 0
	dw	msg3_0
	dw	msg3_after
	dw	msg3_win
	dw	msg3_win

d_talk6:
	db	msg_member3,020h
	dw	ev_d9 + 0
	dw	msg6_0
	dw	msg6_after
	dw	msg6_win
	dw	msg6_win

d_talk7:
	db	msg_member4,030h
	dw	ev_d9 + 0
	dw	msg7_0
	dw	msg7_after
	dw	msg7_win
	dw	msg7_win

d_talk8:
	db	msg_member5,030h
	dw	ev_d9 + 0
	dw	msg8_0
	dw	msg8_after
	dw	msg8_win
	dw	msg8_win

	db	0ffh


msg1:
	db	CALL_MSG

	ld	hl,d_talk1
	call	DealerTalking

	jp	msg_return



msg3:
	db	CALL_MSG

	ld	hl,d_talk3
	call	DealerTalking

	jp	msg_return




msg6:
	db	CALL_MSG

	ld	hl,d_talk6
	call	DealerTalking

	jp	msg_return




msg7:
	db	CALL_MSG

	ld	hl,d_talk7
	call	DealerTalking

	jp	msg_return




msg8:
	db	CALL_MSG

	ld	hl,d_talk8
	call	DealerTalking

	jp	msg_return


msg8_win:
	extern	msg8_win_0_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg8_win_0_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加


	db	CALL_MSG

	ld	hl,ev_d9 + 0
	set	5,(hl)

	ld	hl,msg8_win_sub

	ret


msg8_win_sub:
	db	WAIT
	db	EOM




msg1_0:
	extern	msg1_0_1_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg1_0_1_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_win:
	extern	msg1_win_2_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg1_win_2_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_after:
	extern	msg1_after_3_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg1_after_3_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



msg3_0:
	extern	msg3_0_4_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg3_0_4_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_win:
	extern	msg3_win_5_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg3_win_5_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_after:
	extern	msg3_after_6_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg3_after_6_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg6_0:
	extern	msg6_0_7_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg6_0_7_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg6_win:
	extern	msg6_win_8_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg6_win_8_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg6_after:
	extern	msg6_after_9_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg6_after_9_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg7_0:
	extern	msg7_0_10_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg7_0_10_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg7_win:
	extern	msg7_win_11_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg7_win_11_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg7_after:
	extern	msg7_after_12_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg7_after_12_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



msg8_0:
	extern	msg8_0_13_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg8_0_13_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg8_after:
	extern	msg8_after_14_D09R0101
	db I_MSG2	; mvmsg追加
	dw msg8_after_14_D09R0101	; mvmsg追加
	db 020h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


sxy_d9r1f1:
	include	..\sxy\d09r0101.sxy


azito_b1:
	include	..\mapdata\azito_b1.map

