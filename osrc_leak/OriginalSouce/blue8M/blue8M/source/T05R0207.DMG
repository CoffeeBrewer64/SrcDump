
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	banktool.def
	include	vanish.def
	include	anime.def
	include	macro.h
	include	group.def


bank18	group	G_BANK18


	public	t5_room2_7f


	extern	mk_trace_cmd
	extern	table_jump
	extern	bank2bank
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position_s
	extern	obj_stepping
	extern	obj_stopping
	extern	capsule_item

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking


TOWER_TYPE	equ	15
EXIT		=	0ffh


seq_t5r2f7	equ	seq_ctrl_buf + 40h


t5_room2_7f:
ysiz	=	9
xsiz	=	10
	db	TOWER_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	tower7			; map data adrs
	dw	msg_t5r2f7		; message tbl adrs
	dw	ev_t5r2f7		; event routine adrs
	db	0			; map link flg
	dw	room_str


ev_t5r2f7:
	call	init_for_talkmap

	ld	hl,dealer_talk
	ld	de,t5r2f7_tbl
	ld	a,(seq_t5r2f7)
	call	battle_sequence
	ld	(seq_t5r2f7),a

	ret


return:
	xor	a
	ld	(cancel_key),a
	ld	(seq_t5r2f7),a
	ld	(AdrsDealerTalk + 9),a

	ret


t5r2f7_tbl:
	initndw	battle_main,seq_battle_main
	ndw	battle_missing,seq_battle_missing
	ndw	BattleAfter,SeqBattleAfter

	ndw	ObsAway,SeqObsAway
	ndw	Fuji_rohjin,SeqFuji



BattleAfter:
	ld	hl,obs_event + 0
	res	0,(hl)				; battle by check of site

	ld	a,(fighting_flg)
	cp	0ffh
	jp	z,return

	call	battle_after

	ld	a,0f0h
	ld	(cancel_key),a

	ld	a,(sv_msg_no)
	ld	(work1),a
	call	talk_map			; after message

	call	AwayPattern

	ld	a,SeqObsAway
	ld	(seq_t5r2f7),a
	ld	(AdrsDealerTalk + 9),a

	ret


ObsAway:
	ld	a,(obs_system)
	bit	0,a
	ret	nz

	ld	hl,vanish_group
	ld	a,(sv_msg_no)
	ld	b,a

loop$:
	ld	a,(hli)
	cp	b				; check target obj number
	ld	a,(hli)
	jr	nz,loop$

	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_VANISH
	call	bank2bank

	xor	a
	ld	(cancel_key),a
	ld	(sv_msg_no),a
	ld	(obs_actor),a
	ld	(AdrsDealerTalk + 8),a

	ld	a,seq_battle_main
	ld	(seq_t5r2f7),a
	ld	(AdrsDealerTalk + 9),a

	ret


Fuji_rohjin:
	ld	a,0ffh
	ld	(cancel_key),a

	ld	a,T5R2F7msg4
	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_VANISH
	call	bank2bank

	ld	a,004h
	ld	(actor_table + 009h),a

;-----------------------------------------------; warp for room to room
	ld	a,T5R3F1
	ld	(work0),a
	ld	a,1
	ld	(ram_map_id),a
	ld	a,T5
	ld	(mapno_stack),a

	ld	hl,event_flg
	set	3,(hl)				; warp to no connection map
;-----------------------------------------------;

	ld	a,seq_battle_main
	ld	(seq_t5r2f7),a
	ld	(AdrsDealerTalk + 9),a

	ret


AwayPattern:
	ld	hl,dealer_table$
	ld	a,(sv_msg_no)
	dec	a				; cause msgno is 1 origin
	swap	a				; *16
	ld	d,0
	ld	e,a
	add	hl,de

	ld	a,(mapscloll_y)
	ld	b,a
	ld	a,(mapscloll_x)
	ld	c,a

loop$:
	ld	a,(hli)
	cp	b
	jr	nz,next1$

	ld	a,(hli)
	cp	c
	jr	nz,next2$

	ld	a,(hli)
	ld	d,(hl)
	ld	e,a
	ld	a,(sv_msg_no)
	ld	(work1),a
	jp	actor_anime_set


next1$:
	inc	hl

next2$:
	inc	hl
	inc	hl

	jr	loop$



dealer_table$:					; decided by hero's position
	db	00ch,009h
	dw	msg1_cmd1$
	db	00bh,00ah
	dw	msg1_cmd2$
	db	00bh,00bh
	dw	msg1_cmd3$
	db	00bh,00ch
	dw	msg1_cmd4$

	db	00ah,00ch
	dw	msg2_cmd1$
	db	009h,00bh
	dw	msg2_cmd2$
	db	009h,00ah
	dw	msg2_cmd3$
	db	009h,009h
	dw	msg2_cmd4$

	db	008h,009h
	dw	msg3_cmd1$
	db	007h,00ah
	dw	msg3_cmd2$
	db	007h,00bh
	dw	msg3_cmd3$
	db	007h,00ch
	dw	msg3_cmd4$


msg1_cmd1$:
	db	A_R
	db	A_D,A_D,A_D,A_D,A_D
	db	A_L
	db	A_E

msg1_cmd2$:
	db	A_D
	db	A_R
	db	A_D,A_D,A_D,A_D
	db	A_E

msg1_cmd3$:
msg1_cmd4$:
msg2_cmd3$:
msg2_cmd4$:
msg3_cmd2$:
msg3_cmd3$:
msg3_cmd4$:
	db	A_D,A_D,A_D,A_D,A_D
	db	A_E

msg2_cmd1$:
	db	A_L
	db	A_D,A_D,A_D,A_D,A_D,A_D
	db	A_E

msg2_cmd2$:
	db	A_D,A_D,A_D
	db	A_L
	db	A_D,A_D
	db	A_E

msg3_cmd1$:
	db	A_R
	db	A_D,A_D,A_D,A_D,A_D,A_D
	db	A_E


msg_t5r2f7:
	msgndw	msg1,msg_member1
	ndw	msg2,msg_member2
	ndw	msg3,msg_member3
	ndw	msg5,msg_fuji


dealer_talk:
d_talk1:
	db	msg_member1,030h
	dw	ev_t5_2 + 5
	dw	msg1_0
	dw	msg1_after
	dw	msg1_win
	dw	msg1_win

d_talk2:
	db	msg_member2,030h
	dw	ev_t5_2 + 5
	dw	msg2_0
	dw	msg2_after
	dw	msg2_win
	dw	msg2_win

d_talk3:
	db	msg_member3,030h
	dw	ev_t5_2 + 5
	dw	msg3_0
	dw	msg3_after
	dw	msg3_win
	dw	msg3_win

	db	0ffh



msg1:
	db	CALL_MSG

	ld	hl,d_talk1
	call	DealerTalking

	jp	msg_return



msg2:
	db	CALL_MSG

	ld	hl,d_talk2
	call	DealerTalking

	jp	msg_return



msg3:
	db	CALL_MSG

	ld	hl,d_talk3
	call	DealerTalking

	jp	msg_return



msg5:
	db	CALL_MSG

	ld	hl,msg5_0$
	call	put_win_msg

	ld	hl,ev_r16 + 1
	set	7,(hl)				; check help Mr.fuji

	ld	hl,ev_t5_2 + 5
	set	7,(hl)				; check help Mr.fuji

	ld	a,T5R3F1msg5			; in fuji-labo
	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_APPEAR
	call 	bank2bank

	ld	a,T11msg14
	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_VANISH
	call	bank2bank

	ld	a,T11msg15
	ld	(obs_obj),a
	ld	a,B_REQ_OBJ_APPEAR
	call	bank2bank

	ld	a,SeqFuji
	ld	(seq_t5r2f7),a
	ld	(AdrsDealerTalk + 9),a

	jp	msg_return


msg5_0$:
	extern	msg5_0_0_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg5_0_0_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



msg1_0:
	extern	msg1_0_1_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg1_0_1_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_win:
	extern	msg1_win_2_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg1_win_2_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg1_after:
	extern	msg1_after_3_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg1_after_3_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_0:
	extern	msg2_0_4_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg2_0_4_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_win:
	extern	msg2_win_5_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg2_win_5_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_after:
	extern	msg2_after_6_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg2_after_6_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_0:
	extern	msg3_0_7_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg3_0_7_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_win:
	extern	msg3_win_8_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg3_win_8_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_after:
	extern	msg3_after_9_T05R0207
	db I_MSG2	; mvmsg追加
	dw msg3_after_9_T05R0207	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


room_str:
	include	..\sxy\t05r0207.sxy


tower7:
	include	..\mapdata\nt_7f.map






