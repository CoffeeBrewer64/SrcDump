
	include	common.def
	include	fntequ.def
	include	maphead.def
	include	vanish.def
	include	anime.def
	include	dealer.def
	include	macro.h
	include	group.def


bank18	group	G_BANK18


	public	t5_room2_6f

	extern	put_wait
	extern	se_wait
	extern	gyaarth_play
	extern	table_jump
	extern	ex_yes_no
	extern	missing
	extern	set_battle
	extern	obs_battler
	extern	set_battle_msg
	extern	set_battle_data
	extern	actor_anime_set
	extern	save_position
	extern	load_position
	extern	obj_stepping
	extern	obj_stopping
	extern	capsule_item

	extern	battle_main
	extern	battle_missing
	extern	battle_ready
	extern	battle_after
	extern	DealerTalking
	extern	CheckActorPos
	extern	CheckAssignPos
	

TOWER_TYPE	equ	15
EXIT		=	0ffh




seq_t5r2f6	equ	seq_ctrl_buf + 3fh


t5_room2_6f:
ysiz	=	9
xsiz	=	10
	db	TOWER_TYPE		; map type
	db	ysiz,xsiz		; yx size
	dw	tower6			; map data adrs
	dw	msg_t5r2f6		; message tbl adrs
	dw	ev_t5r2f6		; event routine adrs
	db	0			; map link flg
	dw	room_str


ev_t5r2f6:
	call	init_for_talkmap

	ld	hl,dealer_talk
	ld	de,t5r2f6_tbl
	ld	a,(seq_t5r2f6)
	call	battle_sequence
	ld	(seq_t5r2f6),a

	ret


return:
	xor	a
	ld	(cancel_key),a
	ld	(seq_t5r2f6),a
	ld	(AdrsDealerTalk + 9),a

	ret


t5r2f6_tbl:
	initndw	t5r2f6_main,seq_t5r2f6_main
	ndw	battle_missing,seq_battle_missing
	ndw	battle_after,seq_battle_after
	ndw	stepback,seq_stepback
	ndw	vs_after,seq_vs_after


t5r2f6_main:
	ld	a,(ev_t5_2 + 4)
	bit	7,a				; check clear of event
	jp	nz,battle_main

	ld	hl,hook_tbl$
	call	CheckAssignPos			; check event point
	jp	nc,battle_main

	xor	a
	ld	(joy_status),a

	ld	a,msg_ghost0
	ld	(work1),a
	call	talk_map

	ld	a,145				; "garagara"
	ld	(event_fight_no),a
	ld	a,30
	ld	(mons_level),a

	ld	a,seq_vs_after
	ld	(seq_t5r2f6),a
	ld	(AdrsDealerTalk + 9),a

	ret


hook_tbl$:
	db	010h,00ah
	db	0ffh


vs_after:
	ld	a,(fighting_flg)
	cp	0ffh
	jp	z,return			; to okido school(losing)

	ld	a,0ffh
	ld	(cancel_key),a

	ld	a,(event_flg)
	bit	6,a				; battle wait check
	ret	nz

	call	actor_blanch

	ld	a,0f0h
	ld	(cancel_key),a

	ld	a,(kachi_make)
	and	a
	jr	nz,cmd_step

	ld	hl,ev_t5_2 + 4
	set	7,(hl)				; clear of event

	ld	a,msg_ghost1
	ld	(work1),a
	call	talk_map

	xor	a
	ld	(cancel_key),a

	ld	a,seq_t5r2f6_main
	ld	(seq_t5r2f6),a
	ld	(AdrsDealerTalk + 9),a

	ret


cmd_step:
	ld	a,1				; animetion pattern lot
	ld	(ctrl_move_cnt),a
	ld	a,W_R				; animetion pattern
	ld	(ctrl_move_val),a

	xor	a
	ld	(actor_table + 106h),a		; animetion switch on
	ld	(auto_move_msk),a		; key check off

	ld	hl,obs_system
	set	7,(hl)				; hero demonstration mode on

	ld	a,seq_stepback
	ld	(seq_t5r2f6),a
	ld	(AdrsDealerTalk + 9),a

	ret


stepback:
	ld	a,(ctrl_move_cnt)
	and	a
	ret	nz

	call	put_wait

	xor	a
	ld	(seq_t5r2f6),a
	ld	(AdrsDealerTalk + 9),a

	ret


msg_t5r2f6:
	msgndw	msg2,msg_prayer1
	ndw	msg3,msg_prayer2
	ndw	msg4,msg_prayer3
	ndw	capsule_item,msg_capsule1
	ndw	capsule_item,msg_capsule2
	ndw	ghost_0,msg_ghost0
	ndw	ghost_1,msg_ghost1


dealer_talk:
d_talk1:
	db	msg_prayer1,030h
	dw	ev_t5_2 + 4
	dw	msg2_0
	dw	msg2_after
	dw	msg2_win
	dw	msg2_win

d_talk2:
	db	msg_prayer2,030h
	dw	ev_t5_2 + 4
	dw	msg3_0
	dw	msg3_after
	dw	msg3_win
	dw	msg3_win

d_talk3:
	db	msg_prayer3,020h
	dw	ev_t5_2 + 4
	dw	msg4_0
	dw	msg4_after
	dw	msg4_win
	dw	msg4_win

	db	0ffh


msg2:
	db	CALL_MSG

	ld	hl,d_talk1
	call	DealerTalking

	jp	msg_return


msg3:
	db	CALL_MSG

	ld	hl,d_talk2
	call	DealerTalking

	jp	msg_return



msg4:
	db	CALL_MSG

	ld	hl,d_talk3
	call	DealerTalking

	jp	msg_return


ghost_1:
	db	CALL_MSG

	ld	hl,ghost_1_0$
	call	put_win_msg

	ld	a,145
	call	gyaarth_play
	call	se_wait

	ld	c,30
	call	wait_vb_s

	ld	hl,ghost_1_1$
	call	put_win_msg

	jp	msg_return


ghost_1_0$:
	extern	ghost_1_0_0_T05R0206
	db I_MSG2	; mvmsg追加
	dw ghost_1_0_0_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


ghost_1_1$:
	extern	ghost_1_1_1_T05R0206
	db I_MSG2	; mvmsg追加
	dw ghost_1_1_1_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加

	




msg2_0:
	extern	msg2_0_2_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg2_0_2_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_win:
	extern	msg2_win_3_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg2_win_3_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg2_after:
	extern	msg2_after_4_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg2_after_4_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_0:
	extern	msg3_0_5_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg3_0_5_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_win:
	extern	msg3_win_6_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg3_win_6_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg3_after:
	extern	msg3_after_7_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg3_after_7_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_0:
	extern	msg4_0_8_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg4_0_8_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_win:
	extern	msg4_win_9_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg4_win_9_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


msg4_after:
	extern	msg4_after_10_T05R0206
	db I_MSG2	; mvmsg追加
	dw msg4_after_10_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加


ghost_0:
	extern	ghost_0_11_T05R0206
	db I_MSG2	; mvmsg追加
	dw ghost_0_11_T05R0206	; mvmsg追加
	db 026h	; mvmsg追加
	db EOM	; put_msg_s終了コード mvmsg追加



room_str:
	include	..\sxy\t05r0206.sxy

tower6:
	include	..\mapdata\nt_6f.map


