/**
 * @file trlEmuShellFont.cpp
 * @author zhfang, chentian
 * @date 2010.03.22
 * @brief TRL Emulate - EmuShell Font Module
 */
#include "trlEmuShellFont.h"

/** @name Macro Define */
//@{
#define TRL_FONT_COUNT		128
#define TRL_FONT_SIZE		64
#define TRL_FONT_BUFSIZE	(TRL_FONT_SIZE*TRL_FONT_COUNT)
//@}

/** @name Global Variable */
//@{
u16*		g_pTrlFontBitMap[TRL_FONT_MAX];
u32			g_nTrlFontBitMapData[] =
{
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,

    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,

    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,

    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
		// space ! " # $ % & '
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00011000, 0x00100100, 0x00100100, 0x00001000, 0x01100010, 0x00010000, 0x00011000,
    0x00000000, 0x00011000, 0x00100100, 0x00100100, 0x00111110, 0x01100100, 0x00101000, 0x00011000,
    0x00000000, 0x00011000, 0x00000000, 0x01111110, 0x01001000, 0x00001000, 0x00101000, 0x00001000,
    0x00000000, 0x00011000, 0x00000000, 0x00100100, 0x00111100, 0x00010000, 0x00110000, 0x00010000,
    0x00000000, 0x00011000, 0x00000000, 0x01111110, 0x00001010, 0x00100110, 0x01000110, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00100100, 0x01111100, 0x01000110, 0x01000010, 0x00000000,
    0x00000000, 0x00011000, 0x00000000, 0x00100100, 0x00001000, 0x00000000, 0x00111100, 0x00000000,
    
        // ( ) * + , - . /
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00001000, 0x00010000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000010,
    0x00010000, 0x00001000, 0x00100010, 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000100,
    0x00100000, 0x00000100, 0x00010100, 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00001000,
    0x00100000, 0x00000100, 0x00111110, 0x00111110, 0x00011000, 0x00111110, 0x00000000, 0x00010000,
    0x00100000, 0x00000100, 0x00010100, 0x00001000, 0x00011000, 0x00000000, 0x00000000, 0x00100000,
    0x00010000, 0x00001000, 0x00100010, 0x00001000, 0x00001000, 0x00000000, 0x00011000, 0x01000000,
    0x00001000, 0x00010000, 0x00000000, 0x00000000, 0x00010000, 0x00000000, 0x00011000, 0x00000000,
    
        // 0 1 2 3 4 5 6 7
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00011000, 0x00001000, 0x00111100, 0x00111100, 0x00000100, 0x01111110, 0x00011100, 0x01111110,
    0x00100100, 0x00011000, 0x01000010, 0x01000010, 0x00001100, 0x01000000, 0x00100000, 0x01000010,
    0x01000010, 0x00001000, 0x00000010, 0x00000010, 0x00010100, 0x01000000, 0x01000000, 0x00000100,
    0x01000010, 0x00001000, 0x00000100, 0x00001100, 0x00100100, 0x01111100, 0x01111100, 0x00001000,
    0x01000010, 0x00001000, 0x00001000, 0x00000010, 0x01111110, 0x00000010, 0x01000010, 0x00001000,
    0x00100100, 0x00001000, 0x00010000, 0x01000010, 0x00000100, 0x01000010, 0x01000010, 0x00001000,
    0x00011000, 0x00011100, 0x01111110, 0x00111100, 0x00000100, 0x00111100, 0x00111100, 0x00001000,
        // 8 9 : ; < = > ?
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00111100, 0x00111100, 0x00000000, 0x00011000, 0x00000100, 0x00000000, 0x00100000, 0x00111100,
    0x01000010, 0x01000010, 0x00011000, 0x00011000, 0x00001000, 0x00000000, 0x00010000, 0x01000010,
    0x01000010, 0x01000010, 0x00011000, 0x00000000, 0x00010000, 0x01111110, 0x00001000, 0x01000010,
    0x00111100, 0x00111110, 0x00000000, 0x00011000, 0x00100000, 0x00000000, 0x00000100, 0x00001100,
    0x01000010, 0x00000010, 0x00011000, 0x00011000, 0x00010000, 0x01111110, 0x00001000, 0x00011000,
    0x01000010, 0x00000010, 0x00011000, 0x00001000, 0x00001000, 0x00000000, 0x00010000, 0x00000000,
    0x00111100, 0x00111100, 0x00000000, 0x00010000, 0x00000100, 0x00000000, 0x00100000, 0x00011000,
        // @ A B C D E 1 G
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00111100, 0x00011000, 0x01111100, 0x00011100, 0x01111000, 0x01111110, 0x01111110, 0x00011100,
    0x01000010, 0x00100100, 0x01000010, 0x00100010, 0x01000100, 0x01000000, 0x01000000, 0x00100000,
    0x01000110, 0x01000010, 0x01000010, 0x01000000, 0x01000010, 0x01000000, 0x01000000, 0x01000000,
    0x01001010, 0x01000010, 0x01111100, 0x01000000, 0x01000010, 0x01111100, 0x01111100, 0x01001110,
    0x01001110, 0x01111110, 0x01000010, 0x01000000, 0x01000010, 0x01000000, 0x01000000, 0x01000010,
    0x01000000, 0x01000010, 0x01000010, 0x00100010, 0x01000100, 0x01000000, 0x01000000, 0x00100010,
    0x00111110, 0x01000010, 0x01111100, 0x00011100, 0x01111000, 0x01111110, 0x01000000, 0x00011100,
        // H I J K L M N O
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x01000010, 0x00011100, 0x00001110, 0x01000010, 0x01000000, 0x01000001, 0x01000010, 0x00111100,
    0x01000010, 0x00001000, 0x00000100, 0x01000100, 0x01000000, 0x01100011, 0x01100010, 0x01000010,
    0x01000010, 0x00001000, 0x00000100, 0x01001000, 0x01000000, 0x01010101, 0x01010010, 0x01000010,
    0x01111110, 0x00001000, 0x00000100, 0x01110000, 0x01000000, 0x01001001, 0x01001010, 0x01000010,
    0x01000010, 0x00001000, 0x00000100, 0x01001000, 0x01000000, 0x01001001, 0x01001010, 0x01000010,
    0x01000010, 0x00001000, 0x01000100, 0x01000100, 0x01000000, 0x01000001, 0x01000110, 0x01000010,
    0x01000010, 0x00011100, 0x00111000, 0x01000010, 0x01111110, 0x01000001, 0x01000010, 0x00111100,
        // P Q R S T U V W
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x01111100, 0x00111100, 0x01111100, 0x00111100, 0x01111111, 0x01000010, 0x01000010, 0x01000001,
    0x01000010, 0x01000010, 0x01000010, 0x01000010, 0x00001000, 0x01000010, 0x01000010, 0x01000001,
    0x01000010, 0x01000010, 0x01000010, 0x01000000, 0x00001000, 0x01000010, 0x01000010, 0x01000001,
    0x01111100, 0x01000010, 0x01111100, 0x00111100, 0x00001000, 0x01000010, 0x01000010, 0x01001001,
    0x01000000, 0x01001010, 0x01001000, 0x00000010, 0x00001000, 0x01000010, 0x00100100, 0x01001001,
    0x01000000, 0x01000100, 0x01000100, 0x01000010, 0x00001000, 0x01000010, 0x00100100, 0x01001001,
    0x01000000, 0x00111010, 0x01000010, 0x00111100, 0x00001000, 0x00111100, 0x00011000, 0x00110110,
        // X Y Z [ backslash ] ^ _
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x01000010, 0x01000001, 0x01111110, 0x00011100, 0x01000000, 0x00111000, 0x00011000, 0x00000000,
    0x01000010, 0x00100010, 0x00000010, 0x00010000, 0x00100000, 0x00001000, 0x00100100, 0x00000000,
    0x00100100, 0x00010100, 0x00000100, 0x00010000, 0x00010000, 0x00001000, 0x01000010, 0x00000000,
    0x00011000, 0x00001000, 0x00011000, 0x00010000, 0x00001000, 0x00001000, 0x00000000, 0x00000000,
    0x00100100, 0x00001000, 0x00100000, 0x00010000, 0x00000100, 0x00001000, 0x00000000, 0x00000000,
    0x01000010, 0x00001000, 0x01000000, 0x00010000, 0x00000010, 0x00001000, 0x00000000, 0x00000000,
    0x01000010, 0x00001000, 0x01111110, 0x00011100, 0x00000000, 0x00111000, 0x00000000, 0x01111110,
        // ` a b c d e f g
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00011000, 0x00000000, 0x00100000, 0x00000000, 0x00000010, 0x00000000, 0x00001100, 0x00000000,
    0x00011000, 0x00000000, 0x00100000, 0x00000000, 0x00000010, 0x00000000, 0x00010000, 0x00011110,
    0x00010000, 0x00111100, 0x00100000, 0x00111100, 0x00000010, 0x00111100, 0x00010000, 0x00100010,
    0x00001000, 0x01000100, 0x00111100, 0x01000000, 0x00011110, 0x01000010, 0x01111100, 0x00100010,
    0x00000000, 0x01000100, 0x00100010, 0x01000000, 0x00100010, 0x01111110, 0x00010000, 0x00011110,
    0x00000000, 0x01000100, 0x00100010, 0x01000000, 0x00100010, 0x01000000, 0x00010000, 0x00000010,
    0x00000000, 0x00111110, 0x00111100, 0x00111100, 0x00011110, 0x00111100, 0x00010000, 0x00011100,
        // h i j k l m n o
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00100000, 0x00000000, 0x00000100, 0x00000000, 0x00001000, 0x00000000, 0x00000000, 0x00000000,
    0x00100000, 0x00001000, 0x00000000, 0x00100000, 0x00001000, 0x00000000, 0x00000000, 0x00000000,
    0x00100000, 0x00000000, 0x00000100, 0x00100000, 0x00001000, 0x00101100, 0x00101100, 0x00011100,
    0x00101100, 0x00001000, 0x00000100, 0x00100100, 0x00001000, 0x01010010, 0x00110010, 0x00100010,
    0x00110010, 0x00001000, 0x00000100, 0x00101000, 0x00001000, 0x01010010, 0x00100010, 0x00100010,
    0x00100010, 0x00001000, 0x00100100, 0x00111000, 0x00001000, 0x01010010, 0x00100010, 0x00100010,
    0x00100010, 0x00001000, 0x00011000, 0x00100100, 0x00000100, 0x01010010, 0x00100010, 0x00011100,
        // p q r s t u v w
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00111000, 0x00011100, 0x00000000, 0x00000000, 0x00001000, 0x00000000, 0x00000000, 0x00000000,
    0x00100100, 0x00100100, 0x00101110, 0x00011110, 0x00111110, 0x00100010, 0x00100010, 0x01000010,
    0x00100100, 0x00100100, 0x00110000, 0x00100000, 0x00001000, 0x00100010, 0x00100010, 0x01001010,
    0x00111000, 0x00011100, 0x00100000, 0x00011100, 0x00001000, 0x00100010, 0x00100010, 0x01001010,
    0x00100000, 0x00000100, 0x00100000, 0x00000010, 0x00001000, 0x00100010, 0x00010100, 0x01001010,
    0x00100000, 0x00000110, 0x00100000, 0x00111100, 0x00000110, 0x00011110, 0x00001000, 0x00110100,
        // x y z { | } ~ hand pointer
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000100, 0x00001000, 0x00010000, 0x00110011, 0x00110000,
    0x00000000, 0x01000100, 0x00000000, 0x00001000, 0x00001000, 0x00001000, 0x01001100, 0x01100000,
    0x00100010, 0x01000100, 0x00111110, 0x00001000, 0x00001000, 0x00001000, 0x00000000, 0x11111111,
    0x00010100, 0x00100100, 0x00000100, 0x00110000, 0x00001000, 0x00000110, 0x00000000, 0x11111000,
    0x00001000, 0x00011100, 0x00001000, 0x00001000, 0x00001000, 0x00001000, 0x00000000, 0x11111000,
    0x00010100, 0x00000100, 0x00010000, 0x00001000, 0x00001000, 0x00001000, 0x00000000, 0x11100000,
    0x00100010, 0x00111000, 0x00111110, 0x00000100, 0x00001000, 0x00010000, 0x00000000, 0x00000000,
};
//@}

/** @brief Init Font */
void trlEmuShellFontInit()
{	
	for(u32 n=0;n<TRL_FONT_MAX;n++)
	{
		g_pTrlFontBitMap[n] = (u16*)trlMemAlloc(TRL_FONT_BUFSIZE*2);
		memset(g_pTrlFontBitMap[n], 0, TRL_FONT_BUFSIZE*2);
	}

	u16* pBitMap = (u16*)trlMemAlloc(TRL_FONT_BUFSIZE*2);
	for(int i=0;i<(TRL_FONT_COUNT*8);i++)
	{
		int index = (i/TRL_FONT_SIZE)*8 + (i%8);		
		int y = (i/8)%8;
		u32 nTemp = g_nTrlFontBitMapData[i];
		for(int x = 0;x<8;x++)
		{
			int ct = index*TRL_FONT_SIZE + y*8 + x;
			if(nTemp & (0x10000000>>(x*4)))
				pBitMap[ct] = 0xFFFF;
			else
				pBitMap[ct] = 0x0001;
		}
	}
	
	for(int i=0;i<TRL_FONT_COUNT;i++)
	{
		for(int j=0;j<TRL_FONT_SIZE;j++)
		{			
			int b1 = j/16;
			int b2 = (j%16)/4;
			int b3 = (j%4);

			int y = (b1/2)*4 + (b2/2)*2 + (b3/2);
			int x = (b1%2)*4 + (b2%2)*2 + (b3%2);
			g_pTrlFontBitMap[TRL_FONT_WHITE][i*TRL_FONT_SIZE + j] = pBitMap[i*TRL_FONT_SIZE + y*8 + x];
		}
	}
	trlMemFree(pBitMap);

	for(int i=0;i<TRL_FONT_BUFSIZE;i++)
	{
		g_pTrlFontBitMap[TRL_FONT_RED][i] = 0xF101 & g_pTrlFontBitMap[TRL_FONT_WHITE][i];
		g_pTrlFontBitMap[TRL_FONT_YELLOW][i] = 0xFFC1 & g_pTrlFontBitMap[TRL_FONT_WHITE][i];
	}
}

/** @brief Exit */
void trlEmuShellFontExit()
{
	for(u32 n=0;n<TRL_FONT_MAX;n++)
		trlMemFree(g_pTrlFontBitMap[n]);
}

/** @brief Draw Text */
void trlEmuShellFontDraw(u32 nX, u32 nY, u32 nTileX, const char *szText, u32 nCount, u16* pBuffer, u32 nColor)
{
	u16* pCur = pBuffer + (nY*nTileX + nX)*TRL_FONT_SIZE;
	u16* pFont = g_pTrlFontBitMap[nColor];
	for(u32 n=0; n<nCount; n++)
	{
		trlMemCopy(pCur, &pFont[szText[n]*TRL_FONT_SIZE], 2*TRL_FONT_SIZE);
		pCur += TRL_FONT_SIZE;
	}
}
